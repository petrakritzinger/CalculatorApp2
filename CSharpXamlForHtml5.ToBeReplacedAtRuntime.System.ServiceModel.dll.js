/* Generated by JSIL v0.8.2 build 30762. See http://jsil.org/ for more information. */ 
'use strict';
var $asm05 = JSIL.DeclareAssembly("CSharpXamlForHtml5.ToBeReplacedAtRuntime.System.ServiceModel.dll, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.DeclareNamespace("System");
JSIL.DeclareNamespace("System.ServiceModel");
/* class System.ServiceModel.ClientBase`1 */ 

(function ClientBase$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.NotSupportedException)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm02.System.ServiceModel.Channels.Binding)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm02.System.ServiceModel.EndpointAddress)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm01.System.Uri)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Type)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize(System.Array.Of($asm06.System.Reflection.MethodInfo))) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Reflection.MethodInfo)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.Reflection.MemberInfo)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.System.Threading.Tasks.Task$b1)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.NotSupportedException"), [$asm06.TypeRef("System.String")]))) ();
  };

  function ClientBase$b1__ctor$00 () {
    ;
    throw $S00().Construct("Please specify the Binding and Endpoint programmatically. See http://www.cshtml5.com/links/wcf-limitations-and-tutorials.aspx for details.");
  };

  function ClientBase$b1__ctor$01 (endpointConfigurationName) {
    ;
    throw $S00().Construct("Please specify the Binding and Endpoint programmatically. See http://www.cshtml5.com/links/wcf-limitations-and-tutorials.aspx for details.");
  };

  function ClientBase$b1__ctor$02 (binding, remoteAddress) {
    ;
    this._remoteAddressAsString = (remoteAddress['get_Uri']())['get_OriginalString']();
  };

  function ClientBase$b1__ctor$03 (endpointConfigurationName, remoteAddress) {
    ;
    throw $S00().Construct("Please specify the Binding and Endpoint programmatically. See http://www.cshtml5.com/links/wcf-limitations-and-tutorials.aspx for details.");
  };

  function ClientBase$b1__ctor$04 (endpointConfigurationName, remoteAddress) {
    ;
    throw $S00().Construct("Please specify the Binding and Endpoint programmatically. See http://www.cshtml5.com/links/wcf-limitations-and-tutorials.aspx for details.");
  };

  function ClientBase$b1_AppendAsyncMethodToObject (obj, methodName, interfaceType, methodReturnType) {
    obj[methodName] = function(REQUEST) { return obj['CallWebMethodAsync$b1'](methodReturnType)(methodName, interfaceType, methodReturnType, REQUEST); };
  };

  function ClientBase$b1_AppendMethodToObject (obj, methodName, interfaceType, methodReturnType) {
    obj[methodName] = function(REQUEST) { return obj['CallWebMethod'](methodName, interfaceType, methodReturnType, REQUEST); };
  };

  function ClientBase$b1_CreateConcreteClassThatImplementsInterface (interfaceType) {
    var webMethodsCaller = new ($asm05.System.ServiceModel.ClientBase$b1_WebMethodsCaller.Of($thisType.TChannel.get(this))) (this._remoteAddressAsString);
    var methods = interfaceType['GetMethods']();

    for (var i = 0; i < (methods.length | 0); i = ((i + 1) | 0)) {
      var methodInfo = methods[i];
      var name = methodInfo['get_Name']();
      if (!(!(methodInfo['get_ReturnType']())['get_IsGenericType']() || !$T06()['op_Equality']((methodInfo['get_ReturnType']())['GetGenericTypeDefinition'](), $T0B().__Type__))) {
        $thisType.Of($thisType.TChannel.get(this))['AppendAsyncMethodToObject'](webMethodsCaller, name, interfaceType, (methodInfo['get_ReturnType']())['GetGenericArguments']()[0]);
      } else {
        $thisType.Of($thisType.TChannel.get(this))['AppendMethodToObject'](webMethodsCaller, name, interfaceType, methodInfo['get_ReturnType']());
      }
    }
    return webMethodsCaller;
  };

  function ClientBase$b1_get_Channel () {
    return $thisType.TChannel.get(this).$Cast($thisType.Of($thisType.TChannel.get(this)).prototype['CreateConcreteClassThatImplementsInterface'].call(this, $thisType.TChannel.get(this)));
  };

  function ClientBase$b1_get_INTERNAL_RemoteAddressAsString () {
    return this._remoteAddressAsString;
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.ServiceModel.ClientBase`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TChannel"], 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void, 
      ClientBase$b1__ctor$00
    );

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.String), 
      ClientBase$b1__ctor$01
    );

    $.Method({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm02.TypeRef("System.ServiceModel.Channels.Binding"), $asm02.TypeRef("System.ServiceModel.EndpointAddress")]), 
      ClientBase$b1__ctor$02
    );

    $.Method({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm02.TypeRef("System.ServiceModel.EndpointAddress")]), 
      ClientBase$b1__ctor$03
    );

    $.Method({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String]), 
      ClientBase$b1__ctor$04
    );

    $.Method({Static:true , Public:false}, "AppendAsyncMethodToObject", 
      new JSIL.MethodSignature(null, [
          $.Object, $.String, 
          $asm06.TypeRef("System.Type"), $asm06.TypeRef("System.Type")
        ]), 
      ClientBase$b1_AppendAsyncMethodToObject
    );

    $.Method({Static:true , Public:false}, "AppendMethodToObject", 
      new JSIL.MethodSignature(null, [
          $.Object, $.String, 
          $asm06.TypeRef("System.Type"), $asm06.TypeRef("System.Type")
        ]), 
      ClientBase$b1_AppendMethodToObject
    );

    $.Method({Static:false, Public:false}, "CreateConcreteClassThatImplementsInterface", 
      new JSIL.MethodSignature($.Object, [$asm06.TypeRef("System.Type")]), 
      ClientBase$b1_CreateConcreteClassThatImplementsInterface
    );

    $.Method({Static:false, Public:false}, "get_Channel", 
      new JSIL.MethodSignature($.GenericParameter("TChannel"), null), 
      ClientBase$b1_get_Channel
    );

    $.Method({Static:false, Public:false}, "get_INTERNAL_RemoteAddressAsString", 
      JSIL.MethodSignature.Return($.String), 
      ClientBase$b1_get_INTERNAL_RemoteAddressAsString
    );

    $['Field']({Static:false, Public:false}, "_remoteAddressAsString", $.String); 
    $.Property({Static:false, Public:false}, "INTERNAL_RemoteAddressAsString", $.String);

    $.Property({Static:false, Public:false}, "Channel", $.GenericParameter("TChannel"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.ClientBase`1+WebMethodsCaller */ 

(function WebMethodsCaller$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.System.INTERNAL_WebRequestHelper)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm02.System.ServiceModel.FaultException)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Type)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm06.System.String, $asm06.System.String))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Reflection.MemberInfo)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm01.System.Uri)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.Action$b1.Of($asm02.System.ServiceModel.FaultException))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm01.System.Net.DownloadStringCompletedEventHandler)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize(System.Array.Of($asm06.System.String))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm04.System.Xml.Serialization.XmlSerializer)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.System.IO.MemoryStream)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm06.System.IO.Stream)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm06.System.Int64)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm06.System.IO.SeekOrigin)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm06.System.IO.StreamReader)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm06.System.IO.TextReader)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm06.System.Char)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm06.System.Activator)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm06.System.Reflection.FieldInfo)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm06.System.Text.Encoding)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm04.System.Xml.XmlReader)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm06.System.Convert)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm01.System.Net.DownloadStringCompletedEventArgs)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Uri"), [$asm06.TypeRef("System.String")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("System.String"), $asm06.TypeRef("System.String")]), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("System.Xml.Serialization.XmlSerializer"), [$asm06.TypeRef("System.Type")]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.IO.MemoryStream"), null))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm06.TypeRef("System.IO.Stream"), $asm06.TypeRef("System.Object")]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.IO.StreamReader"), [$asm06.TypeRef("System.IO.Stream")]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("System.Object"), [$asm06.TypeRef("System.Type")]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.ConstructorSignature($asm02.TypeRef("System.ServiceModel.FaultException"), [$asm06.TypeRef("System.String")]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.IO.MemoryStream"), [$jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Byte")])]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Byte")]), [$asm06.TypeRef("System.String")]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.MethodSignature($asm04.TypeRef("System.Xml.XmlReader"), [$asm06.TypeRef("System.IO.Stream")]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("System.Object"), [$asm06.TypeRef("System.Object"), $asm06.TypeRef("System.Type")]))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("System.Object"), [$asm04.TypeRef("System.Xml.XmlReader")]))) ();
  };

  function WebMethodsCaller__ctor (addressOfService) {
    this._webRequestHelper = new ($T01())();
    this._addressOfService = addressOfService;
  };

  function WebMethodsCaller_$lCallWebMethod$gb__9 (faultException) {
    throw faultException;
  };

  function WebMethodsCaller_CallWebMethod (methodName, interfacetype, methodReturnType, originalRequestObject) {
    var headers = new JSIL.BoxedVariable(null);
    var body = new JSIL.BoxedVariable(null);
    var name = interfacetype['get_Name']();
    var requestBody = originalRequestObject.Body;
    $thisType.Of($thisType.TChannel.get(this)).prototype['PrepareRequest'].call(this, 
      methodName, 
      name, 
      requestBody, 
      /* ref */ headers, 
      /* ref */ body
    );
    var responseAsString = (this._webRequestHelper)['MakeRequest'](
      $S00().Construct(this._addressOfService), 
      "POST", 
      headers.get(), 
      body.get(), 
      null, 
      false
    );
    return $thisType.Of($thisType.TChannel.get(this)).prototype['ReadAndPrepareResponse'].call(this, responseAsString, methodReturnType, $T08()['New']($thisType.Of($thisType.TChannel.get(this)), $thisType.Of($thisType.TChannel.get(this))['$lCallWebMethod$gb__9'], function () { return JSIL.GetMethodInfo($thisType.Of($thisType.TChannel.get(this)), "$lCallWebMethod$gb__9", JSIL.MethodSignature.Action($asm02.TypeRef("System.ServiceModel.FaultException")), true); }));
  };

  function WebMethodsCaller_CallWebMethodAsync$b1 (T, methodName, interfacetype, methodReturnType, originalRequestObject) {
    var $s00 = new JSIL.ConstructorSignature($asm06.TypeRef("System.Threading.Tasks.TaskCompletionSource`1", [T]), null);
    var headers = new JSIL.BoxedVariable(null);
    var body = new JSIL.BoxedVariable(null);
    var $closure0 = new ($asm05.System.ServiceModel.ClientBase$b1_WebMethodsCaller_$l$gc__DisplayClass5$b1.Of($thisType.TChannel.get(this), T)) ();
    $closure0.methodReturnType = methodReturnType;
    $closure0.$l$g4__this = this;
    var name = interfacetype['get_Name']();
    var requestBody = originalRequestObject.Body;
    var text = methodName;
    if (System.String.EndsWith(text, "Async")) {
      text = (text.substr(0, (((text.length | 0) - 5) | 0)));
    }
    $thisType.Of($thisType.TChannel.get(this)).prototype['PrepareRequest'].call(this, 
      text, 
      name, 
      requestBody, 
      /* ref */ headers, 
      /* ref */ body
    );
    $closure0.taskCompletionSource = $s00.Construct();
    var text2 = (this._webRequestHelper)['MakeRequest'](
      $S00().Construct(this._addressOfService), 
      "POST", 
      headers.get(), 
      body.get(), 
      $T0A()['New']($closure0, $asm05.System.ServiceModel.ClientBase$b1_WebMethodsCaller_$l$gc__DisplayClass5$b1.Of($thisType.TChannel.get(this), T).prototype['$lCallWebMethodAsync$gb__4'], function () { return JSIL.GetMethodInfo($asm05.System.ServiceModel.ClientBase$b1_WebMethodsCaller_$l$gc__DisplayClass5$b1.Of($thisType.TChannel.get(this), T), "$lCallWebMethodAsync$gb__4", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm01.System.Net.DownloadStringCompletedEventArgs]), false); }), 
      true
    );
    return ($closure0.taskCompletionSource)['get_Task']();
  };

  function WebMethodsCaller_PrepareRequest (methodName, interfaceTypeName, requestBody, /* ref */ headers, /* ref */ request) {
    headers.set($S01().Construct());
    (headers.get())['Add']("Content-Type", "text/xml; charset=utf-8");
    (headers.get())['Add']("SOAPAction", JSIL.ConcatString.apply(null, JSIL.Array.New($T00(), ["\"http://tempuri.org/", interfaceTypeName, "/", methodName, "\""])));
    request.set((("<s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\"><s:Body><" + methodName + " xmlns=\"http://tempuri.org/\">")));
    var type = JSIL['GetType'](requestBody);
    var xmlSerializer = $S02().Construct(type);
    var memoryStream = $S03().Construct();
    $S04().CallVirtual("Serialize", null, xmlSerializer, memoryStream, requestBody);
    memoryStream['Seek']($T0F()['Create'](0, 0, 0), $T10().Begin);
    var streamReader = $S05().Construct(memoryStream);
    var text = streamReader['ReadToEnd']();
    var num = (text.indexOf("<?xml version=\"1.0\" encoding=\"utf-8\"?>"));
    if (num !== -1) {
      text = (System.String.Remove(text, num, "<?xml version=\"1.0\" encoding=\"utf-8\"?>".length));
    }
    num = (text.indexOf(type['get_Name']()));
    text = (System.String.Remove(text, ((num - 1) | 0), (((type['get_Name']().length | 0) + 2) | 0)));
    num = (text.indexOf(type['get_Name']()));
    text = (System.String.Remove(text, ((num - 2) | 0), (((type['get_Name']().length | 0) + 3) | 0)));
    request.set((JSIL.ConcatString(request.get(), text)));
    request.set(((request.get() + "</" + methodName + "></s:Body></s:Envelope>")));
  };

  function WebMethodsCaller_ReadAndPrepareResponse (responseAsString, requestResponseType, raiseFaultException) {
    var num = (responseAsString.indexOf(":Body"));
    var num2 = (responseAsString.indexOf(">", num));
    responseAsString = (System.String.Remove(responseAsString, 0, ((num2 + 1) | 0)));
    num = (responseAsString.lastIndexOf(":Body"));
    num2 = (responseAsString.substr(0, num).lastIndexOf("<"));
    responseAsString = (responseAsString.substr(0, num2));

    for (var num3 = (responseAsString.indexOf("xmlns")); num3 !== -1; ) {
      var num4 = (responseAsString.indexOf("\"", num3));
      num4 = (responseAsString.indexOf("\"", ((num4 + 1) | 0)));
      responseAsString = (System.String.Remove(responseAsString, num3, ((((num4 - num3) | 0) + 1) | 0)));
      num3 = (responseAsString.indexOf("xmlns"));
    }
    var obj = $S06().CallStatic($T14(), "CreateInstance", null, requestResponseType);
    var field = requestResponseType['GetField']("Body");
    if ($T15()['op_Inequality'](field, null)) {
      var fieldType = field['get_FieldType']();
      var name = fieldType['get_Name']();
      var str = (System.String.Replace(name, "Body", ""));
      responseAsString = (System.String.Replace(responseAsString, JSIL.ConcatString("<", str), JSIL.ConcatString("<", name)));
      responseAsString = (System.String.Replace(responseAsString, JSIL.ConcatString("</", str), JSIL.ConcatString("</", name)));
      var num5 = (responseAsString.indexOf(":Fault>"));
      if (num5 === -1) {
        num5 = (responseAsString.indexOf("<Fault>"));
      }
      if (num5 !== -1) {
        num5 = (responseAsString.indexOf("<faultstring", num5));
        if (num5 !== -1) {
          num5 = (responseAsString.indexOf(">", num5));
          responseAsString = (System.String.Remove(responseAsString, 0, ((num5 + 1) | 0)));
          num5 = (responseAsString.indexOf("</faultstring"));
          responseAsString = (responseAsString.substr(0, num5));
          var obj2 = $S07().Construct(responseAsString);
          raiseFaultException(obj2);
          var result = null;
          return result;
        }
      }
      var xmlSerializer = $S02().Construct(fieldType);
      var input = $S08().Construct($S09().CallVirtual("GetBytes", null, $T16()['get_UTF8'](), responseAsString));
      var xmlReader = $S0A().CallStatic($T17(), "Create", null, input);
      var value2 = $S0B().CallStatic($T18(), "ChangeType", null, $S0C().CallVirtual("Deserialize", null, xmlSerializer, xmlReader), fieldType);
      field['SetValue'](obj, value2);
    }
    result = obj;
    return result;
  };

  function WebMethodsCaller_ReadAndPrepareResponseGeneric$b1 (T, taskCompletionSource, e, requestResponseType) {
    var $closure0 = new ($asm05.System.ServiceModel.ClientBase$b1_WebMethodsCaller_$l$gc__DisplayClassc$b1.Of($thisType.TChannel.get(this), T)) ();
    $closure0.taskCompletionSource = taskCompletionSource;
    var t = JSIL.CloneParameter(T, T.$Cast($thisType.Of($thisType.TChannel.get(this)).prototype['ReadAndPrepareResponse'].call(this, e.DownloadStringCompletedEventArgs$Result$value, requestResponseType, $T08()['New']($closure0, $asm05.System.ServiceModel.ClientBase$b1_WebMethodsCaller_$l$gc__DisplayClassc$b1.Of($thisType.TChannel.get(this), T).prototype['$lReadAndPrepareResponseGeneric$gb__b'], function () { return JSIL.GetMethodInfo($asm05.System.ServiceModel.ClientBase$b1_WebMethodsCaller_$l$gc__DisplayClassc$b1.Of($thisType.TChannel.get(this), T), "$lReadAndPrepareResponseGeneric$gb__b", JSIL.MethodSignature.Action($asm02.TypeRef("System.ServiceModel.FaultException")), false); }))));
    if (t !== null) {
      $asm06.System.Threading.Tasks.TaskCompletionSource$b1.Of(T).prototype['SetResult'].call($closure0.taskCompletionSource, JSIL.CloneParameter(T, t));
    }
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.ServiceModel.ClientBase`1+WebMethodsCaller", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TChannel"], 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String), 
      WebMethodsCaller__ctor
    );

    $.Method({Static:true , Public:false}, "$lCallWebMethod$gb__9", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.ServiceModel.FaultException")), 
      WebMethodsCaller_$lCallWebMethod$gb__9
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "CallWebMethod", 
      new JSIL.MethodSignature($.Object, [
          $.String, $asm06.TypeRef("System.Type"), 
          $asm06.TypeRef("System.Type"), $.Object
        ]), 
      WebMethodsCaller_CallWebMethod
    );

    $.Method({Static:false, Public:true }, "CallWebMethodAsync", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Threading.Tasks.Task`1", ["!!0"]), [
          $.String, $asm06.TypeRef("System.Type"), 
          $asm06.TypeRef("System.Type"), $.Object
        ], ["T"]), 
      WebMethodsCaller_CallWebMethodAsync$b1
    );

    $.Method({Static:false, Public:false}, "PrepareRequest", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.Object, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.String])]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ]), 
      WebMethodsCaller_PrepareRequest
    );

    $.Method({Static:false, Public:false}, "ReadAndPrepareResponse", 
      new JSIL.MethodSignature($.Object, [
          $.String, $asm06.TypeRef("System.Type"), 
          $asm06.TypeRef("System.Action`1", [$asm02.TypeRef("System.ServiceModel.FaultException")])
        ]), 
      WebMethodsCaller_ReadAndPrepareResponse
    );

    $.Method({Static:false, Public:false}, "ReadAndPrepareResponseGeneric", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.Threading.Tasks.TaskCompletionSource`1", ["!!0"]), $asm01.TypeRef("System.Net.DownloadStringCompletedEventArgs"), 
          $asm06.TypeRef("System.Type")
        ], ["T"]), 
      WebMethodsCaller_ReadAndPrepareResponseGeneric$b1
    );

    $['Field']({Static:false, Public:false}, "_xmlHttpRequest", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute")); 
    $['Field']({Static:false, Public:false}, "_addressOfService", $.String); 
    $['Field']({Static:false, Public:false}, "_webRequestHelper", $asm01.TypeRef("System.INTERNAL_WebRequestHelper")); 
    $['Field']({Static:true , Public:false}, "CS$$l$g9__CachedAnonymousMethodDelegatea", $asm06.TypeRef("System.Action`1", [$asm02.TypeRef("System.ServiceModel.FaultException")]))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.ClientBase`1+WebMethodsCaller+<>c__DisplayClass5`1 */ 

(function $l$gc__DisplayClass5$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.System.Net.DownloadStringCompletedEventArgs)) ();
  };

  function $l$gc__DisplayClass5$b1__ctor () {
  };

  function $l$gc__DisplayClass5$b1_$lCallWebMethodAsync$gb__4 (sender, args2) {
    $asm05.System.ServiceModel.ClientBase$b1_WebMethodsCaller.Of($thisType.TChannel.get(this)).prototype['ReadAndPrepareResponseGeneric$b1']($thisType.T.get(this)).call(this.$l$g4__this, this.taskCompletionSource, args2, this.methodReturnType);
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.ServiceModel.ClientBase`1+WebMethodsCaller+<>c__DisplayClass5`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TChannel", "T"], 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClass5$b1__ctor
    );

    $.Method({Static:false, Public:true }, "$lCallWebMethodAsync$gb__4", 
      new JSIL.MethodSignature(null, [$.Object, $asm01.TypeRef("System.Net.DownloadStringCompletedEventArgs")]), 
      $l$gc__DisplayClass5$b1_$lCallWebMethodAsync$gb__4
    );

    $['Field']({Static:false, Public:true }, "taskCompletionSource", $asm06.TypeRef("System.Threading.Tasks.TaskCompletionSource`1", [$.GenericParameter("T")])); 
    $['Field']({Static:false, Public:true }, "$l$g4__this", $asm05.TypeRef("System.ServiceModel.ClientBase`1+WebMethodsCaller", [$.GenericParameter("TChannel")])); 
    $['Field']({Static:false, Public:true }, "methodReturnType", $asm06.TypeRef("System.Type")); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ServiceModel.ClientBase`1+WebMethodsCaller+<>c__DisplayClassc`1 */ 

(function $l$gc__DisplayClassc$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.System.ServiceModel.FaultException)) ();
  };

  function $l$gc__DisplayClassc$b1__ctor () {
  };

  function $l$gc__DisplayClassc$b1_$lReadAndPrepareResponseGeneric$gb__b (faultException) {
    var $s00 = new JSIL.MethodSignature($asm06.System.Boolean, [$asm06.System.Exception]);
    $s00.Call($asm06.System.Threading.Tasks.TaskCompletionSource$b1.Of($thisType.T.get(this)).prototype, "TrySetException", null, this.taskCompletionSource, faultException);
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.ServiceModel.ClientBase`1+WebMethodsCaller+<>c__DisplayClassc`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TChannel", "T"], 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClassc$b1__ctor
    );

    $.Method({Static:false, Public:true }, "$lReadAndPrepareResponseGeneric$gb__b", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.ServiceModel.FaultException")), 
      $l$gc__DisplayClassc$b1_$lReadAndPrepareResponseGeneric$gb__b
    );

    $['Field']({Static:false, Public:true }, "taskCompletionSource", $asm06.TypeRef("System.Threading.Tasks.TaskCompletionSource`1", [$.GenericParameter("T")])); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();


/* Generated by JSIL v0.8.2 build 30762. See http://jsil.org/ for more information. */ 
'use strict';
var $asm00 = JSIL.DeclareAssembly("CSharpXamlForHtml5, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null");

JSIL.DeclareNamespace("DotNetForHtml5");
JSIL.DeclareNamespace("DotNetForHtml5.Core");
/* class DotNetForHtml5.Core.INTERNAL_ListsHelper */ 

(function INTERNAL_ListsHelper$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Collections.IEnumerable)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm06.System.Object))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Collections.IEnumerator)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.IDisposable)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("System.Object")]), null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm06.System.Collections.IEnumerable.GetEnumerator)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm06.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm06.System.Collections.IEnumerator.get_Current)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm06.System.IDisposable.Dispose)) ();
  };

  function INTERNAL_ListsHelper_ConvertToListOfObjectsOrNull (enumerable) {
    var list = null;
    if (enumerable !== null) {
      list = $S00().Construct();
      var enumerator = $IM00().Call(enumerable, null);
      try {

        while ($IM01().Call(enumerator, null)) {
          var current = $IM02().Call(enumerator, null);
          list['Add'](current);
        }
      } finally {
        var disposable = $T04().$As(enumerator);
        if (disposable !== null) {
          $IM03().Call(disposable, null);
        }
      }
    }
    return list;
  };

  JSIL.MakeStaticClass("DotNetForHtml5.Core.INTERNAL_ListsHelper", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:false}, "ConvertToListOfObjectsOrNull", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$.Object]), [$asm06.TypeRef("System.Collections.IEnumerable")]), 
      INTERNAL_ListsHelper_ConvertToListOfObjectsOrNull
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class DotNetForHtml5.Core.INTERNAL_NoValue */ 

(function INTERNAL_NoValue$Members () {
  var $, $thisType;
  function INTERNAL_NoValue__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "DotNetForHtml5.Core.INTERNAL_NoValue", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void, 
      INTERNAL_NoValue__ctor
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "NoValue", $.Type); 
    function INTERNAL_NoValue__cctor () {
      $thisType.NoValue = new $thisType();
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      INTERNAL_NoValue__cctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class DotNetForHtml5.Core.INTERNAL_Simulator */ 

(function INTERNAL_Simulator$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Object)) ();
  };

  function INTERNAL_Simulator_get_HtmlDocument () {
    return $thisType.htmlDocument;
  };

  function INTERNAL_Simulator_get_JavaScriptExecutionHandler () {
    return $thisType.javaScriptExecutionHandler;
  };

  function INTERNAL_Simulator_get_WebControl () {
    return $thisType.webControl;
  };

  function INTERNAL_Simulator_get_WpfMediaElementFactory () {
    return $thisType.wpfMediaElementFactory;
  };

  function INTERNAL_Simulator_set_HtmlDocument (value) {
    $thisType.htmlDocument = value;
  };

  function INTERNAL_Simulator_set_JavaScriptExecutionHandler (value) {
    $thisType.javaScriptExecutionHandler = value;
  };

  function INTERNAL_Simulator_set_WebControl (value) {
    $thisType.webControl = value;
  };

  function INTERNAL_Simulator_set_WpfMediaElementFactory (value) {
    $thisType.wpfMediaElementFactory = value;
  };

  JSIL.MakeStaticClass("DotNetForHtml5.Core.INTERNAL_Simulator", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:false}, "get_HtmlDocument", 
      JSIL.MethodSignature.Return($.Object), 
      INTERNAL_Simulator_get_HtmlDocument
    );

    $.Method({Static:true , Public:false}, "get_JavaScriptExecutionHandler", 
      JSIL.MethodSignature.Return($.Object), 
      INTERNAL_Simulator_get_JavaScriptExecutionHandler
    );

    $.Method({Static:true , Public:false}, "get_WebControl", 
      JSIL.MethodSignature.Return($.Object), 
      INTERNAL_Simulator_get_WebControl
    );

    $.Method({Static:true , Public:false}, "get_WpfMediaElementFactory", 
      JSIL.MethodSignature.Return($.Object), 
      INTERNAL_Simulator_get_WpfMediaElementFactory
    );

    $.Method({Static:true , Public:true }, "set_HtmlDocument", 
      JSIL.MethodSignature.Action($.Object), 
      INTERNAL_Simulator_set_HtmlDocument
    )
      .Parameter(0, "value", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:true , Public:true }, "set_JavaScriptExecutionHandler", 
      JSIL.MethodSignature.Action($.Object), 
      INTERNAL_Simulator_set_JavaScriptExecutionHandler
    )
      .Parameter(0, "value", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:true , Public:true }, "set_WebControl", 
      JSIL.MethodSignature.Action($.Object), 
      INTERNAL_Simulator_set_WebControl
    )
      .Parameter(0, "value", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:true , Public:true }, "set_WpfMediaElementFactory", 
      JSIL.MethodSignature.Action($.Object), 
      INTERNAL_Simulator_set_WpfMediaElementFactory
    )
      .Parameter(0, "value", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $['Field']({Static:true , Public:false}, "htmlDocument", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute")); 
    $['Field']({Static:true , Public:false}, "webControl", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute")); 
    $['Field']({Static:true , Public:false}, "javaScriptExecutionHandler", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute")); 
    $['Field']({Static:true , Public:false}, "wpfMediaElementFactory", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute")); 
    $.Property({Static:true , Public:false}, "HtmlDocument", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"));

    $.Property({Static:true , Public:false}, "WebControl", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"));

    $.Property({Static:true , Public:false}, "JavaScriptExecutionHandler", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"));

    $.Property({Static:true , Public:false}, "WpfMediaElementFactory", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class DotNetForHtml5.Core.INTERNAL_TypeToDependencyPropertiesThatRequirePropertyChanged */ 

(function INTERNAL_TypeToDependencyPropertiesThatRequirePropertyChanged$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm06.System.Type, $asm06.System.Collections.Generic.List$b1.Of($asm00.Windows.UI.Xaml.DependencyProperty)))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Type)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm00.Windows.UI.Xaml.DependencyProperty))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("System.Type"), $asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")])]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")]), null))) ();
  };

  function INTERNAL_TypeToDependencyPropertiesThatRequirePropertyChanged_Add (ownerType, dependencyProperty) {
    ($thisType['GetCollectionForType'](ownerType))['Add'](dependencyProperty);
  };

  function INTERNAL_TypeToDependencyPropertiesThatRequirePropertyChanged_GetCollectionForType (ownerType) {
    if ($thisType.TypeToDependencyPropertiesThatRequirePropertyChanged['ContainsKey'](ownerType)) {
      var list = $thisType.TypeToDependencyPropertiesThatRequirePropertyChanged['get_Item'](ownerType);
      if (list === null) {
        list = $S01().Construct();
        $thisType.TypeToDependencyPropertiesThatRequirePropertyChanged['set_Item'](ownerType, list);
      }
    } else {
      list = $S01().Construct();
      $thisType.TypeToDependencyPropertiesThatRequirePropertyChanged['Add'](ownerType, list);
    }
    return list;
  };

  JSIL.MakeStaticClass("DotNetForHtml5.Core.INTERNAL_TypeToDependencyPropertiesThatRequirePropertyChanged", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "Add", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Type"), $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")]), 
      INTERNAL_TypeToDependencyPropertiesThatRequirePropertyChanged_Add
    );

    $.Method({Static:true , Public:false}, "GetCollectionForType", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")]), [$asm06.TypeRef("System.Type")]), 
      INTERNAL_TypeToDependencyPropertiesThatRequirePropertyChanged_GetCollectionForType
    );

    $['Field']({Static:true , Public:true }, "TypeToDependencyPropertiesThatRequirePropertyChanged", $asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("System.Type"), $asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")])])); 
    function INTERNAL_TypeToDependencyPropertiesThatRequirePropertyChanged__cctor () {
      $thisType.TypeToDependencyPropertiesThatRequirePropertyChanged = $S00().Construct();
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      INTERNAL_TypeToDependencyPropertiesThatRequirePropertyChanged__cctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class DotNetForHtml5.Core.DelegateUtility */ 

(function DelegateUtility$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Type)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Delegate)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize(System.Array.Of($asm06.System.Delegate))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("System.Delegate"), [
        $asm06.TypeRef("System.Type"), $asm06.TypeRef("System.Object"), 
        $asm06.TypeRef("System.Reflection.MethodInfo")
      ]))) ();
  };

  function DelegateUtility_Cast$b1 (T, source) {
    return T.$As($thisType['Cast'](source, T));
  };

  function DelegateUtility_Cast (source, type) {
    if (source === null) {
      var result = null;
    } else {
      var invocationList = source['GetInvocationList']();
      if ((invocationList.length | 0) === 1) {
        result = $S00().CallStatic($T01(), "CreateDelegate", null, 
          type, 
          (invocationList[0])['get_Target'](), 
          (invocationList[0])['get_Method']()
        );
      } else {
        var array = JSIL.Array.New($T01(), invocationList.length);

        for (var i = 0; i < (invocationList.length | 0); i = ((i + 1) | 0)) {
          array[i] = $S00().CallStatic($T01(), "CreateDelegate", null, 
            type, 
            (invocationList[i])['get_Target'](), 
            (invocationList[i])['get_Method']()
          );
        }
        result = $T01()['Combine'](array);
      }
    }
    return result;
  };

  JSIL.MakeStaticClass("DotNetForHtml5.Core.DelegateUtility", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:false}, "Cast", 
      new JSIL.MethodSignature("!!0", [$asm06.TypeRef("System.Delegate")], ["T"]), 
      DelegateUtility_Cast$b1
    );

    $.Method({Static:true , Public:true }, "Cast", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Delegate"), [$asm06.TypeRef("System.Delegate"), $asm06.TypeRef("System.Type")]), 
      DelegateUtility_Cast
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class DotNetForHtml5.Core.INTERNAL_EventManager`2 */ 

(function INTERNAL_EventManager$b2$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Func$b1.Of($asm06.System.Object))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Action$b1.Of($asm06.System.Object))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm00.DotNetForHtml5.Core.HtmlEventProxy))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize(System.Array.Of($asm06.System.String))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_EventsHelper)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.DotNetForHtml5.Core.HtmlEventProxy)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("DotNetForHtml5.Core.HtmlEventProxy")]), null))) ();
  };

  function INTERNAL_EventManager$b2__ctor$00 (domElementProvider, domEventsNamesToListenTo, actionOnEvent) {
    var $s00 = new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$thisType.EVENT_HANDLER.get(this)]), null);
    this._htmlEventProxies = $S00().Construct();
    this._listOfHandlers = $s00.Construct();
    this._isListeningToDomEvents = false;
    this._domEventsNamesToListenTo = JSIL.Array.New($T01(), [domEventsNamesToListenTo]);
    this._actionOnEvent = actionOnEvent;
    this._domElementProvider = domElementProvider;
  };

  function INTERNAL_EventManager$b2__ctor$01 (domElementProvider, domEventsNamesToListenTo, actionOnEvent) {
    var $s00 = new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$thisType.EVENT_HANDLER.get(this)]), null);
    this._htmlEventProxies = $S00().Construct();
    this._listOfHandlers = $s00.Construct();
    this._isListeningToDomEvents = false;
    this._domEventsNamesToListenTo = domEventsNamesToListenTo;
    this._actionOnEvent = actionOnEvent;
    this._domElementProvider = domElementProvider;
  };

  function INTERNAL_EventManager$b2_$lStartListeningToDomEventsIfNotAlreadyListening$gb__7 (e) {
    $thisType.Of($thisType.EVENT_HANDLER.get(this), $thisType.EVENT_ARGS.get(this)).prototype['OnEvent'].call(this, e);
  };

  function INTERNAL_EventManager$b2_Add (value) {
    $thisType.Of($thisType.EVENT_HANDLER.get(this), $thisType.EVENT_ARGS.get(this)).prototype['StartListeningToDomEventsIfNotAlreadyListening'].call(this);
    (this._listOfHandlers)['Add'](JSIL.CloneParameter($thisType.EVENT_HANDLER.get(this), value));
  };

  function INTERNAL_EventManager$b2_AttachToDomEvents () {
    if (((this._listOfHandlers)['get_Count']() | 0) > 0) {
      $thisType.Of($thisType.EVENT_HANDLER.get(this), $thisType.EVENT_ARGS.get(this)).prototype['StartListeningToDomEventsIfNotAlreadyListening'].call(this);
    }
  };

  function INTERNAL_EventManager$b2_DetachFromDomEvents () {
    if (!(!this._isListeningToDomEvents || (this._htmlEventProxies === null))) {
      $thisType.Of($thisType.EVENT_HANDLER.get(this), $thisType.EVENT_ARGS.get(this)).prototype['StopListeningToDomEvents'].call(this);
    }
  };

  function INTERNAL_EventManager$b2_get_Handlers () {
    return this._listOfHandlers;
  };

  function INTERNAL_EventManager$b2_HackToRemoveDelegateFromListOfDelegates (list, delegateToRemove) {

  $loop0: 
    for (var i = 0; i < (list['get_Count']() | 0); i = ((i + 1) | 0)) {
      if ((list['get_Item'](i).__method__ == delegateToRemove.__method__)) {
        list['RemoveAt'](i);
        break $loop0;
      }
    }
  };

  function INTERNAL_EventManager$b2_OnEvent (e) {
    if (!((this._htmlEventProxies === null) || (((this._htmlEventProxies)['get_Count']() | 0) === 0))) {
      this._actionOnEvent(e);
    }
  };

  function INTERNAL_EventManager$b2_Remove (value) {
    $thisType.Of($thisType.EVENT_HANDLER.get(this), $thisType.EVENT_ARGS.get(this)).prototype['HackToRemoveDelegateFromListOfDelegates'].call(this, this._listOfHandlers, JSIL.CloneParameter($thisType.EVENT_HANDLER.get(this), value));
    if (((this._listOfHandlers)['get_Count']() | 0) === 0) {
      $thisType.Of($thisType.EVENT_HANDLER.get(this), $thisType.EVENT_ARGS.get(this)).prototype['StopListeningToDomEvents'].call(this);
    }
  };

  function INTERNAL_EventManager$b2_StartListeningToDomEventsIfNotAlreadyListening () {
    if (!this._isListeningToDomEvents) {
      var obj = this._domElementProvider();
      if (obj !== null) {
        if (this._htmlEventProxies === null) {
          this._htmlEventProxies = $S00().Construct();
        }
        var domEventsNamesToListenTo = this._domEventsNamesToListenTo;

        for (var i = 0; i < (domEventsNamesToListenTo.length | 0); i = ((i + 1) | 0)) {
          var text = domEventsNamesToListenTo[i];
          (this._htmlEventProxies)['Add']($T07()['AttachToDomEvents'](text, obj, $T02()['New'](this, $thisType.Of($thisType.EVENT_HANDLER.get(this), $thisType.EVENT_ARGS.get(this)).prototype['$lStartListeningToDomEventsIfNotAlreadyListening$gb__7'], function () { return JSIL.GetMethodInfo($thisType.Of($thisType.EVENT_HANDLER.get(this), $thisType.EVENT_ARGS.get(this)), "$lStartListeningToDomEventsIfNotAlreadyListening$gb__7", JSIL.MethodSignature.Action($.Object), false); })));
        }
        this._isListeningToDomEvents = true;
      }
    }
  };

  function INTERNAL_EventManager$b2_StopListeningToDomEvents () {
    if (!(!this._isListeningToDomEvents || (this._htmlEventProxies === null))) {

      for (var i = ((((this._htmlEventProxies)['get_Count']() | 0) - 1) | 0); i >= 0; i = ((i - 1) | 0)) {
        ((this._htmlEventProxies)['get_Item'](i))['Dispose']();
        (this._htmlEventProxies)['RemoveAt'](i);
      }
    }
    this._isListeningToDomEvents = false;
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "DotNetForHtml5.Core.INTERNAL_EventManager`2", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["EVENT_HANDLER", "EVENT_ARGS"], 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.Func`1", [$.Object]), $.String, 
          $asm06.TypeRef("System.Action`1", [$.Object])
        ]), 
      INTERNAL_EventManager$b2__ctor$00
    )
      .Parameter(0, "domElementProvider", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"), function () { return [[false, true]]; })
        })
      .Parameter(2, "actionOnEvent", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"), function () { return [[false, true]]; })
        });

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.Func`1", [$.Object]), $jsilcore.TypeRef("System.Array", [$.String]), 
          $asm06.TypeRef("System.Action`1", [$.Object])
        ]), 
      INTERNAL_EventManager$b2__ctor$01
    )
      .Parameter(0, "domElementProvider", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"), function () { return [[false, true]]; })
        })
      .Parameter(2, "actionOnEvent", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"), function () { return [[false, true]]; })
        });

    $.Method({Static:false, Public:false}, "$lStartListeningToDomEventsIfNotAlreadyListening$gb__7", 
      JSIL.MethodSignature.Action($.Object), 
      INTERNAL_EventManager$b2_$lStartListeningToDomEventsIfNotAlreadyListening$gb__7
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature(null, [$.GenericParameter("EVENT_HANDLER")]), 
      INTERNAL_EventManager$b2_Add
    );

    $.Method({Static:false, Public:false}, "AttachToDomEvents", 
      JSIL.MethodSignature.Void, 
      INTERNAL_EventManager$b2_AttachToDomEvents
    );

    $.Method({Static:false, Public:false}, "DetachFromDomEvents", 
      JSIL.MethodSignature.Void, 
      INTERNAL_EventManager$b2_DetachFromDomEvents
    );

    $.Method({Static:false, Public:false}, "get_Handlers", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$.GenericParameter("EVENT_HANDLER")]), null), 
      INTERNAL_EventManager$b2_get_Handlers
    );

    $.Method({Static:false, Public:false}, "HackToRemoveDelegateFromListOfDelegates", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Collections.Generic.List`1", [$.GenericParameter("EVENT_HANDLER")]), $.GenericParameter("EVENT_HANDLER")]), 
      INTERNAL_EventManager$b2_HackToRemoveDelegateFromListOfDelegates
    );

    $.Method({Static:false, Public:false}, "OnEvent", 
      JSIL.MethodSignature.Action($.Object), 
      INTERNAL_EventManager$b2_OnEvent
    )
      .Parameter(0, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:true }, "Remove", 
      new JSIL.MethodSignature(null, [$.GenericParameter("EVENT_HANDLER")]), 
      INTERNAL_EventManager$b2_Remove
    );

    $.Method({Static:false, Public:false}, "StartListeningToDomEventsIfNotAlreadyListening", 
      JSIL.MethodSignature.Void, 
      INTERNAL_EventManager$b2_StartListeningToDomEventsIfNotAlreadyListening
    );

    $.Method({Static:false, Public:false}, "StopListeningToDomEvents", 
      JSIL.MethodSignature.Void, 
      INTERNAL_EventManager$b2_StopListeningToDomEvents
    );

    $['Field']({Static:false, Public:false}, "_htmlEventProxies", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("DotNetForHtml5.Core.HtmlEventProxy")])); 
    $['Field']({Static:false, Public:false}, "_domEventsNamesToListenTo", $jsilcore.TypeRef("System.Array", [$.String])); 
    $['Field']({Static:false, Public:false}, "_actionOnEvent", $asm06.TypeRef("System.Action`1", [$.Object]))
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"), function () { return [[false, true]]; }); 
    $['Field']({Static:false, Public:false}, "_domElementProvider", $asm06.TypeRef("System.Func`1", [$.Object]))
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"), function () { return [[false, true]]; }); 
    $['Field']({Static:false, Public:false}, "_listOfHandlers", $asm06.TypeRef("System.Collections.Generic.List`1", [$.GenericParameter("EVENT_HANDLER")])); 
    $['Field']({Static:false, Public:false}, "_isListeningToDomEvents", $.Boolean); 
    $.Property({Static:false, Public:false}, "Handlers", $asm06.TypeRef("System.Collections.Generic.List`1", [$.GenericParameter("EVENT_HANDLER")]));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class DotNetForHtml5.Core.INTERNAL_EventsHelper */ 

(function INTERNAL_EventsHelper$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Action$b1.Of($asm06.System.Object))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_EventsHelper_$l$gc__DisplayClass1)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.DotNetForHtml5.Core.HtmlEventProxy)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Action$b1)) ();
  };

  function INTERNAL_EventsHelper_AttachToDomEvents (eventName, domElement, handler) {
    var $closure0 = new ($T03())();
    $closure0.handler = handler;
    return $thisType['PrivateAttachToDomEvents'](eventName, domElement, $T02()['New']($closure0, $T03().prototype['$lAttachToDomEvents$gb__0'], function () { return JSIL.GetMethodInfo($asm00.DotNetForHtml5.Core.INTERNAL_EventsHelper_$l$gc__DisplayClass1, "$lAttachToDomEvents$gb__0", JSIL.MethodSignature.Action($.Object), false); }));
  };

  function INTERNAL_EventsHelper_PrivateAttachToDomEvents (eventName, domElementRef, originalEventHandler) {
    var htmlEventProxy = new ($T04())(eventName, domElementRef, originalEventHandler);
    domElementRef.addEventListener(eventName,originalEventHandler);
    return htmlEventProxy;
  };

  JSIL.MakeStaticClass("DotNetForHtml5.Core.INTERNAL_EventsHelper", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "AttachToDomEvents", 
      new JSIL.MethodSignature($asm00.TypeRef("DotNetForHtml5.Core.HtmlEventProxy"), [
          $.String, $.Object, 
          $asm06.TypeRef("System.Action`1", [$.Object])
        ]), 
      INTERNAL_EventsHelper_AttachToDomEvents
    );

    $.Method({Static:true , Public:false}, "PrivateAttachToDomEvents", 
      new JSIL.MethodSignature($asm00.TypeRef("DotNetForHtml5.Core.HtmlEventProxy"), [
          $.String, $.Object, 
          $asm06.TypeRef("System.Action`1", [$.Object])
        ]), 
      INTERNAL_EventsHelper_PrivateAttachToDomEvents
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class DotNetForHtml5.Core.INTERNAL_EventsHelper+<>c__DisplayClass1 */ 

(function $l$gc__DisplayClass1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Object)) ();
  };

  function $l$gc__DisplayClass1__ctor () {
  };

  function $l$gc__DisplayClass1_$lAttachToDomEvents$gb__0 (e) {
    this.handler(e);
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "DotNetForHtml5.Core.INTERNAL_EventsHelper+<>c__DisplayClass1", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClass1__ctor
    );

    $.Method({Static:false, Public:true }, "$lAttachToDomEvents$gb__0", 
      JSIL.MethodSignature.Action($.Object), 
      $l$gc__DisplayClass1_$lAttachToDomEvents$gb__0
    );

    $['Field']({Static:false, Public:true }, "handler", $asm06.TypeRef("System.Action`1", [$.Object])); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class DotNetForHtml5.Core.INTERNAL_TypeToDependencyProperties */ 

(function INTERNAL_TypeToDependencyProperties$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm06.System.Type, $asm06.System.Collections.Generic.List$b1.Of($asm00.Windows.UI.Xaml.DependencyProperty)))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Type)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm00.Windows.UI.Xaml.DependencyProperty))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("System.Type"), $asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")])]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")]), null))) ();
  };

  function INTERNAL_TypeToDependencyProperties_Add (ownerType, dependencyProperty) {
    ($thisType['GetCollectionForType'](ownerType))['Add'](dependencyProperty);
  };

  function INTERNAL_TypeToDependencyProperties_GetCollectionForType (ownerType) {
    if ($thisType.TypeToDependencyProperties['ContainsKey'](ownerType)) {
      var list = $thisType.TypeToDependencyProperties['get_Item'](ownerType);
      if (list === null) {
        list = $S01().Construct();
        $thisType.TypeToDependencyProperties['set_Item'](ownerType, list);
      }
    } else {
      list = $S01().Construct();
      $thisType.TypeToDependencyProperties['Add'](ownerType, list);
    }
    return list;
  };

  JSIL.MakeStaticClass("DotNetForHtml5.Core.INTERNAL_TypeToDependencyProperties", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "Add", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Type"), $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")]), 
      INTERNAL_TypeToDependencyProperties_Add
    );

    $.Method({Static:true , Public:false}, "GetCollectionForType", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")]), [$asm06.TypeRef("System.Type")]), 
      INTERNAL_TypeToDependencyProperties_GetCollectionForType
    );

    $['Field']({Static:true , Public:true }, "TypeToDependencyProperties", $asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("System.Type"), $asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")])])); 
    function INTERNAL_TypeToDependencyProperties__cctor () {
      $thisType.TypeToDependencyProperties = $S00().Construct();
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      INTERNAL_TypeToDependencyProperties__cctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class DotNetForHtml5.Core.HtmlEventProxy */ 

(function HtmlEventProxy$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Action$b1.Of($asm06.System.Object))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.DotNetForHtml5.Core.HtmlEventProxy_$l$gc__DisplayClass4)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.EventHandler$b1.Of($asm00.DotNetForHtml5.Core.HtmlEventProxy_EventArgsWithJSEventObject))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_EventsHelper)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Action$b1)) ();
  };

  function HtmlEventProxy__ctor (eventName, htmlElement, originalEventHandler) {
    var $closure0 = new ($T03())();
    $closure0.originalEventHandler = originalEventHandler;
    this._htmlElement = null;
    this._eventName = null;
    this._eventName = eventName;
    this._htmlElement = htmlElement;
    this._sender = this;
    this._eventHandler = $T04()['New']($closure0, $T03().prototype['$l_ctor$gb__2'], function () { return JSIL.GetMethodInfo($asm00.DotNetForHtml5.Core.HtmlEventProxy_$l$gc__DisplayClass4, "$l_ctor$gb__2", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm00.DotNetForHtml5.Core.HtmlEventProxy_EventArgsWithJSEventObject]), false); });
    this._originalEventHandler = $closure0.originalEventHandler;
  };

  function HtmlEventProxy_Dispose () {
    if (this._htmlElement !== null) {
      this._htmlElement.removeEventListener(this._eventName,this._originalEventHandler);
      this._htmlElement = null;
      this._sender = null;
      this._eventHandler = null;
      this._originalEventHandler = null;
    }
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "DotNetForHtml5.Core.HtmlEventProxy", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.String, $.Object, 
          $asm06.TypeRef("System.Action`1", [$.Object])
        ]), 
      HtmlEventProxy__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void, 
      HtmlEventProxy_Dispose
    );

    $['Field']({Static:false, Public:false}, "_eventHandler", $asm06.TypeRef("System.EventHandler`1", [$asm00.TypeRef("DotNetForHtml5.Core.HtmlEventProxy+EventArgsWithJSEventObject")])); 
    $['Field']({Static:false, Public:false}, "_originalEventHandler", $asm06.TypeRef("System.Action`1", [$.Object])); 
    $['Field']({Static:false, Public:false}, "_sender", $.Object); 
    $['Field']({Static:false, Public:false}, "_htmlElement", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute")); 
    $['Field']({Static:false, Public:false}, "_eventName", $.String); 
    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class DotNetForHtml5.Core.HtmlEventProxy+EventArgsWithJSEventObject */ 

(function EventArgsWithJSEventObject$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.EventArgs)) ();
  };

  function EventArgsWithJSEventObject__ctor (jseventObject) {
    $T01().prototype['_ctor'].call(this);
    this.JSEventObject = jseventObject;
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.EventArgs"), 
      Name: "DotNetForHtml5.Core.HtmlEventProxy+EventArgsWithJSEventObject", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Object), 
      EventArgsWithJSEventObject__ctor
    )
      .Parameter(0, "jseventObject", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $['Field']({Static:false, Public:true , ReadOnly:true }, "JSEventObject", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class DotNetForHtml5.Core.HtmlEventProxy+<>c__DisplayClass4 */ 

(function $l$gc__DisplayClass4$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.DotNetForHtml5.Core.HtmlEventProxy_EventArgsWithJSEventObject)) ();
  };

  function $l$gc__DisplayClass4__ctor () {
  };

  function $l$gc__DisplayClass4_$l_ctor$gb__2 (s, e) {
    this.originalEventHandler(e.JSEventObject);
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "DotNetForHtml5.Core.HtmlEventProxy+<>c__DisplayClass4", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClass4__ctor
    );

    $.Method({Static:false, Public:true }, "$l.ctor$gb__2", 
      new JSIL.MethodSignature(null, [$.Object, $asm00.TypeRef("DotNetForHtml5.Core.HtmlEventProxy+EventArgsWithJSEventObject")]), 
      $l$gc__DisplayClass4_$l_ctor$gb__2
    );

    $['Field']({Static:false, Public:true }, "originalEventHandler", $asm06.TypeRef("System.Action`1", [$.Object])); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class DotNetForHtml5.Core.HtmlEventProxy+<>c__DisplayClassa */ 

(function $l$gc__DisplayClassa$Members () {
  var $, $thisType;
  function $l$gc__DisplayClassa__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "DotNetForHtml5.Core.HtmlEventProxy+<>c__DisplayClassa", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClassa__ctor
    );

    $.Method({Static:false, Public:true }, "$lOnEvent$gb__9", 
      JSIL.MethodSignature.Void, 
      JSIL.UntranslatableFunction("System.Void DotNetForHtml5.Core.HtmlEventProxy/<>c__DisplayClassa::<OnEvent>b__9()")
    );

    $['Field']({Static:false, Public:true }, "e", $.Object); 
    $['Field']({Static:false, Public:true }, "$l$g4__this", $asm00.TypeRef("DotNetForHtml5.Core.HtmlEventProxy")); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class DotNetForHtml5.Core.INTERNAL_PropertyStorage */ 

(function INTERNAL_PropertyStorage$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_NoValue)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm00.Windows.UI.Xaml.Data.IPropertyChangedListener))) ();
  };

  function INTERNAL_PropertyStorage__ctor (owner, property) {
    this._isIsEnabledOrIsHitTestVisibleProperty = false;
    this.INTERNAL_PropertyStorage$Owner$value = owner;
    this.INTERNAL_PropertyStorage$Property$value = property;
    if (!((property !== $T02().IsEnabledProperty) && (property !== $T02().IsHitTestVisibleProperty))) {
      this._isIsEnabledOrIsHitTestVisibleProperty = true;
    }
    this.INTERNAL_PropertyStorage$Local$value = $T03().NoValue;
    this.INTERNAL_PropertyStorage$LocalStyleValue$value = $T03().NoValue;
    this.INTERNAL_PropertyStorage$ImplicitStyleValue$value = $T03().NoValue;
    this.INTERNAL_PropertyStorage$InheritedValue$value = $T03().NoValue;
  };

  function INTERNAL_PropertyStorage_get_ImplicitStyleValue () {
    return this.INTERNAL_PropertyStorage$ImplicitStyleValue$value;
  };

  function INTERNAL_PropertyStorage_get_InheritedValue () {
    return this.INTERNAL_PropertyStorage$InheritedValue$value;
  };

  function INTERNAL_PropertyStorage_get_Local () {
    return this.INTERNAL_PropertyStorage$Local$value;
  };

  function INTERNAL_PropertyStorage_get_LocalStyleValue () {
    return this.INTERNAL_PropertyStorage$LocalStyleValue$value;
  };

  function INTERNAL_PropertyStorage_get_Owner () {
    return this.INTERNAL_PropertyStorage$Owner$value;
  };

  function INTERNAL_PropertyStorage_get_Property () {
    return this.INTERNAL_PropertyStorage$Property$value;
  };

  function INTERNAL_PropertyStorage_get_PropertyListeners () {
    return this.INTERNAL_PropertyStorage$PropertyListeners$value;
  };

  function INTERNAL_PropertyStorage_set_ImplicitStyleValue (value) {
    this.INTERNAL_PropertyStorage$ImplicitStyleValue$value = value;
  };

  function INTERNAL_PropertyStorage_set_InheritedValue (value) {
    this.INTERNAL_PropertyStorage$InheritedValue$value = value;
  };

  function INTERNAL_PropertyStorage_set_Local (value) {
    this.INTERNAL_PropertyStorage$Local$value = value;
  };

  function INTERNAL_PropertyStorage_set_LocalStyleValue (value) {
    this.INTERNAL_PropertyStorage$LocalStyleValue$value = value;
  };

  function INTERNAL_PropertyStorage_set_Owner (value) {
    this.INTERNAL_PropertyStorage$Owner$value = value;
  };

  function INTERNAL_PropertyStorage_set_Property (value) {
    this.INTERNAL_PropertyStorage$Property$value = value;
  };

  function INTERNAL_PropertyStorage_set_PropertyListeners (value) {
    this.INTERNAL_PropertyStorage$PropertyListeners$value = value;
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "DotNetForHtml5.Core.INTERNAL_PropertyStorage", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")]), 
      INTERNAL_PropertyStorage__ctor
    );

    $.Method({Static:false, Public:true }, "get_ImplicitStyleValue", 
      JSIL.MethodSignature.Return($.Object), 
      INTERNAL_PropertyStorage_get_ImplicitStyleValue
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_InheritedValue", 
      JSIL.MethodSignature.Return($.Object), 
      INTERNAL_PropertyStorage_get_InheritedValue
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Local", 
      JSIL.MethodSignature.Return($.Object), 
      INTERNAL_PropertyStorage_get_Local
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_LocalStyleValue", 
      JSIL.MethodSignature.Return($.Object), 
      INTERNAL_PropertyStorage_get_LocalStyleValue
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Owner", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.DependencyObject")), 
      INTERNAL_PropertyStorage_get_Owner
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Property", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")), 
      INTERNAL_PropertyStorage_get_Property
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_PropertyListeners", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyChangedListener")])), 
      INTERNAL_PropertyStorage_get_PropertyListeners
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_ImplicitStyleValue", 
      JSIL.MethodSignature.Action($.Object), 
      INTERNAL_PropertyStorage_set_ImplicitStyleValue
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_InheritedValue", 
      JSIL.MethodSignature.Action($.Object), 
      INTERNAL_PropertyStorage_set_InheritedValue
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Local", 
      JSIL.MethodSignature.Action($.Object), 
      INTERNAL_PropertyStorage_set_Local
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_LocalStyleValue", 
      JSIL.MethodSignature.Action($.Object), 
      INTERNAL_PropertyStorage_set_LocalStyleValue
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Owner", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DependencyObject")), 
      INTERNAL_PropertyStorage_set_Owner
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Property", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")), 
      INTERNAL_PropertyStorage_set_Property
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_PropertyListeners", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyChangedListener")])), 
      INTERNAL_PropertyStorage_set_PropertyListeners
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $['Field']({Static:false, Public:false}, "_isIsEnabledOrIsHitTestVisibleProperty", $.Boolean); 
    $['Field']({Static:false, Public:false}, "INTERNAL_PropertyStorage$Owner$value", $asm00.TypeRef("Windows.UI.Xaml.DependencyObject"))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "INTERNAL_PropertyStorage$Property$value", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "INTERNAL_PropertyStorage$Local$value", $.Object)
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "INTERNAL_PropertyStorage$LocalStyleValue$value", $.Object)
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "INTERNAL_PropertyStorage$ImplicitStyleValue$value", $.Object)
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "INTERNAL_PropertyStorage$InheritedValue$value", $.Object)
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "INTERNAL_PropertyStorage$PropertyListeners$value", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyChangedListener")]))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true }, "Owner", $asm00.TypeRef("Windows.UI.Xaml.DependencyObject"));

    $.Property({Static:false, Public:true }, "Property", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"));

    $.Property({Static:false, Public:true }, "Local", $.Object);

    $.Property({Static:false, Public:true }, "LocalStyleValue", $.Object);

    $.Property({Static:false, Public:true }, "ImplicitStyleValue", $.Object);

    $.Property({Static:false, Public:true }, "InheritedValue", $.Object);

    $.Property({Static:false, Public:true }, "PropertyListeners", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyChangedListener")]));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class DotNetForHtml5.Core.INTERNAL_PropertyStore */ 

(function INTERNAL_PropertyStore$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_PropertyStorage)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2_KeyCollection_Enumerator.Of($asm00.Windows.UI.Xaml.UIElement, $asm00.DotNetForHtml5.Core.INTERNAL_VisualChildInformation))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2_KeyCollection.Of($asm00.Windows.UI.Xaml.UIElement, $asm00.DotNetForHtml5.Core.INTERNAL_VisualChildInformation))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm00.Windows.UI.Xaml.UIElement, $asm00.DotNetForHtml5.Core.INTERNAL_VisualChildInformation))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm00.Windows.UI.Xaml.DependencyProperty, $asm00.DotNetForHtml5.Core.INTERNAL_PropertyStorage))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.Type)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_NoValue)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.System.Action$b2.Of($asm06.System.Object, $asm00.Windows.UI.Xaml.Data.IDependencyPropertyChangedEventArgs))) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm00.Windows.UI.Xaml.Data.IPropertyChangedListener))) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.PropertyChangedListener)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IPropertyChangedListener)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"), $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_PropertyStorage")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("System.Boolean"), [$asm06.TypeRef("System.Type")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyChangedListener")]), null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IPropertyChangedListener.OnPropertyChanged)) ();
  };

  function INTERNAL_PropertyStore_CascadeInheritedPropertyToChildren (storage, newValue) {
    var owner = storage.INTERNAL_PropertyStorage$Owner$value;
    if ($T03().$Is(owner)) {
      var uIElement = $T03().$Cast(owner);
      if (uIElement.UIElement$INTERNAL_VisualChildrenInformation$value !== null) {
        var enumerator = ((uIElement.UIElement$INTERNAL_VisualChildrenInformation$value)['get_Keys']())['GetEnumerator']();

        while ($T04().prototype['MoveNext'].call(enumerator)) {
          var current = $T04().prototype['get_Current'].call(enumerator);
          current['SetInheritedValue'](storage.INTERNAL_PropertyStorage$Property$value, newValue, true);
        }
      }
    }
  };

  function INTERNAL_PropertyStore_GetInheritedPropertyStorage (dependencyObject, dependencyProperty, createAndSaveNewStorageIfNotExists) {
    var iNTERNAL_PropertyStorage = new JSIL.BoxedVariable(null);
    if (dependencyObject.INTERNAL_AllInheritedProperties === null) {
      dependencyObject.INTERNAL_AllInheritedProperties = $S00().Construct();
    }
    if (!(dependencyObject.INTERNAL_AllInheritedProperties)['TryGetValue'](dependencyProperty, /* ref */ iNTERNAL_PropertyStorage)) {
      iNTERNAL_PropertyStorage.set(new ($T00())(dependencyObject, dependencyProperty));
      if (createAndSaveNewStorageIfNotExists) {
        (dependencyObject.INTERNAL_AllInheritedProperties)['Add'](dependencyProperty, iNTERNAL_PropertyStorage.get());
        if ($S01().CallVirtual("IsAssignableFrom", null, dependencyProperty.DependencyProperty$OwnerType$value, JSIL['GetType'](dependencyObject))) {
          if (dependencyObject.INTERNAL_PropertyStorageDictionary === null) {
            dependencyObject.INTERNAL_PropertyStorageDictionary = $S00().Construct();
          }
          if (!(dependencyObject.INTERNAL_PropertyStorageDictionary)['ContainsKey'](dependencyProperty)) {
            (dependencyObject.INTERNAL_PropertyStorageDictionary)['Add'](dependencyProperty, iNTERNAL_PropertyStorage.get());
          }
        }
      }
    }
    return iNTERNAL_PropertyStorage.get();
  };

  function INTERNAL_PropertyStore_GetStorage (dependencyObject, dependencyProperty, createAndSaveNewStorageIfNotExists) {
    var iNTERNAL_PropertyStorage = new JSIL.BoxedVariable(null);
    if (dependencyObject.INTERNAL_PropertyStorageDictionary === null) {
      dependencyObject.INTERNAL_PropertyStorageDictionary = $S00().Construct();
    }
    if (!(dependencyObject.INTERNAL_PropertyStorageDictionary)['TryGetValue'](dependencyProperty, /* ref */ iNTERNAL_PropertyStorage)) {
      iNTERNAL_PropertyStorage.set(new ($T00())(dependencyObject, dependencyProperty));
      if (createAndSaveNewStorageIfNotExists) {
        (dependencyObject.INTERNAL_PropertyStorageDictionary)['Add'](dependencyProperty, iNTERNAL_PropertyStorage.get());
        if (!((dependencyProperty.DependencyProperty$TypeMetadata$value === null) || !dependencyProperty.DependencyProperty$TypeMetadata$value.PropertyMetadata$Inherits$value)) {
          if (dependencyObject.INTERNAL_AllInheritedProperties === null) {
            dependencyObject.INTERNAL_AllInheritedProperties = $S00().Construct();
          }
          if (!(dependencyObject.INTERNAL_AllInheritedProperties)['ContainsKey'](dependencyProperty)) {
            (dependencyObject.INTERNAL_AllInheritedProperties)['Add'](dependencyProperty, iNTERNAL_PropertyStorage.get());
          }
        }
      }
    }
    return iNTERNAL_PropertyStorage.get();
  };

  function INTERNAL_PropertyStore_GetValue (storage) {
    var obj = null;
    if (storage._isIsEnabledOrIsHitTestVisibleProperty) {
      if (!(((obj = storage.INTERNAL_PropertyStorage$InheritedValue$value) === null) || 
          (obj === $T0C().NoValue) || $T08().$Cast(obj))) {
        var result = false;
        return result;
      }
    }
    if (!(((obj = storage.INTERNAL_PropertyStorage$Local$value) === null) || (obj === $T0C().NoValue))) {
      result = obj;
    } else if (!(((obj = storage.INTERNAL_PropertyStorage$LocalStyleValue$value) === null) || (obj === $T0C().NoValue))) {
      result = obj;
    } else if (!(((obj = storage.INTERNAL_PropertyStorage$ImplicitStyleValue$value) === null) || (obj === $T0C().NoValue))) {
      result = obj;
    } else if (!(((obj = storage.INTERNAL_PropertyStorage$InheritedValue$value) === null) || (obj === $T0C().NoValue))) {
      result = obj;
    } else {
      result = (
        (storage.INTERNAL_PropertyStorage$Property$value.DependencyProperty$TypeMetadata$value !== null)
           ? storage.INTERNAL_PropertyStorage$Property$value.DependencyProperty$TypeMetadata$value.PropertyMetadata$DefaultValue$value
           : null)
      ;
    }
    return result;
  };

  function INTERNAL_PropertyStore_ListenToChanged (target, property, updateSourceCallback) {
    var storage = $thisType['GetStorage'](target, property, true);
    var list = storage.INTERNAL_PropertyStorage$PropertyListeners$value;
    if (list === null) {
      list = storage.INTERNAL_PropertyStorage$PropertyListeners$value = $S02().Construct();
    }
    var propertyChangedListener = new ($T0F())(storage, updateSourceCallback);
    list['Add'](propertyChangedListener);
    return propertyChangedListener;
  };

  function INTERNAL_PropertyStore_OnPropertyChanged (storage, oldValue, newValue) {
    var $temp00;
    var owner = storage.INTERNAL_PropertyStorage$Owner$value;
    if (!((storage.INTERNAL_PropertyStorage$Property$value.DependencyProperty$TypeMetadata$value === null) || (storage.INTERNAL_PropertyStorage$Property$value.DependencyProperty$TypeMetadata$value.PropertyMetadata$PropertyChangedCallback$value === null))) {
      storage.INTERNAL_PropertyStorage$Property$value.DependencyProperty$TypeMetadata$value.PropertyMetadata$PropertyChangedCallback$value(owner, new ($T10())(oldValue, newValue, storage.INTERNAL_PropertyStorage$Property$value));
    }
    if (storage.INTERNAL_PropertyStorage$PropertyListeners$value !== null) {

      for (var a$0 = storage.INTERNAL_PropertyStorage$PropertyListeners$value._items, i$0 = 0, l$0 = (storage.INTERNAL_PropertyStorage$PropertyListeners$value._size | 0); i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        $IM00().Call(current, null, owner, new ($T10())(oldValue, newValue, storage.INTERNAL_PropertyStorage$Property$value));
      }
    }
  };

  function INTERNAL_PropertyStore_RaisePropertyChangedAndCascadeToChildren (storage, oldValue, newValue) {
    if ($S01().CallVirtual("IsAssignableFrom", null, storage.INTERNAL_PropertyStorage$Property$value.DependencyProperty$OwnerType$value, JSIL['GetType'](storage.INTERNAL_PropertyStorage$Owner$value))) {
      $thisType['OnPropertyChanged'](storage, oldValue, newValue);
    }
    if (!((storage.INTERNAL_PropertyStorage$Property$value.DependencyProperty$TypeMetadata$value === null) || !storage.INTERNAL_PropertyStorage$Property$value.DependencyProperty$TypeMetadata$value.PropertyMetadata$Inherits$value)) {
      $thisType['CascadeInheritedPropertyToChildren'](storage, newValue);
    }
  };

  function INTERNAL_PropertyStore_ResetInheritedValue (storage) {
    storage.INTERNAL_PropertyStorage$InheritedValue$value = $T0C().NoValue;
  };

  function INTERNAL_PropertyStore_ResetLocalStyleValue (storage) {
    storage.INTERNAL_PropertyStorage$LocalStyleValue$value = $T0C().NoValue;
  };

  function INTERNAL_PropertyStore_SetInheritedValue (storage, newValue, recursively) {
    var obj = (
      (storage.INTERNAL_PropertyStorage$InheritedValue$value === $T0C().NoValue)
         ? (
          (storage.INTERNAL_PropertyStorage$Property$value.DependencyProperty$TypeMetadata$value !== null)
             ? storage.INTERNAL_PropertyStorage$Property$value.DependencyProperty$TypeMetadata$value.PropertyMetadata$DefaultValue$value
             : null)

         : storage.INTERNAL_PropertyStorage$InheritedValue$value)
    ;
    storage.INTERNAL_PropertyStorage$InheritedValue$value = newValue;
    if (!(((storage.INTERNAL_PropertyStorage$Local$value !== null) && 
          (storage.INTERNAL_PropertyStorage$Local$value !== $T0C().NoValue)) || 
        ((storage.INTERNAL_PropertyStorage$LocalStyleValue$value !== null) && 
          (storage.INTERNAL_PropertyStorage$LocalStyleValue$value !== $T0C().NoValue)) || ((storage.INTERNAL_PropertyStorage$ImplicitStyleValue$value !== null) && 
          (storage.INTERNAL_PropertyStorage$ImplicitStyleValue$value !== $T0C().NoValue)))) {
      if (obj !== newValue) {
        if ($S01().CallVirtual("IsAssignableFrom", null, storage.INTERNAL_PropertyStorage$Property$value.DependencyProperty$OwnerType$value, JSIL['GetType'](storage.INTERNAL_PropertyStorage$Owner$value))) {
          $thisType['OnPropertyChanged'](storage, obj, newValue);
        }
        if (recursively) {
          $thisType['CascadeInheritedPropertyToChildren'](storage, newValue);
        }
      }
    } else if (storage._isIsEnabledOrIsHitTestVisibleProperty) {
      if ($T08().$Cast(newValue)) {
        newValue = $thisType['GetValue']($thisType['GetStorage'](storage.INTERNAL_PropertyStorage$Owner$value, storage.INTERNAL_PropertyStorage$Property$value, false));
      }
      if (obj !== newValue) {
        if ($S01().CallVirtual("IsAssignableFrom", null, storage.INTERNAL_PropertyStorage$Property$value.DependencyProperty$OwnerType$value, JSIL['GetType'](storage.INTERNAL_PropertyStorage$Owner$value))) {
          $thisType['OnPropertyChanged'](storage, obj, newValue);
        }
        if (recursively) {
          $thisType['CascadeInheritedPropertyToChildren'](storage, newValue);
        }
      }
    }
  };

  function INTERNAL_PropertyStore_SetLocalStyleValue (storage, newValue) {
    var inheritedValue = null;
    var oldValue = (
      (storage.INTERNAL_PropertyStorage$LocalStyleValue$value === $T0C().NoValue)
         ? (
          (storage.INTERNAL_PropertyStorage$Property$value.DependencyProperty$TypeMetadata$value !== null)
             ? storage.INTERNAL_PropertyStorage$Property$value.DependencyProperty$TypeMetadata$value.PropertyMetadata$DefaultValue$value
             : null)

         : storage.INTERNAL_PropertyStorage$LocalStyleValue$value)
    ;
    var flag = true;
    storage.INTERNAL_PropertyStorage$LocalStyleValue$value = newValue;
    if (storage._isIsEnabledOrIsHitTestVisibleProperty) {
      if (!(((inheritedValue = storage.INTERNAL_PropertyStorage$InheritedValue$value) === null) || 
          (inheritedValue === $T0C().NoValue) || $T08().$Cast(inheritedValue))) {
        flag = false;
      }
    }
    if (!(!(flag && 
          (storage.INTERNAL_PropertyStorage$Local$value === null)) && (storage.INTERNAL_PropertyStorage$Local$value !== $T0C().NoValue))) {
      $thisType['RaisePropertyChangedAndCascadeToChildren'](storage, oldValue, newValue);
    }
  };

  function INTERNAL_PropertyStore_SetLocalValue (storage, newValue) {
    var inheritedValue = null;
    var oldValue = (
      (storage.INTERNAL_PropertyStorage$Local$value === $T0C().NoValue)
         ? (
          (storage.INTERNAL_PropertyStorage$Property$value.DependencyProperty$TypeMetadata$value !== null)
             ? storage.INTERNAL_PropertyStorage$Property$value.DependencyProperty$TypeMetadata$value.PropertyMetadata$DefaultValue$value
             : null)

         : storage.INTERNAL_PropertyStorage$Local$value)
    ;
    var flag = true;
    storage.INTERNAL_PropertyStorage$Local$value = newValue;
    if (storage._isIsEnabledOrIsHitTestVisibleProperty) {
      if (!(((inheritedValue = storage.INTERNAL_PropertyStorage$InheritedValue$value) === null) || 
          (inheritedValue === $T0C().NoValue) || $T08().$Cast(inheritedValue))) {
        flag = false;
      }
    }
    if (flag) {
      $thisType['RaisePropertyChangedAndCascadeToChildren'](storage, oldValue, newValue);
    }
  };

  JSIL.MakeStaticClass("DotNetForHtml5.Core.INTERNAL_PropertyStore", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:false}, "CascadeInheritedPropertyToChildren", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_PropertyStorage"), $.Object]), 
      INTERNAL_PropertyStore_CascadeInheritedPropertyToChildren
    );

    $.Method({Static:true , Public:false}, "GetInheritedPropertyStorage", 
      new JSIL.MethodSignature($asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_PropertyStorage"), [
          $asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"), 
          $.Boolean
        ]), 
      INTERNAL_PropertyStore_GetInheritedPropertyStorage
    );

    $.Method({Static:true , Public:true }, "GetStorage", 
      new JSIL.MethodSignature($asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_PropertyStorage"), [
          $asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"), 
          $.Boolean
        ]), 
      INTERNAL_PropertyStore_GetStorage
    );

    $.Method({Static:true , Public:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_PropertyStorage")]), 
      INTERNAL_PropertyStore_GetValue
    );

    $.Method({Static:true , Public:false}, "ListenToChanged", 
      new JSIL.MethodSignature($asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyChangedListener"), [
          $asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"), 
          $asm06.TypeRef("System.Action`2", [$.Object, $asm00.TypeRef("Windows.UI.Xaml.Data.IDependencyPropertyChangedEventArgs")])
        ]), 
      INTERNAL_PropertyStore_ListenToChanged
    );

    $.Method({Static:true , Public:false}, "OnPropertyChanged", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_PropertyStorage"), $.Object, 
          $.Object
        ]), 
      INTERNAL_PropertyStore_OnPropertyChanged
    );

    $.Method({Static:true , Public:false}, "RaisePropertyChangedAndCascadeToChildren", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_PropertyStorage"), $.Object, 
          $.Object
        ]), 
      INTERNAL_PropertyStore_RaisePropertyChangedAndCascadeToChildren
    );

    $.Method({Static:true , Public:false}, "ResetInheritedValue", 
      JSIL.MethodSignature.Action($asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_PropertyStorage")), 
      INTERNAL_PropertyStore_ResetInheritedValue
    );

    $.Method({Static:true , Public:false}, "ResetLocalStyleValue", 
      JSIL.MethodSignature.Action($asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_PropertyStorage")), 
      INTERNAL_PropertyStore_ResetLocalStyleValue
    );

    $.Method({Static:true , Public:false}, "SetInheritedValue", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_PropertyStorage"), $.Object, 
          $.Boolean
        ]), 
      INTERNAL_PropertyStore_SetInheritedValue
    );

    $.Method({Static:true , Public:false}, "SetLocalStyleValue", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_PropertyStorage"), $.Object]), 
      INTERNAL_PropertyStore_SetLocalStyleValue
    );

    $.Method({Static:true , Public:true }, "SetLocalValue", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_PropertyStorage"), $.Object]), 
      INTERNAL_PropertyStore_SetLocalValue
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class DotNetForHtml5.Core.INTERNAL_TypeToStringsToDependencyProperties */ 

(function INTERNAL_TypeToStringsToDependencyProperties$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm06.System.Type, $asm06.System.Collections.Generic.Dictionary$b2.Of($asm06.System.String, $asm00.Windows.UI.Xaml.DependencyProperty)))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Type)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm06.System.String, $asm00.Windows.UI.Xaml.DependencyProperty))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("System.Type"), $asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("System.String"), $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")])]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("System.String"), $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")]), null))) ();
  };

  function INTERNAL_TypeToStringsToDependencyProperties_GetDictionaryForType (ownerType) {
    if ($thisType.TypeToStringsToDependencyProperties['ContainsKey'](ownerType)) {
      var dictionary = $thisType.TypeToStringsToDependencyProperties['get_Item'](ownerType);
      if (dictionary === null) {
        dictionary = $S01().Construct();
        $thisType.TypeToStringsToDependencyProperties['set_Item'](ownerType, dictionary);
      }
    } else {
      dictionary = $S01().Construct();
      $thisType.TypeToStringsToDependencyProperties['Add'](ownerType, dictionary);
    }
    return dictionary;
  };

  function INTERNAL_TypeToStringsToDependencyProperties_GetPropertyInTypeOrItsBaseTypes (type, propertyName) {

    for (var type2 = type; $T01()['op_Inequality'](type2, null) && (!$thisType.TypeToStringsToDependencyProperties['ContainsKey'](type2) || 
        ($thisType.TypeToStringsToDependencyProperties['get_Item'](type2) === null) || 
        !($thisType.TypeToStringsToDependencyProperties['get_Item'](type2))['ContainsKey'](propertyName)); type2 = type2['get_BaseType']()) {
    }
    if ($T01()['op_Inequality'](type2, null)) {
      var result = ($thisType.TypeToStringsToDependencyProperties['get_Item'](type2))['get_Item'](propertyName);
    } else {
      result = null;
    }
    return result;
  };

  JSIL.MakeStaticClass("DotNetForHtml5.Core.INTERNAL_TypeToStringsToDependencyProperties", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "GetDictionaryForType", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")]), [$asm06.TypeRef("System.Type")]), 
      INTERNAL_TypeToStringsToDependencyProperties_GetDictionaryForType
    );

    $.Method({Static:true , Public:false}, "GetPropertyInTypeOrItsBaseTypes", 
      new JSIL.MethodSignature($asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"), [$asm06.TypeRef("System.Type"), $.String]), 
      INTERNAL_TypeToStringsToDependencyProperties_GetPropertyInTypeOrItsBaseTypes
    );

    $['Field']({Static:true , Public:true }, "TypeToStringsToDependencyProperties", $asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("System.Type"), $asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")])])); 
    function INTERNAL_TypeToStringsToDependencyProperties__cctor () {
      $thisType.TypeToStringsToDependencyProperties = $S00().Construct();
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      INTERNAL_TypeToStringsToDependencyProperties__cctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class DotNetForHtml5.Core.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "DotNetForHtml5.Core.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System");
/* class System.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.Collections");
/* class System.Collections.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Collections.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.Collections.Generic");
/* class System.Collections.Generic.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Collections.Generic.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.Collections.ObjectModel");
/* class System.Collections.ObjectModel.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Collections.ObjectModel.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.Collections.Specialized");
/* class System.Collections.Specialized.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Collections.Specialized.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.ComponentModel");
/* class System.ComponentModel.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.ComponentModel.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.Diagnostics");
/* class System.Diagnostics.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Diagnostics.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.Globalization");
/* class System.Globalization.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Globalization.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.IO");
/* class System.IO.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.IO.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.Net");
/* class System.Net.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Net.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.Net.Security");
/* class System.Net.Security.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Net.Security.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.Reflection");
/* class System.Reflection.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Reflection.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.Resources");
/* class System.Resources.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Resources.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.Runtime");
JSIL.DeclareNamespace("System.Runtime.CompilerServices");
/* class System.Runtime.CompilerServices.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Runtime.CompilerServices.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.Runtime.InteropServices");
/* class System.Runtime.InteropServices.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Runtime.InteropServices.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.Runtime.Serialization");
/* class System.Runtime.Serialization.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Runtime.Serialization.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.ServiceModel");
/* class System.ServiceModel.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.ServiceModel.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.ServiceModel.Channels");
/* class System.ServiceModel.Channels.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.ServiceModel.Channels.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.Text");
/* class System.Text.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Text.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.Threading");
/* class System.Threading.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Threading.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.Windows");
/* class System.Windows.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Windows.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.Windows.Controls");
/* class System.Windows.Controls.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Windows.Controls.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.Windows.Controls.Primitives");
/* class System.Windows.Controls.Primitives.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Windows.Controls.Primitives.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.Windows.Markup");
/* class System.Windows.Markup.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Windows.Markup.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.Xml");
/* class System.Xml.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Xml.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.Xml.Schema");
/* class System.Xml.Schema.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Xml.Schema.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("System.Xml.Serialization");
/* class System.Xml.Serialization.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Xml.Serialization.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("Windows");
JSIL.DeclareNamespace("Windows.ApplicationModel");
JSIL.DeclareNamespace("Windows.ApplicationModel.Activation");
/* class Windows.ApplicationModel.Activation.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.ApplicationModel.Activation.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("Windows.Devices");
JSIL.DeclareNamespace("Windows.Devices.Input");
/* class Windows.Devices.Input.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.Devices.Input.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("Windows.Foundation");
/* class Windows.Foundation.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.Foundation.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("Windows.UI");
/* class Windows.UI.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("Windows.UI.Core");
/* class Windows.UI.Core.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Core.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("Windows.UI.Input");
/* class Windows.UI.Input.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Input.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("Windows.UI.Text");
/* class Windows.UI.Text.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Text.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("Windows.UI.Xaml");
/* class Windows.UI.Xaml.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("Windows.UI.Xaml.Controls");
/* class Windows.UI.Xaml.Controls.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.Controls.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("Windows.UI.Xaml.Controls.Primitives");
/* class Windows.UI.Xaml.Controls.Primitives.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.Controls.Primitives.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("Windows.UI.Xaml.Data");
/* class Windows.UI.Xaml.Data.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.Data.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("Windows.UI.Xaml.Input");
/* class Windows.UI.Xaml.Input.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.Input.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("Windows.UI.Xaml.Markup");
/* class Windows.UI.Xaml.Markup.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.Markup.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("Windows.UI.Xaml.Media");
/* class Windows.UI.Xaml.Media.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.Media.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("Windows.UI.Xaml.Media.Imaging");
/* class Windows.UI.Xaml.Media.Imaging.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.Media.Imaging.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("Windows.UI.Xaml.Navigation");
/* class Windows.UI.Xaml.Navigation.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.Navigation.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

JSIL.DeclareNamespace("Windows.UI.Xaml.Shapes");
/* class Windows.UI.Xaml.Shapes.NamespaceDoc */ 

(function NamespaceDoc$Members () {
  var $, $thisType;
  function NamespaceDoc__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.Shapes.NamespaceDoc", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NamespaceDoc__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class DotNetForHtml5.Core.TypeFromStringConverters */ 

(function TypeFromStringConverters$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm06.System.Type, $asm06.System.Func$b2.Of($asm06.System.String, $asm06.System.Object)))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Type)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm01.System.UriKind)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm01.System.Uri)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.Func$b2.Of($asm06.System.String, $asm06.System.Object))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.System.Nullable$b1.Of($asm06.System.Boolean))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("System.Type"), $asm06.TypeRef("System.Func`2", [$asm06.TypeRef("System.String"), $asm06.TypeRef("System.Object")])]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Exception"), [$asm06.TypeRef("System.String")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Uri"), [$asm06.TypeRef("System.String"), $asm01.TypeRef("System.UriKind")]))) ();
  };

  function TypeFromStringConverters_ConvertBoolFromString (str) {
    if (str == "True") {
      var result = true;
    } else {
      if (!(str == "False")) {
        throw $S01().Construct(("Xaml exception: cannot convert \"" + str + "\" to bool."));
      }
      result = false;
    }
    return result;
  };

  function TypeFromStringConverters_ConvertDoubleFromString (str) {
    var num = new JSIL.BoxedVariable(0);
    if (!$T04()['TryParse'](str, /* ref */ num)) {
      throw $S01().Construct(("Xaml exception: cannot convert \"" + str + "\" to double."));
    }
    return num.get();
  };

  function TypeFromStringConverters_ConvertFromInvariantString (type, s) {
    if (!$thisType.IsBaseTypesConvertersRegistered) {
      $thisType['RegisterBaseTypesConverters']();
      $thisType.IsBaseTypesConvertersRegistered = true;
    }
    if ($thisType.Converters['ContainsKey'](type)) {
      return $thisType.Converters['get_Item'](type)(s);
    }
    throw $S01().Construct(("Unable to find a converter from \"String\" to \"" + type['toString']() + "\""));
  };

  function TypeFromStringConverters_ConvertIntFromString (str) {
    var num = new JSIL.BoxedVariable(0);
    if (!$T06()['TryParse'](str, /* ref */ num)) {
      throw $S01().Construct(("Xaml exception: cannot convert \"" + str + "\" to int."));
    }
    return num.get();
  };

  function TypeFromStringConverters_ConvertObjectFromString (str) {
    return str;
  };

  function TypeFromStringConverters_ConvertUriFromString (str) {
    if ((str.indexOf(":/") != -1)) {
      var uriKind = $T07().Absolute;
    } else {
      uriKind = $T07().Relative;
    }
    return $S02().Construct(str, uriKind);
  };

  function TypeFromStringConverters_RegisterBaseTypesConverters () {
    $thisType['RegisterConverter']($T09().__Type__, $T0A()['New']($thisType, $thisType['ConvertBoolFromString'], function () { return JSIL.GetMethodInfo($thisType, "ConvertBoolFromString", new JSIL.MethodSignature($asm06.System.Object, [$asm06.System.String]), true); }));
    $thisType['RegisterConverter']($T0B().__Type__, $T0A()['New']($thisType, $thisType['ConvertBoolFromString'], function () { return JSIL.GetMethodInfo($thisType, "ConvertBoolFromString", new JSIL.MethodSignature($asm06.System.Object, [$asm06.System.String]), true); }));
    $thisType['RegisterConverter']($T06().__Type__, $T0A()['New']($thisType, $thisType['ConvertIntFromString'], function () { return JSIL.GetMethodInfo($thisType, "ConvertIntFromString", new JSIL.MethodSignature($asm06.System.Object, [$asm06.System.String]), true); }));
    $thisType['RegisterConverter']($T04().__Type__, $T0A()['New']($thisType, $thisType['ConvertDoubleFromString'], function () { return JSIL.GetMethodInfo($thisType, "ConvertDoubleFromString", new JSIL.MethodSignature($asm06.System.Object, [$asm06.System.String]), true); }));
    $thisType['RegisterConverter']($T08().__Type__, $T0A()['New']($thisType, $thisType['ConvertUriFromString'], function () { return JSIL.GetMethodInfo($thisType, "ConvertUriFromString", new JSIL.MethodSignature($asm06.System.Object, [$asm06.System.String]), true); }));
    $thisType['RegisterConverter']($T02().__Type__, $T0A()['New']($thisType, $thisType['ConvertObjectFromString'], function () { return JSIL.GetMethodInfo($thisType, "ConvertObjectFromString", new JSIL.MethodSignature($asm06.System.Object, [$asm06.System.String]), true); }));
  };

  function TypeFromStringConverters_RegisterConverter (type, converter) {
    if (!$thisType.Converters['ContainsKey'](type)) {
      $thisType.Converters['Add'](type, converter);
    }
  };

  JSIL.MakeStaticClass("DotNetForHtml5.Core.TypeFromStringConverters", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:false}, "ConvertBoolFromString", 
      new JSIL.MethodSignature($.Object, [$.String]), 
      TypeFromStringConverters_ConvertBoolFromString
    );

    $.Method({Static:true , Public:false}, "ConvertDoubleFromString", 
      new JSIL.MethodSignature($.Object, [$.String]), 
      TypeFromStringConverters_ConvertDoubleFromString
    );

    $.Method({Static:true , Public:true }, "ConvertFromInvariantString", 
      new JSIL.MethodSignature($.Object, [$asm06.TypeRef("System.Type"), $.String]), 
      TypeFromStringConverters_ConvertFromInvariantString
    );

    $.Method({Static:true , Public:false}, "ConvertIntFromString", 
      new JSIL.MethodSignature($.Object, [$.String]), 
      TypeFromStringConverters_ConvertIntFromString
    );

    $.Method({Static:true , Public:false}, "ConvertObjectFromString", 
      new JSIL.MethodSignature($.Object, [$.String]), 
      TypeFromStringConverters_ConvertObjectFromString
    );

    $.Method({Static:true , Public:false}, "ConvertUriFromString", 
      new JSIL.MethodSignature($.Object, [$.String]), 
      TypeFromStringConverters_ConvertUriFromString
    );

    $.Method({Static:true , Public:false}, "RegisterBaseTypesConverters", 
      JSIL.MethodSignature.Void, 
      TypeFromStringConverters_RegisterBaseTypesConverters
    );

    $.Method({Static:true , Public:true }, "RegisterConverter", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Type"), $asm06.TypeRef("System.Func`2", [$.String, $.Object])]), 
      TypeFromStringConverters_RegisterConverter
    );

    $['Field']({Static:true , Public:false}, "IsBaseTypesConvertersRegistered", $.Boolean); 
    $['Field']({Static:true , Public:false}, "Converters", $asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("System.Type"), $asm06.TypeRef("System.Func`2", [$.String, $.Object])])); 
    function TypeFromStringConverters__cctor () {
      $thisType.Converters = $S00().Construct();
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      TypeFromStringConverters__cctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class DotNetForHtml5.Core.INTERNAL_WorkaroundObservableCollectionBugWithJSIL */ 

(function INTERNAL_WorkaroundObservableCollectionBugWithJSIL$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Collections.IList)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Collections.ObjectModel.Collection$b1.Of($asm06.System.Object))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm01.System.Collections.ObjectModel.ObservableCollection$b1.Of($asm06.System.Object))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm06.System.Collections.IList.Add)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm06.System.Collections.IList.Clear)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm06.System.Collections.IList.Contains)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm06.System.Collections.IList.Remove)) ();
  };

  function INTERNAL_WorkaroundObservableCollectionBugWithJSIL_Add (collection, value) {
    if (true) {
      $thisType['AddForJavascript'](collection, value);
    } else {
      $IM00().Call(collection, null, value);
    }
  };

  function INTERNAL_WorkaroundObservableCollectionBugWithJSIL_AddForJavascript (collection, value) {
    ($T03().$Cast(collection))['Add'](value);
  };

  function INTERNAL_WorkaroundObservableCollectionBugWithJSIL_Clear (collection) {
    if (true) {
      $thisType['ClearForJavascript'](collection);
    } else {
      $IM01().Call(collection, null);
    }
  };

  function INTERNAL_WorkaroundObservableCollectionBugWithJSIL_ClearForJavascript (collection) {
    ($T03().$Cast(collection))['Clear']();
  };

  function INTERNAL_WorkaroundObservableCollectionBugWithJSIL_Contains (collection, value) {
    if (true) {
      var result = $thisType['ContainsForJavascript'](collection, value);
    } else {
      result = $IM02().Call(collection, null, value);
    }
    return result;
  };

  function INTERNAL_WorkaroundObservableCollectionBugWithJSIL_ContainsForJavascript (collection, value) {
    return ($T03().$Cast(collection))['Contains'](value);
  };

  function INTERNAL_WorkaroundObservableCollectionBugWithJSIL_Remove (collection, value) {
    if (true) {
      $thisType['RemoveForJavascript'](collection, value);
    } else {
      $IM03().Call(collection, null, value);
    }
  };

  function INTERNAL_WorkaroundObservableCollectionBugWithJSIL_RemoveForJavascript (collection, value) {
    ($T03().$Cast(collection))['Remove'](value);
  };

  JSIL.MakeStaticClass("DotNetForHtml5.Core.INTERNAL_WorkaroundObservableCollectionBugWithJSIL", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "Add", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Collections.IList"), $.Object]), 
      INTERNAL_WorkaroundObservableCollectionBugWithJSIL_Add
    );

    $.Method({Static:true , Public:false}, "AddForJavascript", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Collections.IList"), $.Object]), 
      INTERNAL_WorkaroundObservableCollectionBugWithJSIL_AddForJavascript
    );

    $.Method({Static:true , Public:true }, "Clear", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Collections.IList")), 
      INTERNAL_WorkaroundObservableCollectionBugWithJSIL_Clear
    );

    $.Method({Static:true , Public:false}, "ClearForJavascript", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Collections.IList")), 
      INTERNAL_WorkaroundObservableCollectionBugWithJSIL_ClearForJavascript
    );

    $.Method({Static:true , Public:true }, "Contains", 
      new JSIL.MethodSignature($.Boolean, [$asm06.TypeRef("System.Collections.IList"), $.Object]), 
      INTERNAL_WorkaroundObservableCollectionBugWithJSIL_Contains
    );

    $.Method({Static:true , Public:false}, "ContainsForJavascript", 
      new JSIL.MethodSignature($.Boolean, [$asm06.TypeRef("System.Collections.IList"), $.Object]), 
      INTERNAL_WorkaroundObservableCollectionBugWithJSIL_ContainsForJavascript
    );

    $.Method({Static:true , Public:true }, "Remove", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Collections.IList"), $.Object]), 
      INTERNAL_WorkaroundObservableCollectionBugWithJSIL_Remove
    );

    $.Method({Static:true , Public:false}, "RemoveForJavascript", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Collections.IList"), $.Object]), 
      INTERNAL_WorkaroundObservableCollectionBugWithJSIL_RemoveForJavascript
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class CSharpXamlForHtml5 */ 

(function CSharpXamlForHtml5$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("CSharpXamlForHtml5", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class CSharpXamlForHtml5+DomManagement */ 

(function DomManagement$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.InvalidOperationException)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.CSharpXamlForHtml5_Environment)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.InvalidOperationException"), [$asm06.TypeRef("System.String")]))) ();
  };

  function DomManagement_get_Document () {
    return window.document;
  };

  function DomManagement_GetDomElementFromControl (control) {
    if (control.UIElement$INTERNAL_OuterDomElement$value === null) {
      throw $S00().Construct("Cannot get the DOM element because the control is not (yet?) in the visual tree. Consider waiting until the Loaded event before calling this piece of code. You can also call the 'IsControlInVisualTree' method to check if the control is in the visual tree.");
    }
    if (true) {
      var result = control.UIElement$INTERNAL_OuterDomElement$value;
    } else {
      JSIL.IgnoredType("CSharpXamlForHtml5/DomManagement/Types/DynamicDomElement");
    }
    return result;
  };

  function DomManagement_IsControlInVisualTree (control) {
    return $T04()['IsElementInVisualTree'](control);
  };

  function DomManagement_SetHtmlRepresentation (control, htmlReprensentation) {
    control.UIElement$INTERNAL_HtmlRepresentation$value = htmlReprensentation;
  };

  JSIL.MakeStaticClass("CSharpXamlForHtml5+DomManagement", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "get_Document", 
      JSIL.MethodSignature.Return($.Object), 
      DomManagement_get_Document
    );

    $.Method({Static:true , Public:true }, "GetDomElementFromControl", 
      new JSIL.MethodSignature($.Object, [$asm00.TypeRef("Windows.UI.Xaml.UIElement")]), 
      DomManagement_GetDomElementFromControl
    );

    $.Method({Static:true , Public:true }, "IsControlInVisualTree", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Windows.UI.Xaml.UIElement")]), 
      DomManagement_IsControlInVisualTree
    );

    $.Method({Static:true , Public:true }, "SetHtmlRepresentation", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.UIElement"), $.String]), 
      DomManagement_SetHtmlRepresentation
    );

    $.Property({Static:true , Public:true }, "Document", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class CSharpXamlForHtml5+DomManagement+Types */ 

(function Types$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("CSharpXamlForHtml5+DomManagement+Types", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class CSharpXamlForHtml5+Environment */ 

(function Environment$Members () {
  var $, $thisType;
  JSIL.MakeStaticClass("CSharpXamlForHtml5+Environment", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.ExternalProperty({Static:true , Public:true }, "IsRunningInJavaScript", $.Boolean)
      .Attribute($asm09.TypeRef("JSIL.Meta.JSReplacement"), function () { return ["true"]; });

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class DotNetForHtml5.Core.INTERNAL_WorkaroundIE11IssuesWithScrollViewerInsideGrid */ 

(function INTERNAL_WorkaroundIE11IssuesWithScrollViewerInsideGrid$Members () {
  var $, $thisType;
  function INTERNAL_WorkaroundIE11IssuesWithScrollViewerInsideGrid_RefreshLayoutIfIE () {
    if (true) {
      if (window.IE_VERSION)
      {
          // Force refresh the layout to workaround the issues when a scrollviewer is inside a grid:
          var temp = document.createElement('div');
          document.body.appendChild(temp);
          document.body.removeChild(temp);
      };
    }
  };

  JSIL.MakeStaticClass("DotNetForHtml5.Core.INTERNAL_WorkaroundIE11IssuesWithScrollViewerInsideGrid", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "RefreshLayoutIfIE", 
      JSIL.MethodSignature.Void, 
      INTERNAL_WorkaroundIE11IssuesWithScrollViewerInsideGrid_RefreshLayoutIfIE
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceProvider */ 

(function ServiceProvider$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm06.System.Object))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Type)) ();
  };

  function ServiceProvider__ctor (element, property, parents) {
    this['set_TargetObject'](element);
    this['set_TargetProperty'](property);
    this['set_Parents'](parents);
  };

  function ServiceProvider_get_Parents () {
    return this._parents;
  };

  function ServiceProvider_get_TargetObject () {
    return this._targetObject;
  };

  function ServiceProvider_get_TargetProperty () {
    return this._targetProperty;
  };

  function ServiceProvider_GetService (serviceType) {
    return this;
  };

  function ServiceProvider_set_Parents (value) {
    this._parents = value;
  };

  function ServiceProvider_set_TargetObject (value) {
    this._targetObject = value;
  };

  function ServiceProvider_set_TargetProperty (value) {
    this._targetProperty = value;
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.ServiceProvider", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Object, $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"), 
          $asm06.TypeRef("System.Collections.Generic.List`1", [$.Object])
        ]), 
      ServiceProvider__ctor
    );

    $.Method({Static:false, Public:true }, "get_Parents", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.List`1", [$.Object])), 
      ServiceProvider_get_Parents
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_TargetObject", 
      JSIL.MethodSignature.Return($.Object), 
      ServiceProvider_get_TargetObject
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_TargetProperty", 
      JSIL.MethodSignature.Return($.Object), 
      ServiceProvider_get_TargetProperty
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetService", 
      new JSIL.MethodSignature($.Object, [$asm06.TypeRef("System.Type")]), 
      ServiceProvider_GetService
    );

    $.Method({Static:false, Public:false}, "set_Parents", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Collections.Generic.List`1", [$.Object])), 
      ServiceProvider_set_Parents
    );

    $.Method({Static:false, Public:false}, "set_TargetObject", 
      JSIL.MethodSignature.Action($.Object), 
      ServiceProvider_set_TargetObject
    );

    $.Method({Static:false, Public:false}, "set_TargetProperty", 
      JSIL.MethodSignature.Action($.Object), 
      ServiceProvider_set_TargetProperty
    );

    $['Field']({Static:false, Public:false}, "_parents", $asm06.TypeRef("System.Collections.Generic.List`1", [$.Object])); 
    $['Field']({Static:false, Public:false}, "_targetObject", $.Object); 
    $['Field']({Static:false, Public:false}, "_targetProperty", $.Object); 
    $.Property({Static:false, Public:true }, "Parents", $asm06.TypeRef("System.Collections.Generic.List`1", [$.Object]));

    $.Property({Static:false, Public:true , Virtual:true }, "TargetObject", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "TargetProperty", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IServiceProvider"), 
      /* 1 */ $asm03.TypeRef("System.Windows.Markup.IProvideValueTarget")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class DotNetForHtml5.Core.INTERNAL_HtmlDomManager */ 

(function INTERNAL_HtmlDomManager$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm06.System.String, $asm00.Windows.UI.Xaml.UIElement))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_Simulator)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize(System.Array.Of($asm06.System.Object))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomUniqueIdentifiers)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Char)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_WorkaroundIE11IssuesWithScrollViewerInsideGrid)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("System.String"), $asm00.TypeRef("Windows.UI.Xaml.UIElement")]), null))) ();
  };

  function INTERNAL_HtmlDomManager_AddToSelectDomElement (domNode, elementToAdd) {
    if (true) {
      var obj = $thisType.htmlDocument['createElement']("option");
      obj.text = elementToAdd;
      domNode['add'](obj);
    } else {
      var javaScriptToExecute = $T04()['Format']("\r\nvar element = document.getElementById(\"{0}\");\r\nvar option = document.createElement(\"option\");\r\n    option.text = \"{1}\";\r\nelement.add(option);\r\n", JSIL.IgnoredMember("get_UniqueIdentifier()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(domNode)).LValue, elementToAdd);
      JSIL.IgnoredMember("ExecuteJavaScript(javaScriptToExecute, commentForDebugging)", javaScriptToExecute, null).LValue;
    }
  };

  function INTERNAL_HtmlDomManager_CallDomMethod (domElementRef, methodName, args) {
    if (true) {
      var result = domElementRef[methodName](args);
    } else {
      var uniqueIdentifier = JSIL.IgnoredMember("get_UniqueIdentifier()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(domElementRef)).LValue;
      var text = "";

      for (var i = 0; i < (args.length | 0); i = ((i + 1) | 0)) {
        var obj = args[i];
        text = (JSIL.ConcatString(text, null));
      }
      var javaScriptToExecute = $T04()['Format']("var element = document.getElementById(\"{0}\");if (element) {{ element[\"{1}\"]({2}) }};", uniqueIdentifier, methodName, text);
      result = JSIL.IgnoredMember("ExecuteJavaScriptWithResult(javaScriptToExecute, commentForDebugging)", javaScriptToExecute, null).LValue;
    }
    return result;
  };

  function INTERNAL_HtmlDomManager_CreateDomElementAndAppendIt (domElementTag, parentRef, associatedUIElement) {
    if (true) {
      var obj = (function(){
            var newElement = document.createElement(domElementTag);
            newElement.associatedUIElement = associatedUIElement;
            parentRef.appendChild(newElement);
            return newElement;
        }());
      var result = obj;
    } else {
      result = (null);
    }
    return result;
  };

  function INTERNAL_HtmlDomManager_CreateDomElementAppendItAndGetStyle (domElementTag, parentRef, associatedUIElement, /* ref */ newElementRef) {
    newElementRef.set($thisType['CreateDomElementAndAppendIt'](domElementTag, parentRef, associatedUIElement));
    return $thisType['GetDomElementStyleForModification'](newElementRef.get());
  };

  function INTERNAL_HtmlDomManager_CreateDomFromStringAndAppendIt (domAsString, parentRef, associatedUIElement) {
    if (true) {
      var obj = $thisType.htmlDocument['createElement']("div");
      obj.innerHTML = domAsString;
      var obj2 = obj.firstChild;
      obj2.associatedUIElement = associatedUIElement;
      parentRef['appendChild'](obj2);
      var result = obj2;
    } else {
      var text = $T08()['CreateNew']();
      var uniqueIdentifier = JSIL.IgnoredMember("get_UniqueIdentifier()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(parentRef)).LValue;
      var javaScriptToExecute = $T04()['Format']("\r\n// Create a temporary parent div to which we can write the innerHTML, then extract the contents:\r\nvar tempDiv = document.createElement(\"div\");\r\ntempDiv.innerHTML = \"{0}\";\r\nvar newElement = tempDiv.firstChild;\r\nnewElement.setAttribute(\"id\", \"{1}\");\r\nvar parentElement = document.getElementById(\"{2}\");\r\nparentElement.appendChild(newElement);\r\n", System.String.Replace(System.String.Replace(System.String.Replace(domAsString, "\"", "'"), "\r", ""), "\n", ""), text, uniqueIdentifier);
      JSIL.IgnoredMember("ExecuteJavaScript(javaScriptToExecute, commentForDebugging)", javaScriptToExecute, null).LValue;
      JSIL.IgnoredMember("INTERNAL_idsToUIElements", $thisType).LValue['Add'](text, associatedUIElement);
      JSIL.IgnoredType("DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference");
    }
    return result;
  };

  function INTERNAL_HtmlDomManager_GetDomElementAttribute (domElementRef, attributeName) {
    if (true) {
      var result = domElementRef[attributeName];
    } else {
      var uniqueIdentifier = JSIL.IgnoredMember("get_UniqueIdentifier()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(domElementRef)).LValue;
      result = JSIL.IgnoredMember("ExecuteJavaScriptWithResult(javaScriptToExecute, commentForDebugging)", $asm06.System.String['Format']("\r\nvar element = document.getElementById(\"{0}\");\r\nelement[\"{1}\"]", uniqueIdentifier, attributeName), null).LValue;
    }
    return result;
  };

  function INTERNAL_HtmlDomManager_GetDomElementStyleForModification (domElementRef) {
    if (true) {
    } else {
      JSIL.IgnoredType("DotNetForHtml5.Core.INTERNAL_HtmlDomStyleReference");
    }
    return domElementRef.style;
  };

  function INTERNAL_HtmlDomManager_GetFirstChildDomElement (domElementRef) {
    if (true) {
      if (domElementRef.childNodes.length > 0) {
        var result = domElementRef.childNodes[0];
      } else {
        result = null;
      }
    } else {
      JSIL.IgnoredType("DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference");
    }
    return result;
  };

  function INTERNAL_HtmlDomManager_GetFrameworkElementOuterStyleForModification (element) {
    return $thisType['GetDomElementStyleForModification'](element.UIElement$INTERNAL_OuterDomElement$value);
  };

  function INTERNAL_HtmlDomManager_GetParentDomElement (domElementRef) {
    if (true) {
      var obj = domElementRef.parentNode;
      var result = obj;
    } else {
      JSIL.IgnoredType("DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference");
      result = JSIL.IgnoredType("DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference");
    }
    return result;
  };

  function INTERNAL_HtmlDomManager_GetRawHtmlBody () {
    if ($thisType.htmlBody === null) {
      $thisType.htmlBody = $thisType.htmlDocument.body;
    }
    return $thisType.htmlBody;
  };

  function INTERNAL_HtmlDomManager_GetRootDomElement () {
    if (true) {
      var result = $thisType.htmlDocument['getElementById']("INTERNAL_RootElement");
    } else {
      JSIL.IgnoredType("DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference");
    }
    return result;
  };

  function INTERNAL_HtmlDomManager_GetTextBoxText (element) {
    if (true) {
      var result = $T04().$Cast($thisType['GetTextBoxText_JavaScript'](element.UIElement$INTERNAL_OuterDomElement$value.childNodes[0].childNodes[0]));
    } else {
      var uniqueIdentifier = JSIL.IgnoredMember("get_UniqueIdentifier()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(element.UIElement$INTERNAL_OuterDomElement$value)).LValue;
      var obj = (null);
      result = $T04().$Cast(obj.innerText);
    }
    return result;
  };

  function INTERNAL_HtmlDomManager_GetTextBoxText_JavaScript (domElementRef) {
    if ('innerText' in domElementRef)
    {
        // --- CHROME & IE: ---
        return domElementRef.innerText;
    }
    else
    {
        // --- FIREFOX: ---
        var newDiv = document.createElement('div');
        newDiv.innerHTML = domElementRef.innerHTML.replace(/<br>/g,'\n')
        return newDiv.textContent;
    };
    return "";
  };

  function INTERNAL_HtmlDomManager_IsNotUndefinedOrNull (obj) {
    if (true) {
      var result = $T0A().$Cast((typeof obj !== 'undefined' && obj !== null));
    } else {
      result = obj !== null;
    }
    return result;
  };

  function INTERNAL_HtmlDomManager_RemoveDomElementAttribute (domElementRef, attributeName, forceSimulatorExecuteImmediately) {
    if (true) {
      domElementRef['removeAttribute'](attributeName);
    } else {
      var uniqueIdentifier = JSIL.IgnoredMember("get_UniqueIdentifier()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(domElementRef)).LValue;
      var text = $T04()['Format']("var element = document.getElementById(\"{0}\");if (element) {{ element.removeAttribute(\"{1}\") }};", uniqueIdentifier, attributeName);
      if (forceSimulatorExecuteImmediately) {
        JSIL.IgnoredMember("ExecuteJavaScript(javaScriptToExecute, commentForDebugging)", text, null).LValue;
      } else {
        JSIL.IgnoredMember("QueueJavaScriptCode(javaScriptCode)", text).LValue;
      }
    }
  };

  function INTERNAL_HtmlDomManager_RemoveFromDom (domNode, commentForDebugging) {
    if (true) {
      (domNode.parentNode)['removeChild'](domNode);
    } else {
      var javaScriptToExecute = $T04()['Format']("\r\nvar element = document.getElementById(\"{0}\");\r\nelement.parentNode.removeChild(element);\r\n", JSIL.IgnoredMember("get_UniqueIdentifier()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(domNode)).LValue);
      JSIL.IgnoredMember("ExecuteJavaScript(javaScriptToExecute, commentForDebugging)", javaScriptToExecute, commentForDebugging).LValue;
      if (JSIL.IgnoredMember("get_Parent()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(domNode)).LValue !== null) {
        JSIL.IgnoredMember("set_FirstChild(value)", JSIL.IgnoredMember("get_Parent()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(domNode)).LValue, null).LValue;
      }
    }
  };

  function INTERNAL_HtmlDomManager_RemoveFromSelectDomElement (domNode, indexToRemove) {
    if (true) {
      domNode['remove'](indexToRemove);
    } else {
      var javaScriptToExecute = $T04()['Format']("\r\nvar element = document.getElementById(\"{0}\");\r\nelement.remove({1});\r\n\r\n", JSIL.IgnoredMember("get_UniqueIdentifier()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(domNode)).LValue, indexToRemove);
      JSIL.IgnoredMember("ExecuteJavaScript(javaScriptToExecute, commentForDebugging)", javaScriptToExecute, null).LValue;
    }
  };

  function INTERNAL_HtmlDomManager_SetContentString (element, content, removeTextWrapping) {
    var iNTERNAL_InnerDomElement = element.UIElement$INTERNAL_InnerDomElement$value;
    if (true) {
      if ('innerText' in iNTERNAL_InnerDomElement)
      {
          // --- CHROME & IE: ---
          iNTERNAL_InnerDomElement.innerText = content;
          if (removeTextWrapping)
          {
              iNTERNAL_InnerDomElement.style.whiteSpace = 'nowrap';
          }
      }
      else
      {
          // --- FIREFOX: ---
          // First, escape the string so that if it contains some HTML, it is made harmless:
          var tempDiv = document.createElement('div');
          tempDiv.appendChild(document.createTextNode(content));
          var escapedText = tempDiv.innerHTML;
          // Then, replace all line breaks with '<br>' so that FireFox can render them properly:
          var finalHtml = escapedText.replace(/\n/g,'<br>');
          // Finally, display the HTML:
          iNTERNAL_InnerDomElement.innerHTML = finalHtml;
          if (removeTextWrapping)
          {
              iNTERNAL_InnerDomElement.style.whiteSpace = 'nowrap';
          }
      };
    } else {
      var uniqueIdentifier = JSIL.IgnoredMember("get_UniqueIdentifier()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(iNTERNAL_InnerDomElement)).LValue;
      var javaScriptCode = $T04()['Format']("\r\nvar element = document.getElementById(\"{0}\");\r\nif (element)\r\n{{\r\n    element.innerText = \"{1}\";\r\n    if ({2})\r\n    {{\r\n        element.style.whiteSpace = \"nowrap\";\r\n    }}\r\n}}\r\n                ", uniqueIdentifier, null, removeTextWrapping['toString']().toLowerCase());
      JSIL.IgnoredMember("QueueJavaScriptCode(javaScriptCode)", javaScriptCode).LValue;
    }
    $T0B()['RefreshLayoutIfIE']();
  };

  function INTERNAL_HtmlDomManager_SetDomElementAttribute (domElementRef, attributeName, attributeValue, forceSimulatorExecuteImmediately) {
    if (true) {
      domElementRef['setAttribute'](attributeName, attributeValue);
    } else {
      var uniqueIdentifier = JSIL.IgnoredMember("get_UniqueIdentifier()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(domElementRef)).LValue;
      var text = $T04()['Format']("var element = document.getElementById(\"{0}\");if (element) {{ element[\"{1}\"] = {2} }};", uniqueIdentifier, attributeName, null);
      if (forceSimulatorExecuteImmediately) {
        JSIL.IgnoredMember("ExecuteJavaScript(javaScriptToExecute, commentForDebugging)", text, null).LValue;
      } else {
        JSIL.IgnoredMember("QueueJavaScriptCode(javaScriptCode)", text).LValue;
      }
    }
  };

  function INTERNAL_HtmlDomManager_SetDomElementProperty (domElementRef, attributeName, attributeValue, forceSimulatorExecuteImmediately) {
    if (true) {
      domElementRef[attributeName] = attributeValue;
    } else {
      var uniqueIdentifier = JSIL.IgnoredMember("get_UniqueIdentifier()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(domElementRef)).LValue;
      var text = $T04()['Format']("var element = document.getElementById(\"{0}\");if (element) {{ element[\"{1}\"] = {2} }};", uniqueIdentifier, attributeName, null);
      if (forceSimulatorExecuteImmediately) {
        JSIL.IgnoredMember("ExecuteJavaScript(javaScriptToExecute, commentForDebugging)", text, null).LValue;
      } else {
        JSIL.IgnoredMember("QueueJavaScriptCode(javaScriptCode)", text).LValue;
      }
    }
  };

  function INTERNAL_HtmlDomManager_SetFocus (element) {
    if ($T0C()['IsElementInVisualTree'](element)) {
      var obj = JSIL.Coalesce(element.UIElement$INTERNAL_OptionalSpecifyDomElementConcernedByFocus$value, element.UIElement$INTERNAL_OuterDomElement$value);
      if (true) {
        obj['focus']();
      } else {
        $thisType['SetFocus_SimulatorOnly'](obj);
      }
    }
  };

  function INTERNAL_HtmlDomManager_SetUIElementContentString (uiElement, newText) {
    if (true) {
      uiElement.UIElement$INTERNAL_OuterDomElement$value.value = newText;
    } else {
      var uniqueIdentifier = JSIL.IgnoredMember("get_UniqueIdentifier()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(uiElement.UIElement$INTERNAL_OuterDomElement$value)).LValue;
      var javaScriptCode = $T04()['Format']("\r\nvar element = document.getElementById(\"{0}\");\r\nif (element)\r\n{{\r\n    element.value = \"{1}\";\r\n    element.style.visibility=\"collapse\";\r\n    setTimeout(function(){{ var element2 = document.getElementById(\"{0}\"); if (element2) {{ element2.style.visibility=\"visible\"; }} }}, 0);\r\n}}\r\n                ", uniqueIdentifier, null);
      JSIL.IgnoredMember("QueueJavaScriptCode(javaScriptCode)", javaScriptCode).LValue;
    }
  };

  JSIL.MakeStaticClass("DotNetForHtml5.Core.INTERNAL_HtmlDomManager", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "AddToSelectDomElement", 
      new JSIL.MethodSignature(null, [$.Object, $.String]), 
      INTERNAL_HtmlDomManager_AddToSelectDomElement
    )
      .Parameter(0, "domNode", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:true , Public:true }, "CallDomMethod", 
      new JSIL.MethodSignature($.Object, [
          $.Object, $.String, 
          $jsilcore.TypeRef("System.Array", [$.Object])
        ]), 
      INTERNAL_HtmlDomManager_CallDomMethod
    )
      .Parameter(0, "domElementRef", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        })
      .Parameter(2, "args", function (_) {
          _.Attribute($asm06.TypeRef("System.ParamArrayAttribute"))
        });

    $.Method({Static:true , Public:true }, "CreateDomElementAndAppendIt", 
      new JSIL.MethodSignature($.Object, [
          $.String, $.Object, 
          $asm00.TypeRef("Windows.UI.Xaml.UIElement")
        ]), 
      INTERNAL_HtmlDomManager_CreateDomElementAndAppendIt
    );

    $.Method({Static:true , Public:true }, "CreateDomElementAppendItAndGetStyle", 
      new JSIL.MethodSignature($.Object, [
          $.String, $.Object, 
          $asm00.TypeRef("Windows.UI.Xaml.UIElement"), $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ]), 
      INTERNAL_HtmlDomManager_CreateDomElementAppendItAndGetStyle
    );

    $.Method({Static:true , Public:true }, "CreateDomFromStringAndAppendIt", 
      new JSIL.MethodSignature($.Object, [
          $.String, $.Object, 
          $asm00.TypeRef("Windows.UI.Xaml.UIElement")
        ]), 
      INTERNAL_HtmlDomManager_CreateDomFromStringAndAppendIt
    );

    $.Method({Static:true , Public:true }, "GetDomElementAttribute", 
      new JSIL.MethodSignature($.Object, [$.Object, $.String]), 
      INTERNAL_HtmlDomManager_GetDomElementAttribute
    )
      .Parameter(0, "domElementRef", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:true , Public:true }, "GetDomElementStyleForModification", 
      new JSIL.MethodSignature($.Object, [$.Object]), 
      INTERNAL_HtmlDomManager_GetDomElementStyleForModification
    )
      .Parameter(0, "domElementRef", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:true , Public:true }, "GetFirstChildDomElement", 
      new JSIL.MethodSignature($.Object, [$.Object]), 
      INTERNAL_HtmlDomManager_GetFirstChildDomElement
    )
      .Parameter(0, "domElementRef", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:true , Public:true }, "GetFrameworkElementOuterStyleForModification", 
      new JSIL.MethodSignature($.Object, [$asm00.TypeRef("Windows.UI.Xaml.UIElement")]), 
      INTERNAL_HtmlDomManager_GetFrameworkElementOuterStyleForModification
    );

    $.Method({Static:true , Public:true }, "GetParentDomElement", 
      new JSIL.MethodSignature($.Object, [$.Object]), 
      INTERNAL_HtmlDomManager_GetParentDomElement
    )
      .Parameter(0, "domElementRef", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:true , Public:true }, "GetRawHtmlBody", 
      JSIL.MethodSignature.Return($.Object), 
      INTERNAL_HtmlDomManager_GetRawHtmlBody
    );

    $.Method({Static:true , Public:true }, "GetRootDomElement", 
      JSIL.MethodSignature.Return($.Object), 
      INTERNAL_HtmlDomManager_GetRootDomElement
    );

    $.Method({Static:true , Public:true }, "GetTextBoxText", 
      new JSIL.MethodSignature($.String, [$asm00.TypeRef("Windows.UI.Xaml.UIElement")]), 
      INTERNAL_HtmlDomManager_GetTextBoxText
    );

    $.Method({Static:true , Public:false}, "GetTextBoxText_JavaScript", 
      new JSIL.MethodSignature($.String, [$.Object]), 
      INTERNAL_HtmlDomManager_GetTextBoxText_JavaScript
    );

    $.Method({Static:true , Public:true }, "IsNotUndefinedOrNull", 
      new JSIL.MethodSignature($.Boolean, [$.Object]), 
      INTERNAL_HtmlDomManager_IsNotUndefinedOrNull
    )
      .Parameter(0, "obj", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:true , Public:true }, "RemoveDomElementAttribute", 
      new JSIL.MethodSignature(null, [
          $.Object, $.String, 
          $.Boolean
        ]), 
      INTERNAL_HtmlDomManager_RemoveDomElementAttribute
    )
      .Parameter(0, "domElementRef", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:true , Public:true }, "RemoveFromDom", 
      new JSIL.MethodSignature(null, [$.Object, $.String]), 
      INTERNAL_HtmlDomManager_RemoveFromDom
    )
      .Parameter(0, "domNode", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:true , Public:true }, "RemoveFromSelectDomElement", 
      new JSIL.MethodSignature(null, [$.Object, $.Int32]), 
      INTERNAL_HtmlDomManager_RemoveFromSelectDomElement
    )
      .Parameter(0, "domNode", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:true , Public:true }, "SetContentString", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Windows.UI.Xaml.UIElement"), $.String, 
          $.Boolean
        ]), 
      INTERNAL_HtmlDomManager_SetContentString
    );

    $.Method({Static:true , Public:true }, "SetDomElementAttribute", 
      new JSIL.MethodSignature(null, [
          $.Object, $.String, 
          $.Object, $.Boolean
        ]), 
      INTERNAL_HtmlDomManager_SetDomElementAttribute
    )
      .Parameter(0, "domElementRef", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:true , Public:true }, "SetDomElementProperty", 
      new JSIL.MethodSignature(null, [
          $.Object, $.String, 
          $.Object, $.Boolean
        ]), 
      INTERNAL_HtmlDomManager_SetDomElementProperty
    )
      .Parameter(0, "domElementRef", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:true , Public:true }, "SetFocus", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.UIElement")), 
      INTERNAL_HtmlDomManager_SetFocus
    );

    $.Method({Static:true , Public:false}, "SetUIElementContentString", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.UIElement"), $.String]), 
      INTERNAL_HtmlDomManager_SetUIElementContentString
    );

    $['Field']({Static:true , Public:false}, "htmlDocument", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute")); 
    $['Field']({Static:true , Public:false}, "htmlWindow", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute")); 
    $['Field']({Static:true , Public:false}, "htmlBody", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute")); 
    function INTERNAL_HtmlDomManager__cctor ($exception) {
      if (!(true)) {
        JSIL.IgnoredMember("INTERNAL_idsToUIElements", $thisType).LValue = $S00().Construct();
      }
      if (!(true)) {
        $thisType.htmlDocument = $T02()['get_HtmlDocument']();
      } else {
        try {
          $thisType.htmlDocument = JSIL['GlobalNamespace'].document;
        } catch ($exception) {
        }
      }
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      INTERNAL_HtmlDomManager__cctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class DotNetForHtml5.Core.INTERNAL_HtmlDomUniqueIdentifiers */ 

(function INTERNAL_HtmlDomUniqueIdentifiers$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Int32)) ();
  };

  function INTERNAL_HtmlDomUniqueIdentifiers_CreateNew () {
    $thisType.CurrentIndentifier = ((($thisType.CurrentIndentifier | 0) + 1) | 0);
    return JSIL.ConcatString("id", ($thisType.CurrentIndentifier).toString());
  };

  JSIL.MakeStaticClass("DotNetForHtml5.Core.INTERNAL_HtmlDomUniqueIdentifiers", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "CreateNew", 
      JSIL.MethodSignature.Return($.String), 
      INTERNAL_HtmlDomUniqueIdentifiers_CreateNew
    );

    $['Field']({Static:true , Public:false}, "CurrentIndentifier", $.Int32, 0); 
    function INTERNAL_HtmlDomUniqueIdentifiers__cctor () {
      $thisType.CurrentIndentifier = 0;
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      INTERNAL_HtmlDomUniqueIdentifiers__cctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class DotNetForHtml5.Core.INTERNAL_ObjectTreeHelper */ 

(function INTERNAL_ObjectTreeHelper$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm00.Windows.UI.Xaml.DependencyObject))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Border)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Canvas)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm00.Windows.UI.Xaml.UIElement))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Collections.ObjectModel.Collection$b1.Of($asm00.Windows.UI.Xaml.UIElement))) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Panel)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Collections.IEnumerator)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.IDisposable)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.UserControl)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Windows.UI.Xaml.Window)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Exception"), [$asm06.TypeRef("System.String")]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm06.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm00.Windows.UI.Xaml.UIElement).get_Current)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm06.System.IDisposable.Dispose)) ();
  };

  function INTERNAL_ObjectTreeHelper_GetObjectTreeChildren (dependencyObject) {
    var flag = false;
    var flag2 = false;
    var uIElement = null;
    var list = $S00().Construct();
    if ($T04().$Is(dependencyObject)) {
      uIElement = ($T04().$Cast(dependencyObject))['get_Child']();
      flag2 = true;
      flag = true;
    }
    if ($T05().$Is(dependencyObject)) {
      var enumerator = (($T05().$Cast(dependencyObject))['get_Children']())['GetEnumerator']();
      try {

        while ($IM00().Call(enumerator, null)) {
          var current = $IM01().Call(enumerator, null);
          list['Add'](current);
        }
      } finally {
        if (enumerator !== null) {
          $IM02().Call(enumerator, null);
        }
      }
      flag2 = false;
      flag = true;
    }
    if ($T0B().$Is(dependencyObject)) {
      uIElement = ($T0B().$Cast(dependencyObject))['get_Content']();
      flag2 = true;
      flag = true;
    }
    if ($T0C().$Is(dependencyObject)) {
      uIElement = ($T0C().$Cast(dependencyObject))['get_Content']();
      flag2 = true;
      flag = true;
    }
    if (flag) {
      if (flag2) {
        if (uIElement !== null) {
          var list2 = $S00().Construct();
          list2['Add'](uIElement);
          var result = list2;
        } else {
          result = $S00().Construct();
        }
      } else {
        result = list;
      }
      return result;
    }
    throw $S01().Construct(JSIL.ConcatString("Could not determine the children of: ", (JSIL['GetType'](dependencyObject))['toString']()));
  };

  JSIL.MakeStaticClass("DotNetForHtml5.Core.INTERNAL_ObjectTreeHelper", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "GetObjectTreeChildren", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject")]), [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject")]), 
      INTERNAL_ObjectTreeHelper_GetObjectTreeChildren
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class DotNetForHtml5.Core.INTERNAL_VisualChildInformation */ 

(function INTERNAL_VisualChildInformation$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };

  function INTERNAL_VisualChildInformation__ctor () {
  };

  function INTERNAL_VisualChildInformation_get_INTERNAL_OptionalChildWrapper_ChildWrapperInnerDomElement () {
    return this.INTERNAL_VisualChildInformation$INTERNAL_OptionalChildWrapper_ChildWrapperInnerDomElement$value;
  };

  function INTERNAL_VisualChildInformation_get_INTERNAL_OptionalChildWrapper_OuterDomElement () {
    return this.INTERNAL_VisualChildInformation$INTERNAL_OptionalChildWrapper_OuterDomElement$value;
  };

  function INTERNAL_VisualChildInformation_get_INTERNAL_UIElement () {
    return this.INTERNAL_VisualChildInformation$INTERNAL_UIElement$value;
  };

  function INTERNAL_VisualChildInformation_set_INTERNAL_OptionalChildWrapper_ChildWrapperInnerDomElement (value) {
    this.INTERNAL_VisualChildInformation$INTERNAL_OptionalChildWrapper_ChildWrapperInnerDomElement$value = value;
  };

  function INTERNAL_VisualChildInformation_set_INTERNAL_OptionalChildWrapper_OuterDomElement (value) {
    this.INTERNAL_VisualChildInformation$INTERNAL_OptionalChildWrapper_OuterDomElement$value = value;
  };

  function INTERNAL_VisualChildInformation_set_INTERNAL_UIElement (value) {
    this.INTERNAL_VisualChildInformation$INTERNAL_UIElement$value = value;
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "DotNetForHtml5.Core.INTERNAL_VisualChildInformation", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      INTERNAL_VisualChildInformation__ctor
    );

    $.Method({Static:false, Public:true }, "get_INTERNAL_OptionalChildWrapper_ChildWrapperInnerDomElement", 
      JSIL.MethodSignature.Return($.Object), 
      INTERNAL_VisualChildInformation_get_INTERNAL_OptionalChildWrapper_ChildWrapperInnerDomElement
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_INTERNAL_OptionalChildWrapper_OuterDomElement", 
      JSIL.MethodSignature.Return($.Object), 
      INTERNAL_VisualChildInformation_get_INTERNAL_OptionalChildWrapper_OuterDomElement
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_INTERNAL_UIElement", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.UIElement")), 
      INTERNAL_VisualChildInformation_get_INTERNAL_UIElement
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_INTERNAL_OptionalChildWrapper_ChildWrapperInnerDomElement", 
      JSIL.MethodSignature.Action($.Object), 
      INTERNAL_VisualChildInformation_set_INTERNAL_OptionalChildWrapper_ChildWrapperInnerDomElement
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"))
      .Parameter(0, "value", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:true }, "set_INTERNAL_OptionalChildWrapper_OuterDomElement", 
      JSIL.MethodSignature.Action($.Object), 
      INTERNAL_VisualChildInformation_set_INTERNAL_OptionalChildWrapper_OuterDomElement
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"))
      .Parameter(0, "value", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:true }, "set_INTERNAL_UIElement", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.UIElement")), 
      INTERNAL_VisualChildInformation_set_INTERNAL_UIElement
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $['Field']({Static:false, Public:false}, "INTERNAL_VisualChildInformation$INTERNAL_UIElement$value", $asm00.TypeRef("Windows.UI.Xaml.UIElement"))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "INTERNAL_VisualChildInformation$INTERNAL_OptionalChildWrapper_OuterDomElement$value", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "INTERNAL_VisualChildInformation$INTERNAL_OptionalChildWrapper_ChildWrapperInnerDomElement$value", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true }, "INTERNAL_UIElement", $asm00.TypeRef("Windows.UI.Xaml.UIElement"));

    $.Property({Static:false, Public:true }, "INTERNAL_OptionalChildWrapper_OuterDomElement", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"));

    $.Property({Static:false, Public:true }, "INTERNAL_OptionalChildWrapper_ChildWrapperInnerDomElement", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class DotNetForHtml5.Core.INTERNAL_VisualTreeManager */ 

(function INTERNAL_VisualTreeManager$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Canvas)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.HorizontalAlignment)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.VerticalAlignment)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm00.Windows.UI.Xaml.UIElement, $asm00.DotNetForHtml5.Core.INTERNAL_VisualChildInformation))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualChildInformation)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Grid)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2_KeyCollection_Enumerator.Of($asm00.Windows.UI.Xaml.DependencyProperty, $asm00.DotNetForHtml5.Core.INTERNAL_PropertyStorage))) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2_KeyCollection.Of($asm00.Windows.UI.Xaml.DependencyProperty, $asm00.DotNetForHtml5.Core.INTERNAL_PropertyStorage))) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm00.Windows.UI.Xaml.DependencyProperty, $asm00.DotNetForHtml5.Core.INTERNAL_PropertyStorage))) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_PropertyStore)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm06.System.InvalidOperationException)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_WorkaroundIE11IssuesWithScrollViewerInsideGrid)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2_ValueCollection_Enumerator.Of($asm00.Windows.UI.Xaml.UIElement, $asm00.DotNetForHtml5.Core.INTERNAL_VisualChildInformation))) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2_ValueCollection.Of($asm00.Windows.UI.Xaml.UIElement, $asm00.DotNetForHtml5.Core.INTERNAL_VisualChildInformation))) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm00.Windows.UI.Xaml.UIElement))) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm00.Windows.UI.Xaml.Window)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm00.Windows.UI.Xaml.DependencyProperty, $asm00.Windows.UI.Xaml.DependencyProperty))) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm06.System.Collections.Generic.KeyValuePair$b2.Of($asm00.Windows.UI.Xaml.DependencyProperty, $asm00.DotNetForHtml5.Core.INTERNAL_PropertyStorage)))) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm06.System.Collections.Generic.KeyValuePair$b2.Of($asm00.Windows.UI.Xaml.DependencyProperty, $asm00.DotNetForHtml5.Core.INTERNAL_PropertyStorage))) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm08.System.Linq.Enumerable)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_PropertyStorage)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm00.TypeRef("Windows.UI.Xaml.UIElement"), $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_VisualChildInformation")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.InvalidOperationException"), [$asm06.TypeRef("System.String")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.UIElement")]), null))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"), $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")]), null))) ();
  };

  function INTERNAL_VisualTreeManager_AttachVisualChild_Private (child, parent) {
    var obj3 = new JSIL.BoxedVariable(null);
    parent['INTERNAL_UpdateDomStructureIfNecessary']();
    var obj = JSIL.Coalesce(parent['GetDomElementWhereToPlaceChild'](child), parent.UIElement$INTERNAL_InnerDomElement$value);
    var obj2 = parent['CreateDomChildWrapper'](obj, /* ref */ obj3);
    var flag2 = obj3.get() === null;
    var flag3 = (obj2 !== null) && 
    !flag2;
    var obj4 = null;
    var flag4 = !$T03().$Is(parent);
    if (flag4) {
      var parentRef = (
        flag3
           ? obj3.get()
           : obj)
      ;
      obj4 = $T04()['CreateDomElementAndAppendIt']("div", parentRef, parent);
      var domElementStyleForModification = $T04()['GetDomElementStyleForModification'](obj4);
      domElementStyleForModification.boxSizing = "border-box";
      if (!(($T05().$As(child) === null) || 
          (($T05().$Cast(child))['get_HorizontalAlignment']() !== $T06().Stretch) || !(isNaN(($T05().$Cast(child))['get_Width']())))) {
        domElementStyleForModification.width = "100%";
      }
      if (!(($T05().$As(child) === null) || 
          (($T05().$Cast(child))['get_VerticalAlignment']() !== $T08().Stretch) || !(isNaN(($T05().$Cast(child))['get_Height']())))) {
        domElementStyleForModification.height = "100%";
      }
    }
    var parentRef2 = (
      flag4
         ? obj4
         : (
          flag3
             ? obj3.get()
             : obj)
    )
    ;
    child.UIElement$INTERNAL_VisualParent$value = parent;
    var iNTERNAL_InnerDomElement = new JSIL.BoxedVariable(null);
    if (child.UIElement$INTERNAL_HtmlRepresentation$value === null) {
      var obj5 = child['CreateDomElement'](parentRef2, /* ref */ iNTERNAL_InnerDomElement);
    } else {
      obj5 = $T04()['CreateDomFromStringAndAppendIt'](child.UIElement$INTERNAL_HtmlRepresentation$value, parentRef2, child);
    }
    if ($T05().$Is(child)) {
      $T05()['INTERNAL_InitializeOuterDomElementWidthAndHeight']($T05().$Cast(child), obj5);
    }
    child['INTERNAL_UpdateDomStructureIfNecessary']();
    $T04()['SetDomElementAttribute'](obj5, "class", (JSIL['GetType'](child))['toString'](), false);
    child.UIElement$INTERNAL_OuterDomElement$value = obj5;
    child.UIElement$INTERNAL_InnerDomElement$value = iNTERNAL_InnerDomElement.get();
    child.UIElement$INTERNAL_AdditionalOutsideDivForMargins$value = JSIL.Coalesce(obj4, obj5);
    child.UIElement$INTERNAL_InnerDivOfTheChildWrapperOfTheParentIfAny$value = (
      flag3
         ? obj3.get()
         : null)
    ;
    if (parent.UIElement$INTERNAL_VisualChildrenInformation$value === null) {
      parent.UIElement$INTERNAL_VisualChildrenInformation$value = $S00().Construct();
    }
    var arg_324_0 = parent.UIElement$INTERNAL_VisualChildrenInformation$value;
    var iNTERNAL_VisualChildInformation = new ($T0A())();
    iNTERNAL_VisualChildInformation.INTERNAL_VisualChildInformation$INTERNAL_UIElement$value = child;
    iNTERNAL_VisualChildInformation.INTERNAL_VisualChildInformation$INTERNAL_OptionalChildWrapper_OuterDomElement$value = obj2;
    iNTERNAL_VisualChildInformation.INTERNAL_VisualChildInformation$INTERNAL_OptionalChildWrapper_ChildWrapperInnerDomElement$value = obj3.get();
    arg_324_0['Add'](child, iNTERNAL_VisualChildInformation);
    if (!flag4) {
      $T04()['GetDomElementStyleForModification'](obj5).position = "absolute";
    }
    if (!(($T0B().$As(parent) === null) || !$T05().$Is(child))) {
      var frameworkElement = $T05().$Cast(child);
      $T05()['INTERNAL_UpdateCssPointerEventsPropertyBasedOnIsHitTestVisibleAndIsEnabled'](
        frameworkElement, 
        frameworkElement['get_IsHitTestVisible'](), 
        frameworkElement['get_IsEnabled']()
      );
    }
    child['INTERNAL_AttachToDomEvents']();
    child['INTERNAL_OnAttachedToVisualTree']();
    if (parent.INTERNAL_AllInheritedProperties !== null) {
      var enumerator = ((parent.INTERNAL_AllInheritedProperties)['get_Keys']())['GetEnumerator']();

      while ($T0D().prototype['MoveNext'].call(enumerator)) {
        var current = $T0D().prototype['get_Current'].call(enumerator);
        child['SetInheritedValue'](current, $T11()['GetValue']((parent.INTERNAL_AllInheritedProperties)['get_Item'](current)), false);
      }
    }
    $thisType['RaiseChangedEventOnAllDependencyProperties'](child);
    child['INTERNAL_UpdateBindingsSource']();
    if ($T05().$Is(child)) {
      ($T05().$Cast(child))['INTERNAL_RaiseLoadedEvent']();
    }
  };

  function INTERNAL_VisualTreeManager_AttachVisualChildIfNotAlreadyAttached (child, parent) {
    if (!((child === null) || !$thisType['IsElementInVisualTree'](parent))) {
      if (child.UIElement$INTERNAL_VisualParent$value === null) {
        ;
        $thisType['AttachVisualChild_Private'](child, parent);
        ;
      } else if (child.UIElement$INTERNAL_VisualParent$value !== parent) {
        throw $S01().Construct("The element already has a parent. An element cannot appear in multiple locations in the Visual Tree. Remove the element from the Visual Tree before adding it elsewhere.");
      }
      $T13()['RefreshLayoutIfIE']();
    }
  };

  function INTERNAL_VisualTreeManager_DetachVisualChidrenRecursively (element) {
    element['ResetInheritedProperties']();
    element['INTERNAL_OnDetachedFromVisualTree']();
    element['INTERNAL_DetachFromDomEvents']();
    if ($T05().$Is(element)) {
      ($T05().$Cast(element))['INTERNAL_RaiseUnloadedEvent']();
    }
    if (element.UIElement$INTERNAL_VisualChildrenInformation$value !== null) {
      var enumerator = ((element.UIElement$INTERNAL_VisualChildrenInformation$value)['get_Values']())['GetEnumerator']();

      while ($T14().prototype['MoveNext'].call(enumerator)) {
        var current = $T14().prototype['get_Current'].call(enumerator);
        $thisType['DetachVisualChidrenRecursively'](current.INTERNAL_VisualChildInformation$INTERNAL_UIElement$value);
      }
    }
    element.UIElement$INTERNAL_OuterDomElement$value = null;
    element.UIElement$INTERNAL_InnerDomElement$value = null;
    element.UIElement$INTERNAL_VisualParent$value = null;
    element.UIElement$INTERNAL_VisualChildrenInformation$value = null;
    element.UIElement$INTERNAL_AdditionalOutsideDivForMargins$value = null;
  };

  function INTERNAL_VisualTreeManager_DetachVisualChildIfNotNull (child, parent) {
    if (!((child === null) || !$thisType['IsElementInVisualTree'](child))) {
      var text = (
        !(true)
           ? JSIL.ConcatString("Removing ", (JSIL['GetType'](child))['toString']())
           : null)
      ;
      $T04()['RemoveFromDom'](child.UIElement$INTERNAL_AdditionalOutsideDivForMargins$value, text);
      var iNTERNAL_OptionalChildWrapper_OuterDomElement = (parent.UIElement$INTERNAL_VisualChildrenInformation$value)['get_Item'](child).INTERNAL_VisualChildInformation$INTERNAL_OptionalChildWrapper_OuterDomElement$value;
      if (iNTERNAL_OptionalChildWrapper_OuterDomElement !== null) {
        $T04()['RemoveFromDom'](iNTERNAL_OptionalChildWrapper_OuterDomElement);
      }
      (parent.UIElement$INTERNAL_VisualChildrenInformation$value)['Remove'](child);
      $thisType['DetachVisualChidrenRecursively'](child);
      $T13()['RefreshLayoutIfIE']();
    }
  };

  function INTERNAL_VisualTreeManager_get_INTERNAL_ListOfElementsContainingPointerWithMouseEnterOrMouseLeaveEvents () {
    if ($thisType._listOfElementsContainingPointerWithMouseEnterOrMouseLeaveEvents === null) {
      $thisType._listOfElementsContainingPointerWithMouseEnterOrMouseLeaveEvents = $S02().Construct();
    }
    return $thisType._listOfElementsContainingPointerWithMouseEnterOrMouseLeaveEvents;
  };

  function INTERNAL_VisualTreeManager_IsElementInVisualTree (child) {
    return (($T18().$As(child) !== null) || (child.UIElement$INTERNAL_VisualParent$value !== null));
  };

  function INTERNAL_VisualTreeManager_RaiseChangedEventOnAllDependencyProperties (dependencyObject) {
    var $temp00;
    var dictionary = $S03().Construct();
    if (dependencyObject.INTERNAL_PropertyStorageDictionary !== null) {
      var list = $T1C()['ToList$b1']($T1B())(dependencyObject.INTERNAL_PropertyStorageDictionary);

      for (var a$0 = list._items, i$0 = 0, l$0 = (list._size | 0); i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        var key = current['get_Key']();
        var value = current['get_Value']();
        var value2 = $T11()['GetValue'](value);
        $T11()['OnPropertyChanged'](value, value2, value2);
        dictionary['Add'](key, key);
      }
    }
  };

  JSIL.MakeStaticClass("DotNetForHtml5.Core.INTERNAL_VisualTreeManager", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:false}, "AttachVisualChild_Private", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.UIElement"), $asm00.TypeRef("Windows.UI.Xaml.UIElement")]), 
      INTERNAL_VisualTreeManager_AttachVisualChild_Private
    );

    $.Method({Static:true , Public:true }, "AttachVisualChildIfNotAlreadyAttached", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.UIElement"), $asm00.TypeRef("Windows.UI.Xaml.UIElement")]), 
      INTERNAL_VisualTreeManager_AttachVisualChildIfNotAlreadyAttached
    );

    $.Method({Static:true , Public:false}, "DetachVisualChidrenRecursively", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.UIElement")), 
      INTERNAL_VisualTreeManager_DetachVisualChidrenRecursively
    );

    $.Method({Static:true , Public:true }, "DetachVisualChildIfNotNull", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.UIElement"), $asm00.TypeRef("Windows.UI.Xaml.UIElement")]), 
      INTERNAL_VisualTreeManager_DetachVisualChildIfNotNull
    );

    $.Method({Static:true , Public:false}, "get_INTERNAL_ListOfElementsContainingPointerWithMouseEnterOrMouseLeaveEvents", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.UIElement")])), 
      INTERNAL_VisualTreeManager_get_INTERNAL_ListOfElementsContainingPointerWithMouseEnterOrMouseLeaveEvents
    );

    $.Method({Static:true , Public:false}, "IsElementInVisualTree", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Windows.UI.Xaml.UIElement")]), 
      INTERNAL_VisualTreeManager_IsElementInVisualTree
    );

    $.Method({Static:true , Public:false}, "RaiseChangedEventOnAllDependencyProperties", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DependencyObject")), 
      INTERNAL_VisualTreeManager_RaiseChangedEventOnAllDependencyProperties
    );

    $['Field']({Static:true , Public:false}, "_listOfElementsContainingPointerWithMouseEnterOrMouseLeaveEvents", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.UIElement")])); 
    $.Property({Static:true , Public:false}, "INTERNAL_ListOfElementsContainingPointerWithMouseEnterOrMouseLeaveEvents", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.UIElement")]));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface Windows.UI.Xaml.Markup.INameScope */ 

JSIL.MakeInterface(
  "Windows.UI.Xaml.Markup.INameScope", true, [], function ($) {
    $.Method({}, "FindName", new JSIL.MethodSignature($.Object, [$.String]));
    $.Method({}, "RegisterName", new JSIL.MethodSignature(null, [$.String, $.Object]));
    $.Method({}, "UnregisterName", JSIL.MethodSignature.Action($.String));
  }, []);

JSIL.DeclareNamespace("System.IO.IsolatedStorage");
/* class System.IO.IsolatedStorage.IsolatedStorageSettings */ 

(function IsolatedStorageSettings$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.Application)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.System.IO.IsolatedStorage.IsolatedStorageSettingsForCSharp)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm06.System.String))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.System.IO.IsolatedStorage.IsolatedStorageSettings_$lEnumerateKeyValues$gd__3f)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.Collections.ICollection)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm08.System.Linq.Enumerable)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm06.System.Object))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.System.IO.IsolatedStorage.IsolatedStorageSettings_$lGetEnumerator$gd__37)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.System.IO.IsolatedStorage.IsolatedStorageSettings_GetEnumerator$gd__32)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.System.Type)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("System.String")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("System.Object")]), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("System.Boolean"), [$asm06.TypeRef("System.String")]))) ();
  };

  function IsolatedStorageSettings__ctor () {
    this._fullApplicationName = null;
    this._fullApplicationName = $T01().Application$Current$value['toString']();
  };

  function IsolatedStorageSettings_Add (key, value) {
    if (true) {
      this['GetLocalStorage']()[JSIL.ConcatString(this['GetKeysFirstPart'](), key)] = value;
    } else {
      $T03()['get_Instance']()['Add'](key, value);
      $T03()['get_Instance']()['Save']();
    }
  };

  function IsolatedStorageSettings_Clear () {
    var $temp00;
    if (true) {
      var list = $T04().$Cast(this['get_Keys']());

      for (var a$0 = list._items, i$0 = 0, l$0 = (list._size | 0); i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        (this['GetLocalStorage']())['removeItem'](JSIL.ConcatString(this['GetKeysFirstPart'](), current));
      }
    } else {
      $T03()['get_Instance']()['Clear']();
    }
  };

  function IsolatedStorageSettings_Contains (key) {
    if (true) {
      var result = (this['GetLocalStorage']())['getItem'](JSIL.ConcatString(this['GetKeysFirstPart'](), key)) !== null;
    } else {
      result = $T03()['get_Instance']()['ContainsKey'](key);
    }
    return result;
  };

  function IsolatedStorageSettings_EnumerateKeyValues () {
    var $lEnumerateKeyValues$gd__3f = new ($T06())(-2);
    $lEnumerateKeyValues$gd__3f.$l$g4__this = this;
    return $lEnumerateKeyValues$gd__3f;
  };

  function IsolatedStorageSettings_get_ApplicationSettings () {
    if ($thisType._applicationSettings === null) {
      $thisType._applicationSettings = new $thisType();
    }
    return $thisType._applicationSettings;
  };

  function IsolatedStorageSettings_get_Count () {
    if (true) {
      var num = $T07().$Cast(this['GetLocalStorage']().length);
      var num2 = 0;

      for (var i = 0; i < num; i = ((i + 1) | 0)) {
        if (((this['GetLocalStorage']())['key'](i))['startsWith'](this['GetKeysFirstPart']())) {
          num2 = ((num2 + 1) | 0);
        }
      }
      var result = num2;
    } else {
      result = ($T03()['get_Instance']()['get_Count']() | 0);
    }
    return result;
  };

  function IsolatedStorageSettings_get_Item (key) {
    if (true) {
      var result = this['GetLocalStorage']()[JSIL.ConcatString(this['GetKeysFirstPart'](), key)];
    } else {
      result = $T03()['get_Instance']()['get_Item'](key);
    }
    return result;
  };

  function IsolatedStorageSettings_get_Keys () {
    if (true) {
      var localStorage = this['GetLocalStorage']();
      var list = $S00().Construct();
      var num = $T07().$Cast(localStorage.length);
      var length = (this['GetKeysFirstPart']().length | 0);

      for (var i = 0; i < num; i = ((i + 1) | 0)) {
        if ((localStorage['key'](i))['startsWith'](this['GetKeysFirstPart']())) {
          var arg_303_2 = list;
          arg_303_2['Add']((localStorage['key'](i))['substring'](length));
        }
      }
      var result = list;
    } else {
      result = $T09()['ToList$b1']($T02())($T03()['get_Instance']()['get_Keys']());
    }
    return result;
  };

  function IsolatedStorageSettings_get_Values () {
    if (true) {
      var list = $S01().Construct();
      var num = $T07().$Cast(this['GetLocalStorage']().length);

      for (var i = 0; i < num; i = ((i + 1) | 0)) {
        var text = $T02().$Cast((this['GetLocalStorage']())['key'](i));
        if (System.String.StartsWith(text, this['GetKeysFirstPart']())) {
          var arg_230_2 = list;
          arg_230_2['Add'](this['GetLocalStorage']()[text]);
        }
      }
      var result = list;
    } else {
      result = $T09()['ToList$b1']($T00())($T03()['get_Instance']()['get_Values']());
    }
    return result;
  };

  function IsolatedStorageSettings_GetEnumerator () {
    var $lGetEnumerator$gd__ = new ($T0B())(0);
    $lGetEnumerator$gd__.$l$g4__this = this;
    return $lGetEnumerator$gd__;
  };

  function IsolatedStorageSettings_GetKeysFirstPart () {
    return ("storage_" + this._fullApplicationName + "_settings_");
  };

  function IsolatedStorageSettings_GetLocalStorage () {
    if (true) {
      var obj = (function(){
            return window.localStorage;
        }());
      var obj2 = obj === null;
      if (!obj2) {
        var arg_1C6_2 = obj2 | (obj === (undefined));
      } else {
        arg_1C6_2 = obj2;
      }
      if (arg_1C6_2) {
        if(window.IE_VERSION && document.location.protocol === "file:") {
            JSIL.RuntimeError("The local storage - used to persist data - is not available on Internet Explorer or Edge when running the website from the local file system (ie. the URL starts with 'c:\' or 'file:///'). To solve the problem, please run the website from a web server instead (ie. the URL must start with 'http://' or 'https://') or test the local storage using a different browser.")
        };
        var result = null;
      } else {
        result = obj;
      }
    } else {
      result = JSIL.IgnoredMember("ExecuteJavaScriptWithResult(javaScriptToExecute, commentForDebugging)", "window.localStorage", null).LValue;
    }
    return result;
  };

  function IsolatedStorageSettings_Remove (key) {
    if (true) {
      var localStorage = this['GetLocalStorage']();
      if (localStorage['getItem'](JSIL.ConcatString(this['GetKeysFirstPart'](), key)) === null) {
        var result = false;
      } else {
        localStorage['removeItem'](JSIL.ConcatString(this['GetKeysFirstPart'](), key));
        result = true;
      }
    } else {
      var flag = $S02().CallVirtual("Remove", null, $T03()['get_Instance'](), key);
      $T03()['get_Instance']()['Save']();
      result = flag;
    }
    return result;
  };

  function IsolatedStorageSettings_set_Item (key, value) {
    if (true) {
      this['GetLocalStorage']()[JSIL.ConcatString(this['GetKeysFirstPart'](), key)] = value;
    } else {
      $T03()['get_Instance']()['set_Item'](key, value);
    }
  };

  function IsolatedStorageSettings_System_Collections_IEnumerable_GetEnumerator () {
    var getEnumerator$gd__ = new ($T0C())(0);
    getEnumerator$gd__.$l$g4__this = this;
    return getEnumerator$gd__;
  };

  function IsolatedStorageSettings_TryGetValue$b1 (T, key, /* ref */ value) {
    var obj2 = new JSIL.BoxedVariable(null);
    if (true) {
      var obj = (this['GetLocalStorage']())['getItem'](JSIL.ConcatString(this['GetKeysFirstPart'](), key));
      if (obj === null) {
        value.set((
            T.IsValueType
               ? JSIL['CreateInstanceOfType'](T)
               : null)
        );
        var result = false;
      } else {
        value.set(JSIL.CloneParameter(T, T.$Cast(obj)));
        result = true;
      }
    } else {
      var flag = $T03()['get_Instance']()['TryGetValue'](key, /* ref */ obj2);
      value.set(JSIL.CloneParameter(T, T.$Cast(obj2.get())));
      result = flag;
    }
    return result;
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.IO.IsolatedStorage.IsolatedStorageSettings", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void, 
      IsolatedStorageSettings__ctor
    );

    $.Method({Static:false, Public:true }, "Add", 
      new JSIL.MethodSignature(null, [$.String, $.Object]), 
      IsolatedStorageSettings_Add
    );

    $.Method({Static:false, Public:true }, "Clear", 
      JSIL.MethodSignature.Void, 
      IsolatedStorageSettings_Clear
    );

    $.Method({Static:false, Public:true }, "Contains", 
      new JSIL.MethodSignature($.Boolean, [$.String]), 
      IsolatedStorageSettings_Contains
    );

    $.Method({Static:false, Public:false}, "EnumerateKeyValues", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])])), 
      IsolatedStorageSettings_EnumerateKeyValues
    );

    $.Method({Static:true , Public:true }, "get_ApplicationSettings", 
      JSIL.MethodSignature.Return($.Type), 
      IsolatedStorageSettings_get_ApplicationSettings
    );

    $.Method({Static:false, Public:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32), 
      IsolatedStorageSettings_get_Count
    );

    $.Method({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($.Object, [$.String]), 
      IsolatedStorageSettings_get_Item
    );

    $.Method({Static:false, Public:true }, "get_Keys", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.ICollection")), 
      IsolatedStorageSettings_get_Keys
    );

    $.Method({Static:false, Public:true }, "get_Values", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.ICollection")), 
      IsolatedStorageSettings_get_Values
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])])), 
      IsolatedStorageSettings_GetEnumerator
    );

    $.Method({Static:false, Public:false}, "GetKeysFirstPart", 
      JSIL.MethodSignature.Return($.String), 
      IsolatedStorageSettings_GetKeysFirstPart
    );

    $.Method({Static:false, Public:false}, "GetLocalStorage", 
      JSIL.MethodSignature.Return($.Object), 
      IsolatedStorageSettings_GetLocalStorage
    );

    $.Method({Static:false, Public:true }, "Remove", 
      new JSIL.MethodSignature($.Boolean, [$.String]), 
      IsolatedStorageSettings_Remove
    );

    $.Method({Static:false, Public:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$.String, $.Object]), 
      IsolatedStorageSettings_set_Item
    );

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.IEnumerator")), 
      IsolatedStorageSettings_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Method({Static:false, Public:true }, "TryGetValue", 
      new JSIL.MethodSignature($.Boolean, [$.String, $jsilcore.TypeRef("JSIL.Reference", ["!!0"])], ["T"]), 
      IsolatedStorageSettings_TryGetValue$b1
    );

    $['Field']({Static:false, Public:false}, "_fullApplicationName", $.String); 
    $['Field']({Static:true , Public:false}, "_applicationSettings", $.Type, null); 
    function IsolatedStorageSettings__cctor () {
      $thisType._applicationSettings = null;
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      IsolatedStorageSettings__cctor
    );

    $.Property({Static:true , Public:true }, "ApplicationSettings", $.Type);

    $.Property({Static:false, Public:true }, "Count", $.Int32);

    $.Property({Static:false, Public:true }, "Keys", $asm06.TypeRef("System.Collections.ICollection"));

    $.Property({Static:false, Public:true }, "Values", $asm06.TypeRef("System.Collections.ICollection"));

    $.Property({Static:false, Public:true }, "Item", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]), 
      /* 1 */ $asm06.TypeRef("System.Collections.IEnumerable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

JSIL.DeclareNamespace("$lSystem");
JSIL.DeclareNamespace("$lSystem.Collections");
JSIL.DeclareNamespace("$lSystem.Collections.IEnumerable");
/* class System.IO.IsolatedStorage.IsolatedStorageSettings+GetEnumerator>d__32 */ 

(function GetEnumerator$gd__32$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.IDisposable)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerable$b1.Of($asm06.System.Collections.Generic.KeyValuePair$b2.Of($asm06.System.String, $asm06.System.Object)))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.System.IO.IsolatedStorage.IsolatedStorageSettings)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Collections.IEnumerator)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm06.System.Collections.Generic.KeyValuePair$b2.Of($asm06.System.String, $asm06.System.Object)))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.NotSupportedException"), null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm06.System.IDisposable.Dispose)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerable$b1.Of($asm06.System.Collections.Generic.KeyValuePair$b2.Of($asm06.System.String, $asm06.System.Object)).GetEnumerator)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm06.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm06.System.Collections.Generic.KeyValuePair$b2.Of($asm06.System.String, $asm06.System.Object)).get_Current)) ();
  };

  function GetEnumerator$gd__32__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
  };

  function GetEnumerator$gd__32_$l$gm__Finally35 () {
    this.$l$g1__state = -1;
    if (this.$l$g7__wrap34 !== null) {
      $IM00().Call(this.$l$g7__wrap34, null);
    }
  };

  function GetEnumerator$gd__32_MoveNext ($exception) {
    try {

      var $label0 = 0;
    $labelgroup0: 
      while (true) {
        switch ($label0) {
          case 0: /* $entry0 */ 
            switch (this.$l$g1__state) {
              case 0: 
                this.$l$g1__state = -1;
                this.$l$g7__wrap34 = $IM01().Call((this.$l$g4__this)['EnumerateKeyValues'](), null);
                this.$l$g1__state = 1;
                $label0 = 1 /* goto IL_7F */ ;
                continue $labelgroup0;

              case 2: 
                this.$l$g1__state = 1;
                $label0 = 1 /* goto IL_7F */ ;
                continue $labelgroup0;

            }
            $label0 = 2 /* goto IL_96 */ ;
            continue $labelgroup0;

          case 1: /* IL_7F */ 
            if ($IM02().Call(this.$l$g7__wrap34, null)) {
              this.$lkv$g5__33 = $IM03().Call(this.$l$g7__wrap34, null)['MemberwiseClone']();
              this.$l$g2__current = this.$lkv$g5__33['MemberwiseClone']();
              this.$l$g1__state = 2;
              var result = true;
              return result;
            }
            this['$l$gm__Finally35']();

            $label0 = 2 /* goto IL_96 */ ;
            continue $labelgroup0;
          case 2: /* IL_96 */ 
            result = false;

            break $labelgroup0;
        }
      }
    } catch ($exception) {
      this['System_IDisposable_Dispose']();
      throw $exception;
    }
    return result;
  };

  function GetEnumerator$gd__32_System_Collections_Generic_IEnumerator$lSystem_Object$g_get_Current () {
    return this.$l$g2__current;
  };

  function GetEnumerator$gd__32_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  };

  function GetEnumerator$gd__32_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  };

  function GetEnumerator$gd__32_System_IDisposable_Dispose () {
    switch (this.$l$g1__state) {
      case 1: 
        break;

      case 2: 
        break;

      default: 
        return;

    }
    try {
    } finally {
      this['$l$gm__Finally35']();
    }
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.IO.IsolatedStorage.IsolatedStorageSettings+GetEnumerator>d__32", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      GetEnumerator$gd__32__ctor
    )
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false}, "$l$gm__Finally35", 
      JSIL.MethodSignature.Void, 
      GetEnumerator$gd__32_$l$gm__Finally35
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      GetEnumerator$gd__32_MoveNext
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Object$g.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      GetEnumerator$gd__32_System_Collections_Generic_IEnumerator$lSystem_Object$g_get_Current
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("System.Object")]), "get_Current")
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      GetEnumerator$gd__32_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      GetEnumerator$gd__32_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      GetEnumerator$gd__32_System_IDisposable_Dispose
    )
      .Overrides($asm06.TypeRef("System.IDisposable"), "Dispose");

    $['Field']({Static:false, Public:false}, "$l$g2__current", $.Object); 
    $['Field']({Static:false, Public:false}, "$l$g1__state", $.Int32); 
    $['Field']({Static:false, Public:true }, "$l$g4__this", $asm00.TypeRef("System.IO.IsolatedStorage.IsolatedStorageSettings")); 
    $['Field']({Static:false, Public:true }, "$lkv$g5__33", $asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])); 
    $['Field']({Static:false, Public:true }, "$l$g7__wrap34", $asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])])); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Object$g.Current", $.Object);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$.Object]), 
      /* 1 */ $asm06.TypeRef("System.Collections.IEnumerator"), 
      /* 2 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.IO.IsolatedStorage.IsolatedStorageSettings+<GetEnumerator>d__37 */ 

(function $lGetEnumerator$gd__37$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.IDisposable)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerable$b1.Of($asm06.System.Collections.Generic.KeyValuePair$b2.Of($asm06.System.String, $asm06.System.Object)))) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.System.IO.IsolatedStorage.IsolatedStorageSettings)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Collections.IEnumerator)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm06.System.Collections.Generic.KeyValuePair$b2.Of($asm06.System.String, $asm06.System.Object)))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.NotSupportedException"), null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm06.System.IDisposable.Dispose)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerable$b1.Of($asm06.System.Collections.Generic.KeyValuePair$b2.Of($asm06.System.String, $asm06.System.Object)).GetEnumerator)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm06.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm06.System.Collections.Generic.KeyValuePair$b2.Of($asm06.System.String, $asm06.System.Object)).get_Current)) ();
  };

  function $lGetEnumerator$gd__37__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
  };

  function $lGetEnumerator$gd__37_$l$gm__Finally3a () {
    this.$l$g1__state = -1;
    if (this.$l$g7__wrap39 !== null) {
      $IM00().Call(this.$l$g7__wrap39, null);
    }
  };

  function $lGetEnumerator$gd__37_MoveNext ($exception) {
    try {

      var $label0 = 0;
    $labelgroup0: 
      while (true) {
        switch ($label0) {
          case 0: /* $entry0 */ 
            switch (this.$l$g1__state) {
              case 0: 
                this.$l$g1__state = -1;
                this.$l$g7__wrap39 = $IM01().Call((this.$l$g4__this)['EnumerateKeyValues'](), null);
                this.$l$g1__state = 1;
                $label0 = 1 /* goto IL_7A */ ;
                continue $labelgroup0;

              case 2: 
                this.$l$g1__state = 1;
                $label0 = 1 /* goto IL_7A */ ;
                continue $labelgroup0;

            }
            $label0 = 2 /* goto IL_91 */ ;
            continue $labelgroup0;

          case 1: /* IL_7A */ 
            if ($IM02().Call(this.$l$g7__wrap39, null)) {
              this.$lkv$g5__38 = $IM03().Call(this.$l$g7__wrap39, null)['MemberwiseClone']();
              this.$l$g2__current = this.$lkv$g5__38['MemberwiseClone']();
              this.$l$g1__state = 2;
              var result = true;
              return result;
            }
            this['$l$gm__Finally3a']();

            $label0 = 2 /* goto IL_91 */ ;
            continue $labelgroup0;
          case 2: /* IL_91 */ 
            result = false;

            break $labelgroup0;
        }
      }
    } catch ($exception) {
      this['System_IDisposable_Dispose']();
      throw $exception;
    }
    return result;
  };

  function $lGetEnumerator$gd__37_System_Collections_Generic_IEnumerator$lSystem_Collections_Generic_KeyValuePair$lSystem_String$cmSystem_Object$g$g_get_Current () {
    return this.$l$g2__current;
  };

  function $lGetEnumerator$gd__37_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  };

  function $lGetEnumerator$gd__37_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  };

  function $lGetEnumerator$gd__37_System_IDisposable_Dispose () {
    switch (this.$l$g1__state) {
      case 1: 
        break;

      case 2: 
        break;

      default: 
        return;

    }
    try {
    } finally {
      this['$l$gm__Finally3a']();
    }
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.IO.IsolatedStorage.IsolatedStorageSettings+<GetEnumerator>d__37", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lGetEnumerator$gd__37__ctor
    )
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false}, "$l$gm__Finally3a", 
      JSIL.MethodSignature.Void, 
      $lGetEnumerator$gd__37_$l$gm__Finally3a
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lGetEnumerator$gd__37_MoveNext
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Collections.Generic.KeyValuePair$lSystem.String$cmSystem.Object$g$g.get_Current", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])), 
      $lGetEnumerator$gd__37_System_Collections_Generic_IEnumerator$lSystem_Collections_Generic_KeyValuePair$lSystem_String$cmSystem_Object$g$g_get_Current
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm06.TypeRef("System.String"), $asm06.TypeRef("System.Object")])]), "get_Current")
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lGetEnumerator$gd__37_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lGetEnumerator$gd__37_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lGetEnumerator$gd__37_System_IDisposable_Dispose
    )
      .Overrides($asm06.TypeRef("System.IDisposable"), "Dispose");

    $['Field']({Static:false, Public:false}, "$l$g2__current", $asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])); 
    $['Field']({Static:false, Public:false}, "$l$g1__state", $.Int32); 
    $['Field']({Static:false, Public:true }, "$l$g4__this", $asm00.TypeRef("System.IO.IsolatedStorage.IsolatedStorageSettings")); 
    $['Field']({Static:false, Public:true }, "$lkv$g5__38", $asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])); 
    $['Field']({Static:false, Public:true }, "$l$g7__wrap39", $asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])])); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Collections.Generic.KeyValuePair$lSystem.String$cmSystem.Object$g$g.Current", $asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]), 
      /* 1 */ $asm06.TypeRef("System.Collections.IEnumerator"), 
      /* 2 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.IO.IsolatedStorage.IsolatedStorageSettings+<EnumerateKeyValues>d__3f */ 

(function $lEnumerateKeyValues$gd__3f$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Environment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.IDisposable)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.System.IO.IsolatedStorage.IsolatedStorageSettings)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm06.System.String))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.System.IO.IsolatedStorage.IsolatedStorageSettingsForCSharp)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1_Enumerator.Of($asm06.System.String))) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Collections.Generic.KeyValuePair$b2.Of($asm06.System.String, $asm06.System.Object))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.System.Collections.IEnumerator)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm06.System.Collections.Generic.KeyValuePair$b2.Of($asm06.System.String, $asm06.System.Object)))) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.NotSupportedException"), null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm06.System.IDisposable.Dispose)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm06.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm06.System.Collections.Generic.KeyValuePair$b2.Of($asm06.System.String, $asm06.System.Object)).get_Current)) ();
  };

  function $lEnumerateKeyValues$gd__3f__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01()['get_CurrentManagedThreadId']() | 0);
  };

  function $lEnumerateKeyValues$gd__3f_$l$gm__Finally46 () {
    this.$l$g1__state = -1;
    $IM00().Call(this.$l$g7__wrap45, null);
  };

  function $lEnumerateKeyValues$gd__3f_$l$gm__Finally48 () {
    this.$l$g1__state = -1;
    if (this.$l$g7__wrap47 !== null) {
      $IM00().Call(this.$l$g7__wrap47, null);
    }
  };

  function $lEnumerateKeyValues$gd__3f_MoveNext ($exception) {
    try {

      var $label0 = 0;
    $labelgroup0: 
      while (true) {
        switch ($label0) {
          case 0: /* $entry0 */ 
            switch (this.$l$g1__state) {
              case 0: 
                this.$l$g1__state = -1;
                if (true) {
                  this.$llocalStorage$g5__40 = (this.$l$g4__this)['GetLocalStorage']();
                  this.$lkeys$g5__41 = $T05().$Cast((this.$l$g4__this)['get_Keys']());
                  this.$l$g7__wrap45 = $T05().prototype['GetEnumerator'].call(this.$lkeys$g5__41);
                  this.$l$g1__state = 1;
                  $label0 = 1 /* goto IL_192 */ ;
                  continue $labelgroup0;
                }
                this.$l$g7__wrap47 = $T06()['get_Instance']()['GetEnumerator']();
                this.$l$g1__state = 3;
                $label0 = 2 /* goto IL_1FA */ ;
                continue $labelgroup0;

              case 2: 
                this.$l$g1__state = 1;
                $label0 = 1 /* goto IL_192 */ ;
                continue $labelgroup0;

              case 4: 
                this.$l$g1__state = 3;
                $label0 = 2 /* goto IL_1FA */ ;
                continue $labelgroup0;

            }
            break $labelgroup0;

          case 1: /* IL_192 */ 
            if (!$T07().prototype['MoveNext'].call(this.$l$g7__wrap45)) {
              this['$l$gm__Finally46']();
              $label0 = 3 /* goto IL_211 */ ;
              continue $labelgroup0;
            }
            this.$lkey$g5__42 = $T07().prototype['get_Current'].call(this.$l$g7__wrap45);
            this.$litem$g5__43 = $T08().$Cast((this.$llocalStorage$g5__40)['getItem'](JSIL.ConcatString((this.$l$g4__this)['GetKeysFirstPart'](), this.$lkey$g5__42)));
            this.$l$g2__current = new ($T09())(this.$lkey$g5__42, this.$litem$g5__43);
            this.$l$g1__state = 2;
            var result = true;
            return result;

            $label0 = 2 /* goto IL_1FA */ ;
            continue $labelgroup0;
          case 2: /* IL_1FA */ 
            if ($IM01().Call(this.$l$g7__wrap47, null)) {
              this.$lkv$g5__44 = $IM02().Call(this.$l$g7__wrap47, null)['MemberwiseClone']();
              this.$l$g2__current = this.$lkv$g5__44['MemberwiseClone']();
              this.$l$g1__state = 4;
              result = true;
              return result;
            }
            this['$l$gm__Finally48']();

            $label0 = 3 /* goto IL_211 */ ;
            continue $labelgroup0;
          case 3: /* IL_211 */ 
            break $labelgroup0;

        }
      }
      /* Original label IL_212 */ 
      result = false;
    } catch ($exception) {
      this['System_IDisposable_Dispose']();
      throw $exception;
    }
    return result;
  };

  function $lEnumerateKeyValues$gd__3f_System_Collections_Generic_IEnumerable$lSystem_Collections_Generic_KeyValuePair$lSystem_String$cmSystem_Object$g$g_GetEnumerator () {
    if (!((($T01()['get_CurrentManagedThreadId']() | 0) !== (this.$l$gl__initialThreadId | 0)) || ((this.$l$g1__state | 0) !== -2))) {
      this.$l$g1__state = 0;
      var $lEnumerateKeyValues$gd__3f = this;
    } else {
      $lEnumerateKeyValues$gd__3f = new $thisType(0);
      $lEnumerateKeyValues$gd__3f.$l$g4__this = this.$l$g4__this;
    }
    return $lEnumerateKeyValues$gd__3f;
  };

  function $lEnumerateKeyValues$gd__3f_System_Collections_Generic_IEnumerator$lSystem_Collections_Generic_KeyValuePair$lSystem_String$cmSystem_Object$g$g_get_Current () {
    return this.$l$g2__current;
  };

  function $lEnumerateKeyValues$gd__3f_System_Collections_IEnumerable_GetEnumerator () {
    return this['System_Collections_Generic_IEnumerable$lSystem_Collections_Generic_KeyValuePair$lSystem_String$cmSystem_Object$g$g_GetEnumerator']();
  };

  function $lEnumerateKeyValues$gd__3f_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  };

  function $lEnumerateKeyValues$gd__3f_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  };

  function $lEnumerateKeyValues$gd__3f_System_IDisposable_Dispose () {

    var $label0 = 0;
  $labelgroup0: 
    while (true) {
      switch ($label0) {
        case 0: /* $entry0 */ 
          switch (this.$l$g1__state) {
            case 1: 
              break;

            case 2: 
              break;

            default: 
              break $labelgroup0;

          }
          try {
          } finally {
            this['$l$gm__Finally46']();
          }
          break $labelgroup0;

      }
    }
    /* Original label IL_2A */ 
    switch (this.$l$g1__state) {
      case 3: 
        break;

      case 4: 
        break;

      default: 
        return;

    }
    try {
    } finally {
      this['$l$gm__Finally48']();
    }
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.IO.IsolatedStorage.IsolatedStorageSettings+<EnumerateKeyValues>d__3f", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lEnumerateKeyValues$gd__3f__ctor
    )
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false}, "$l$gm__Finally46", 
      JSIL.MethodSignature.Void, 
      $lEnumerateKeyValues$gd__3f_$l$gm__Finally46
    );

    $.Method({Static:false, Public:false}, "$l$gm__Finally48", 
      JSIL.MethodSignature.Void, 
      $lEnumerateKeyValues$gd__3f_$l$gm__Finally48
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lEnumerateKeyValues$gd__3f_MoveNext
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lSystem.Collections.Generic.KeyValuePair$lSystem.String$cmSystem.Object$g$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])])), 
      $lEnumerateKeyValues$gd__3f_System_Collections_Generic_IEnumerable$lSystem_Collections_Generic_KeyValuePair$lSystem_String$cmSystem_Object$g$g_GetEnumerator
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm06.TypeRef("System.String"), $asm06.TypeRef("System.Object")])]), "GetEnumerator")
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Collections.Generic.KeyValuePair$lSystem.String$cmSystem.Object$g$g.get_Current", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])), 
      $lEnumerateKeyValues$gd__3f_System_Collections_Generic_IEnumerator$lSystem_Collections_Generic_KeyValuePair$lSystem_String$cmSystem_Object$g$g_get_Current
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm06.TypeRef("System.String"), $asm06.TypeRef("System.Object")])]), "get_Current")
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.IEnumerator")), 
      $lEnumerateKeyValues$gd__3f_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lEnumerateKeyValues$gd__3f_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lEnumerateKeyValues$gd__3f_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lEnumerateKeyValues$gd__3f_System_IDisposable_Dispose
    )
      .Overrides($asm06.TypeRef("System.IDisposable"), "Dispose");

    $['Field']({Static:false, Public:false}, "$l$g2__current", $asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])); 
    $['Field']({Static:false, Public:false}, "$l$g1__state", $.Int32); 
    $['Field']({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32); 
    $['Field']({Static:false, Public:true }, "$l$g4__this", $asm00.TypeRef("System.IO.IsolatedStorage.IsolatedStorageSettings")); 
    $['Field']({Static:false, Public:true }, "$llocalStorage$g5__40", $.Object); 
    $['Field']({Static:false, Public:true }, "$lkeys$g5__41", $asm06.TypeRef("System.Collections.Generic.List`1", [$.String])); 
    $['Field']({Static:false, Public:true }, "$lkey$g5__42", $.String); 
    $['Field']({Static:false, Public:true }, "$litem$g5__43", $.String); 
    $['Field']({Static:false, Public:true }, "$lkv$g5__44", $asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])); 
    $['Field']({Static:false, Public:true }, "$l$g7__wrap45", $asm06.TypeRef("System.Collections.Generic.List`1+Enumerator", [$.String])); 
    $['Field']({Static:false, Public:true }, "$l$g7__wrap47", $asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])])); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lSystem.Collections.Generic.KeyValuePair$lSystem.String$cmSystem.Object$g$g.Current", $asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]), 
      /* 1 */ $asm06.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]), 
      /* 3 */ $asm06.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.IO.IsolatedStorage.IsolatedStorageSettingsForCSharp */ 

(function IsolatedStorageSettingsForCSharp$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm06.System.String, $asm06.System.Object))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Runtime.Serialization.Formatters.Binary.BinaryFormatter)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Collections.Generic.KeyValuePair$b2.Of($asm06.System.String, $asm06.System.Object))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize(System.Array.Of($asm06.System.Collections.Generic.KeyValuePair$b2.Of($asm06.System.String, $asm06.System.Object)))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.NotImplementedException)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.IO.IsolatedStorage.IsolatedStorageFile)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize(System.Array.Of($asm06.System.String))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.IO.Stream)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.System.IO.IsolatedStorage.IsolatedStorageFileStream)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm06.System.IO.FileMode)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.System.Runtime.Serialization.IFormatter)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm06.System.Collections.IDictionaryEnumerator)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm06.System.Collections.IEnumerator)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("System.String"), $asm06.TypeRef("System.Object")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Runtime.Serialization.Formatters.Binary.BinaryFormatter"), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.NotImplementedException"), null))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.IO.IsolatedStorage.IsolatedStorageFileStream"), [
        $asm06.TypeRef("System.String"), $asm06.TypeRef("System.IO.FileMode"), 
        $asm06.TypeRef("System.IO.IsolatedStorage.IsolatedStorageFile")
      ]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm06.System.Runtime.Serialization.IFormatter.Deserialize)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm06.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm06.System.Collections.IDictionaryEnumerator.get_Key)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm06.System.Collections.IDictionaryEnumerator.get_Value)) ();
  };
  var $IM04 = function () {
    return ($IM04 = JSIL.Memoize($asm06.System.Runtime.Serialization.IFormatter.Serialize)) ();
  };

  function IsolatedStorageSettingsForCSharp__ctor () {
  };

  function IsolatedStorageSettingsForCSharp_Add$00 (key, value) {
    $thisType.AppDictionary['Add'](key, value);
    this['Save']();
  };

  function IsolatedStorageSettingsForCSharp_Add$01 (item) {
    $thisType.AppDictionary['Add'](
      item['get_Key'](), 
      item['get_Value']()
    );
  };

  function IsolatedStorageSettingsForCSharp_Clear () {
    $thisType.AppDictionary['Clear']();
    this['Save']();
  };

  function IsolatedStorageSettingsForCSharp_Contains (item) {
    return $thisType.AppDictionary['ContainsKey'](item['get_Key']());
  };

  function IsolatedStorageSettingsForCSharp_ContainsKey (key) {
    return $thisType.AppDictionary['ContainsKey'](key);
  };

  function IsolatedStorageSettingsForCSharp_CopyTo (array, arrayIndex) {
    throw $S02().Construct();
  };

  function IsolatedStorageSettingsForCSharp_get_Count () {
    return $thisType.AppDictionary['get_Count']();
  };

  function IsolatedStorageSettingsForCSharp_get_Instance () {
    return $thisType.StaticIsolatedStorageSettings;
  };

  function IsolatedStorageSettingsForCSharp_get_IsReadOnly () {
    return false;
  };

  function IsolatedStorageSettingsForCSharp_get_Item$02 (key, defaultvalue) {
    return (
      $thisType.AppDictionary['ContainsKey'](key)
         ? $thisType.AppDictionary['get_Item'](key)
         : defaultvalue)
    ;
  };

  function IsolatedStorageSettingsForCSharp_get_Item$03 (key) {
    return $thisType.AppDictionary['get_Item'](key);
  };

  function IsolatedStorageSettingsForCSharp_get_Keys () {
    return $thisType.AppDictionary['get_Keys']();
  };

  function IsolatedStorageSettingsForCSharp_get_Values () {
    return $thisType.AppDictionary['get_Values']();
  };

  function IsolatedStorageSettingsForCSharp_GetEnumerator () {
    return $T00().prototype['GetEnumerator'].call($thisType.AppDictionary);
  };

  function IsolatedStorageSettingsForCSharp_LoadData () {
    var userStoreForAssembly = $T08()['GetUserStoreForAssembly']();
    if ((userStoreForAssembly['GetFileNames']("Settings.bin").length | 0) !== 0) {
      var stream = $S03().Construct("Settings.bin", $T0C().OpenOrCreate, userStoreForAssembly);
      try {
        var obj = $IM00().Call($thisType.Formatter, null, stream);
        var dictionary = $T00().$Cast(obj);

        for (var dictionaryEnumerator = $T00().prototype['GetEnumerator'].call(dictionary)['MemberwiseClone'](); $IM01().Call(dictionaryEnumerator, null); ) {
          $thisType.AppDictionary['set_Item'](
            ($IM02().Call(dictionaryEnumerator, null))['toString'](), 
            $IM03().Call(dictionaryEnumerator, null)
          );
        }
      } finally {
        stream['Close']();
      }
    }
  };

  function IsolatedStorageSettingsForCSharp_Remove$04 (key, $exception) {
    try {
      this['Save']();
      $thisType.AppDictionary['Remove'](key);
      var result = true;
    } catch ($exception) {
      result = false;
    }
    return result;
  };

  function IsolatedStorageSettingsForCSharp_Remove$05 (item) {
    return $thisType.AppDictionary['Remove'](item['get_Key']());
  };

  function IsolatedStorageSettingsForCSharp_Save () {
    var userStoreForAssembly = $T08()['GetUserStoreForAssembly']();
    var stream = $S03().Construct("Settings.bin", $T0C().Create, userStoreForAssembly);
    try {
      $IM04().Call($thisType.Formatter, null, stream, $thisType.AppDictionary);
    } finally {
      stream['Close']();
    }
  };

  function IsolatedStorageSettingsForCSharp_set_Item$06 (key, defaultvalue, value) {
    $thisType.AppDictionary['set_Item'](key, value);
    this['Save']();
  };

  function IsolatedStorageSettingsForCSharp_set_Item$07 (key, value) {
    $thisType.AppDictionary['set_Item'](key, value);
    this['Save']();
  };

  function IsolatedStorageSettingsForCSharp_System_Collections_IEnumerable_GetEnumerator () {
    return $T00().prototype['GetEnumerator'].call($thisType.AppDictionary);
  };

  function IsolatedStorageSettingsForCSharp_TryGetValue (key, /* ref */ value) {
    return $thisType.AppDictionary['TryGetValue'](key, /* ref */ value);
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.IO.IsolatedStorage.IsolatedStorageSettingsForCSharp", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void, 
      IsolatedStorageSettingsForCSharp__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Add", 
      new JSIL.MethodSignature(null, [$.String, $.Object]), 
      IsolatedStorageSettingsForCSharp_Add$00
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Add", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])), 
      IsolatedStorageSettingsForCSharp_Add$01
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Clear", 
      JSIL.MethodSignature.Void, 
      IsolatedStorageSettingsForCSharp_Clear
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Contains", 
      new JSIL.MethodSignature($.Boolean, [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]), 
      IsolatedStorageSettingsForCSharp_Contains
    );

    $.Method({Static:false, Public:true , Virtual:true }, "ContainsKey", 
      new JSIL.MethodSignature($.Boolean, [$.String]), 
      IsolatedStorageSettingsForCSharp_ContainsKey
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]), $.Int32]), 
      IsolatedStorageSettingsForCSharp_CopyTo
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32), 
      IsolatedStorageSettingsForCSharp_get_Count
    );

    $.Method({Static:true , Public:true }, "get_Instance", 
      JSIL.MethodSignature.Return($.Type), 
      IsolatedStorageSettingsForCSharp_get_Instance
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_IsReadOnly", 
      JSIL.MethodSignature.Return($.Boolean), 
      IsolatedStorageSettingsForCSharp_get_IsReadOnly
    );

    $.Method({Static:false, Public:true }, "get_Item", 
      new JSIL.MethodSignature($.Object, [$.String, $.Object]), 
      IsolatedStorageSettingsForCSharp_get_Item$02
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Item", 
      new JSIL.MethodSignature($.Object, [$.String]), 
      IsolatedStorageSettingsForCSharp_get_Item$03
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Keys", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.ICollection`1", [$.String])), 
      IsolatedStorageSettingsForCSharp_get_Keys
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Values", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.ICollection`1", [$.Object])), 
      IsolatedStorageSettingsForCSharp_get_Values
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])])), 
      IsolatedStorageSettingsForCSharp_GetEnumerator
    );

    $.Method({Static:true , Public:true }, "LoadData", 
      JSIL.MethodSignature.Void, 
      IsolatedStorageSettingsForCSharp_LoadData
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Remove", 
      new JSIL.MethodSignature($.Boolean, [$.String]), 
      IsolatedStorageSettingsForCSharp_Remove$04
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Remove", 
      new JSIL.MethodSignature($.Boolean, [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]), 
      IsolatedStorageSettingsForCSharp_Remove$05
    );

    $.Method({Static:false, Public:true }, "Save", 
      JSIL.MethodSignature.Void, 
      IsolatedStorageSettingsForCSharp_Save
    );

    $.Method({Static:false, Public:true }, "set_Item", 
      new JSIL.MethodSignature(null, [
          $.String, $.Object, 
          $.Object
        ]), 
      IsolatedStorageSettingsForCSharp_set_Item$06
    );

    $.Method({Static:false, Public:true , Virtual:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$.String, $.Object]), 
      IsolatedStorageSettingsForCSharp_set_Item$07
    );

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.IEnumerator")), 
      IsolatedStorageSettingsForCSharp_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Method({Static:false, Public:true , Virtual:true }, "TryGetValue", 
      new JSIL.MethodSignature($.Boolean, [$.String, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]), 
      IsolatedStorageSettingsForCSharp_TryGetValue
    );

    $['Constant']({Static:true , Public:false}, "Filename", "Settings.bin"); 
    $['Field']({Static:true , Public:false, ReadOnly:true }, "AppDictionary", $asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Object])); 
    $['Field']({Static:true , Public:false, ReadOnly:true }, "StaticIsolatedStorageSettings", $.Type); 
    $['Field']({Static:true , Public:false, ReadOnly:true }, "Formatter", $asm06.TypeRef("System.Runtime.Serialization.IFormatter")); 
    function IsolatedStorageSettingsForCSharp__cctor () {
      $thisType.AppDictionary = $S00().Construct();
      $thisType.StaticIsolatedStorageSettings = new $thisType();
      $thisType.Formatter = $S01().Construct();
      $thisType['LoadData']();
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      IsolatedStorageSettingsForCSharp__cctor
    );

    $.Property({Static:true , Public:true }, "Instance", $.Type);

    $.Property({Static:false, Public:true }, "Item", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "Keys", $asm06.TypeRef("System.Collections.Generic.ICollection`1", [$.String]));

    $.Property({Static:false, Public:true , Virtual:true }, "Values", $asm06.TypeRef("System.Collections.Generic.ICollection`1", [$.Object]));

    $.Property({Static:false, Public:true , Virtual:true }, "Item", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "Count", $.Int32);

    $.Property({Static:false, Public:true , Virtual:true }, "IsReadOnly", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.Generic.IDictionary`2", [$.String, $.Object]), 
      /* 1 */ $asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]), 
      /* 2 */ $asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.String, $.Object])]), 
      /* 3 */ $asm06.TypeRef("System.Collections.IEnumerable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class System.ServiceModel.ClientBase`1 */ 

(function ClientBase$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm05.System.ServiceModel.ClientBase$b1)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.NotSupportedException)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm02.System.ServiceModel.Channels.Binding)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm02.System.ServiceModel.EndpointAddress)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm01.System.Uri)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Type)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize(System.Array.Of($asm06.System.Reflection.MethodInfo))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.Reflection.MethodInfo)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.System.Reflection.MemberInfo)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm06.System.Threading.Tasks.Task$b1)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.NotSupportedException"), [$asm06.TypeRef("System.String")]))) ();
  };

  function ClientBase$b1__ctor$00 () {
    ;
    throw $S00().Construct("Please specify the Binding and Endpoint programmatically. See http://www.cshtml5.com/links/wcf-limitations-and-tutorials.aspx for details.");
  };

  function ClientBase$b1__ctor$01 (endpointConfigurationName) {
    ;
    throw $S00().Construct("Please specify the Binding and Endpoint programmatically. See http://www.cshtml5.com/links/wcf-limitations-and-tutorials.aspx for details.");
  };

  function ClientBase$b1__ctor$02 (binding, remoteAddress) {
    ;
    this._remoteAddressAsString = (remoteAddress['get_Uri']())['get_OriginalString']();
  };

  function ClientBase$b1__ctor$03 (endpointConfigurationName, remoteAddress) {
    ;
    throw $S00().Construct("Please specify the Binding and Endpoint programmatically. See http://www.cshtml5.com/links/wcf-limitations-and-tutorials.aspx for details.");
  };

  function ClientBase$b1__ctor$04 (endpointConfigurationName, remoteAddress) {
    ;
    throw $S00().Construct("Please specify the Binding and Endpoint programmatically. See http://www.cshtml5.com/links/wcf-limitations-and-tutorials.aspx for details.");
  };

  function ClientBase$b1_AppendAsyncMethodToObject (obj, methodName, interfaceType, methodReturnType) {
    obj[methodName] = function(REQUEST) { return obj['CallWebMethodAsync$b1'](methodReturnType)(methodName, interfaceType, methodReturnType, REQUEST); };
  };

  function ClientBase$b1_AppendMethodToObject (obj, methodName, interfaceType, methodReturnType) {
    obj[methodName] = function(REQUEST) { return obj['CallWebMethod'](methodName, interfaceType, methodReturnType, REQUEST); };
  };

  function ClientBase$b1_CreateConcreteClassThatImplementsInterface (interfaceType) {
    var webMethodsCaller = new ($asm00.System.ServiceModel.ClientBase$b1_WebMethodsCaller.Of($thisType.TChannel.get(this))) (this._remoteAddressAsString);
    var methods = interfaceType['GetMethods']();

    for (var i = 0; i < (methods.length | 0); i = ((i + 1) | 0)) {
      var methodInfo = methods[i];
      var name = methodInfo['get_Name']();
      if (!(!(methodInfo['get_ReturnType']())['get_IsGenericType']() || !$T07()['op_Equality']((methodInfo['get_ReturnType']())['GetGenericTypeDefinition'](), $T0C().__Type__))) {
        $thisType.Of($thisType.TChannel.get(this))['AppendAsyncMethodToObject'](webMethodsCaller, name, interfaceType, (methodInfo['get_ReturnType']())['GetGenericArguments']()[0]);
      } else {
        $thisType.Of($thisType.TChannel.get(this))['AppendMethodToObject'](webMethodsCaller, name, interfaceType, methodInfo['get_ReturnType']());
      }
    }
    return webMethodsCaller;
  };

  function ClientBase$b1_get_Channel () {
    return $thisType.Of($thisType.TChannel.get(this)).prototype['CreateConcreteClassThatImplementsInterface'].call(this, $thisType.TChannel.get(this));
  };

  function ClientBase$b1_get_INTERNAL_RemoteAddressAsString () {
    return this._remoteAddressAsString;
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.ServiceModel.ClientBase`1", 
      IsPublic: true, 
      IsReferenceType: true, 
      GenericParameters: ["TChannel"], 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void, 
      ClientBase$b1__ctor$00
    );

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.String), 
      ClientBase$b1__ctor$01
    );

    $.Method({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$asm02.TypeRef("System.ServiceModel.Channels.Binding"), $asm02.TypeRef("System.ServiceModel.EndpointAddress")]), 
      ClientBase$b1__ctor$02
    );

    $.Method({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm02.TypeRef("System.ServiceModel.EndpointAddress")]), 
      ClientBase$b1__ctor$03
    );

    $.Method({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String]), 
      ClientBase$b1__ctor$04
    );

    $.Method({Static:true , Public:false}, "AppendAsyncMethodToObject", 
      new JSIL.MethodSignature(null, [
          $.Object, $.String, 
          $asm06.TypeRef("System.Type"), $asm06.TypeRef("System.Type")
        ]), 
      ClientBase$b1_AppendAsyncMethodToObject
    );

    $.Method({Static:true , Public:false}, "AppendMethodToObject", 
      new JSIL.MethodSignature(null, [
          $.Object, $.String, 
          $asm06.TypeRef("System.Type"), $asm06.TypeRef("System.Type")
        ]), 
      ClientBase$b1_AppendMethodToObject
    );

    $.Method({Static:false, Public:false}, "CreateConcreteClassThatImplementsInterface", 
      new JSIL.MethodSignature($.Object, [$asm06.TypeRef("System.Type")]), 
      ClientBase$b1_CreateConcreteClassThatImplementsInterface
    );

    $.Method({Static:false, Public:false}, "get_Channel", 
      JSIL.MethodSignature.Return($.Object), 
      ClientBase$b1_get_Channel
    );

    $.Method({Static:false, Public:false}, "get_INTERNAL_RemoteAddressAsString", 
      JSIL.MethodSignature.Return($.String), 
      ClientBase$b1_get_INTERNAL_RemoteAddressAsString
    );

    $['Field']({Static:false, Public:false}, "_remoteAddressAsString", $.String); 
    $.Property({Static:false, Public:false}, "INTERNAL_RemoteAddressAsString", $.String);

    $.Property({Static:false, Public:false}, "Channel", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.ClientBase`1+WebMethodsCaller */ 

(function WebMethodsCaller$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.System.INTERNAL_WebRequestHelper)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm02.System.ServiceModel.FaultException)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Type)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm06.System.String, $asm06.System.String))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Reflection.MemberInfo)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm01.System.Uri)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.Action$b1.Of($asm02.System.ServiceModel.FaultException))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm01.System.Net.DownloadStringCompletedEventHandler)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize(System.Array.Of($asm06.System.String))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm04.System.Xml.Serialization.XmlSerializer)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.System.IO.MemoryStream)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm06.System.IO.Stream)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm06.System.Int64)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm06.System.IO.SeekOrigin)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm06.System.IO.StreamReader)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm06.System.IO.TextReader)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm06.System.Char)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm06.System.Activator)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm06.System.Reflection.FieldInfo)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm06.System.Text.Encoding)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm04.System.Xml.XmlReader)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm06.System.Convert)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm01.System.Net.DownloadStringCompletedEventArgs)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Uri"), [$asm06.TypeRef("System.String")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("System.String"), $asm06.TypeRef("System.String")]), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm04.TypeRef("System.Xml.Serialization.XmlSerializer"), [$asm06.TypeRef("System.Type")]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.IO.MemoryStream"), null))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm06.TypeRef("System.IO.Stream"), $asm06.TypeRef("System.Object")]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.IO.StreamReader"), [$asm06.TypeRef("System.IO.Stream")]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("System.Object"), [$asm06.TypeRef("System.Type")]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.ConstructorSignature($asm02.TypeRef("System.ServiceModel.FaultException"), [$asm06.TypeRef("System.String")]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.IO.MemoryStream"), [$jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Byte")])]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.MethodSignature($jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Byte")]), [$asm06.TypeRef("System.String")]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.MethodSignature($asm04.TypeRef("System.Xml.XmlReader"), [$asm06.TypeRef("System.IO.Stream")]))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("System.Object"), [$asm06.TypeRef("System.Object"), $asm06.TypeRef("System.Type")]))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("System.Object"), [$asm04.TypeRef("System.Xml.XmlReader")]))) ();
  };

  function WebMethodsCaller__ctor (addressOfService) {
    this._webRequestHelper = new ($T01())();
    this._addressOfService = addressOfService;
  };

  function WebMethodsCaller_$lCallWebMethod$gb__7 (faultException) {
    throw faultException;
  };

  function WebMethodsCaller_CallWebMethod (methodName, interfacetype, methodReturnType, originalRequestObject) {
    var headers = new JSIL.BoxedVariable(null);
    var body = new JSIL.BoxedVariable(null);
    var name = interfacetype['get_Name']();
    var requestBody = originalRequestObject.Body;
    $thisType.Of($thisType.TChannel.get(this)).prototype['PrepareRequest'].call(this, 
      methodName, 
      name, 
      requestBody, 
      /* ref */ headers, 
      /* ref */ body
    );
    var responseAsString = (this._webRequestHelper)['MakeRequest'](
      $S00().Construct(this._addressOfService), 
      "POST", 
      headers.get(), 
      body.get(), 
      null, 
      false
    );
    return $thisType.Of($thisType.TChannel.get(this)).prototype['ReadAndPrepareResponse'].call(this, responseAsString, methodReturnType, $T08()['New']($thisType.Of($thisType.TChannel.get(this)), $thisType.Of($thisType.TChannel.get(this))['$lCallWebMethod$gb__7'], function () { return JSIL.GetMethodInfo($thisType.Of($thisType.TChannel.get(this)), "$lCallWebMethod$gb__7", JSIL.MethodSignature.Action($asm02.TypeRef("System.ServiceModel.FaultException")), true); }));
  };

  function WebMethodsCaller_CallWebMethodAsync$b1 (T, methodName, interfacetype, methodReturnType, originalRequestObject) {
    var $s00 = new JSIL.ConstructorSignature($asm06.TypeRef("System.Threading.Tasks.TaskCompletionSource`1", [T]), null);
    var headers = new JSIL.BoxedVariable(null);
    var body = new JSIL.BoxedVariable(null);
    var $closure0 = new ($asm00.System.ServiceModel.ClientBase$b1_WebMethodsCaller_$l$gc__DisplayClass3$b1.Of($thisType.TChannel.get(this), T)) ();
    $closure0.methodReturnType = methodReturnType;
    $closure0.$l$g4__this = this;
    var name = interfacetype['get_Name']();
    var requestBody = originalRequestObject.Body;
    var text = methodName;
    if (System.String.EndsWith(text, "Async")) {
      text = (text.substr(0, (((text.length | 0) - 5) | 0)));
    }
    $thisType.Of($thisType.TChannel.get(this)).prototype['PrepareRequest'].call(this, 
      text, 
      name, 
      requestBody, 
      /* ref */ headers, 
      /* ref */ body
    );
    $closure0.taskCompletionSource = $s00.Construct();
    var text2 = (this._webRequestHelper)['MakeRequest'](
      $S00().Construct(this._addressOfService), 
      "POST", 
      headers.get(), 
      body.get(), 
      $T0A()['New']($closure0, $asm00.System.ServiceModel.ClientBase$b1_WebMethodsCaller_$l$gc__DisplayClass3$b1.Of($thisType.TChannel.get(this), T).prototype['$lCallWebMethodAsync$gb__2'], function () { return JSIL.GetMethodInfo($asm00.System.ServiceModel.ClientBase$b1_WebMethodsCaller_$l$gc__DisplayClass3$b1.Of($thisType.TChannel.get(this), T), "$lCallWebMethodAsync$gb__2", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm01.System.Net.DownloadStringCompletedEventArgs]), false); }), 
      true
    );
    return ($closure0.taskCompletionSource)['get_Task']();
  };

  function WebMethodsCaller_PrepareRequest (methodName, interfaceTypeName, requestBody, /* ref */ headers, /* ref */ request) {
    headers.set($S01().Construct());
    (headers.get())['Add']("Content-Type", "text/xml; charset=utf-8");
    (headers.get())['Add']("SOAPAction", JSIL.ConcatString.apply(null, JSIL.Array.New($T00(), ["\"http://tempuri.org/", interfaceTypeName, "/", methodName, "\""])));
    request.set((("<s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\"><s:Body><" + methodName + " xmlns=\"http://tempuri.org/\">")));
    var type = JSIL['GetType'](requestBody);
    var xmlSerializer = $S02().Construct(type);
    var memoryStream = $S03().Construct();
    $S04().CallVirtual("Serialize", null, xmlSerializer, memoryStream, requestBody);
    memoryStream['Seek']($T0F()['Create'](0, 0, 0), $T10().Begin);
    var streamReader = $S05().Construct(memoryStream);
    var text = streamReader['ReadToEnd']();
    var num = (text.indexOf("<?xml version=\"1.0\" encoding=\"utf-8\"?>"));
    if (num !== -1) {
      text = (System.String.Remove(text, num, "<?xml version=\"1.0\" encoding=\"utf-8\"?>".length));
    }
    num = (text.indexOf(type['get_Name']()));
    text = (System.String.Remove(text, ((num - 1) | 0), (((type['get_Name']().length | 0) + 2) | 0)));
    num = (text.indexOf(type['get_Name']()));
    text = (System.String.Remove(text, ((num - 2) | 0), (((type['get_Name']().length | 0) + 3) | 0)));
    request.set((JSIL.ConcatString(request.get(), text)));
    request.set(((request.get() + "</" + methodName + "></s:Body></s:Envelope>")));
  };

  function WebMethodsCaller_ReadAndPrepareResponse (responseAsString, requestResponseType, raiseFaultException) {
    var num = (responseAsString.indexOf(":Body"));
    var num2 = (responseAsString.indexOf(">", num));
    responseAsString = (System.String.Remove(responseAsString, 0, ((num2 + 1) | 0)));
    num = (responseAsString.lastIndexOf(":Body"));
    num2 = (responseAsString.substr(0, num).lastIndexOf("<"));
    responseAsString = (responseAsString.substr(0, num2));

    for (var num3 = (responseAsString.indexOf("xmlns")); num3 !== -1; ) {
      var num4 = (responseAsString.indexOf("\"", num3));
      num4 = (responseAsString.indexOf("\"", ((num4 + 1) | 0)));
      responseAsString = (System.String.Remove(responseAsString, num3, ((((num4 - num3) | 0) + 1) | 0)));
      num3 = (responseAsString.indexOf("xmlns"));
    }
    var obj = $S06().CallStatic($T14(), "CreateInstance", null, requestResponseType);
    var field = requestResponseType['GetField']("Body");
    if ($T15()['op_Inequality'](field, null)) {
      var fieldType = field['get_FieldType']();
      var name = fieldType['get_Name']();
      var str = (System.String.Replace(name, "Body", ""));
      responseAsString = (System.String.Replace(responseAsString, JSIL.ConcatString("<", str), JSIL.ConcatString("<", name)));
      responseAsString = (System.String.Replace(responseAsString, JSIL.ConcatString("</", str), JSIL.ConcatString("</", name)));
      var num5 = (responseAsString.indexOf(":Fault>"));
      if (num5 === -1) {
        num5 = (responseAsString.indexOf("<Fault>"));
      }
      if (num5 !== -1) {
        num5 = (responseAsString.indexOf("<faultstring", num5));
        if (num5 !== -1) {
          num5 = (responseAsString.indexOf(">", num5));
          responseAsString = (System.String.Remove(responseAsString, 0, ((num5 + 1) | 0)));
          num5 = (responseAsString.indexOf("</faultstring"));
          responseAsString = (responseAsString.substr(0, num5));
          var obj2 = $S07().Construct(responseAsString);
          raiseFaultException(obj2);
          var result = null;
          return result;
        }
      }
      var xmlSerializer = $S02().Construct(fieldType);
      var input = $S08().Construct($S09().CallVirtual("GetBytes", null, $T16()['get_UTF8'](), responseAsString));
      var xmlReader = $S0A().CallStatic($T17(), "Create", null, input);
      var value2 = $S0B().CallStatic($T18(), "ChangeType", null, $S0C().CallVirtual("Deserialize", null, xmlSerializer, xmlReader), fieldType);
      field['SetValue'](obj, value2);
    }
    result = obj;
    return result;
  };

  function WebMethodsCaller_ReadAndPrepareResponseGeneric$b1 (T, taskCompletionSource, e, requestResponseType) {
    var $closure0 = new ($asm00.System.ServiceModel.ClientBase$b1_WebMethodsCaller_$l$gc__DisplayClassa$b1.Of($thisType.TChannel.get(this), T)) ();
    $closure0.taskCompletionSource = taskCompletionSource;
    var t = JSIL.CloneParameter(T, T.$Cast($thisType.Of($thisType.TChannel.get(this)).prototype['ReadAndPrepareResponse'].call(this, e.DownloadStringCompletedEventArgs$Result$value, requestResponseType, $T08()['New']($closure0, $asm00.System.ServiceModel.ClientBase$b1_WebMethodsCaller_$l$gc__DisplayClassa$b1.Of($thisType.TChannel.get(this), T).prototype['$lReadAndPrepareResponseGeneric$gb__9'], function () { return JSIL.GetMethodInfo($asm00.System.ServiceModel.ClientBase$b1_WebMethodsCaller_$l$gc__DisplayClassa$b1.Of($thisType.TChannel.get(this), T), "$lReadAndPrepareResponseGeneric$gb__9", JSIL.MethodSignature.Action($asm02.TypeRef("System.ServiceModel.FaultException")), false); }))));
    if (t !== null) {
      $asm06.System.Threading.Tasks.TaskCompletionSource$b1.Of(T).prototype['SetResult'].call($closure0.taskCompletionSource, JSIL.CloneParameter(T, t));
    }
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.ServiceModel.ClientBase`1+WebMethodsCaller", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TChannel"], 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String), 
      WebMethodsCaller__ctor
    );

    $.Method({Static:true , Public:false}, "$lCallWebMethod$gb__7", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.ServiceModel.FaultException")), 
      WebMethodsCaller_$lCallWebMethod$gb__7
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "CallWebMethod", 
      new JSIL.MethodSignature($.Object, [
          $.String, $asm06.TypeRef("System.Type"), 
          $asm06.TypeRef("System.Type"), $.Object
        ]), 
      WebMethodsCaller_CallWebMethod
    );

    $.Method({Static:false, Public:true }, "CallWebMethodAsync", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Threading.Tasks.Task`1", ["!!0"]), [
          $.String, $asm06.TypeRef("System.Type"), 
          $asm06.TypeRef("System.Type"), $.Object
        ], ["T"]), 
      WebMethodsCaller_CallWebMethodAsync$b1
    );

    $.Method({Static:false, Public:false}, "PrepareRequest", 
      new JSIL.MethodSignature(null, [
          $.String, $.String, 
          $.Object, $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.String])]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.String])
        ]), 
      WebMethodsCaller_PrepareRequest
    );

    $.Method({Static:false, Public:false}, "ReadAndPrepareResponse", 
      new JSIL.MethodSignature($.Object, [
          $.String, $asm06.TypeRef("System.Type"), 
          $asm06.TypeRef("System.Action`1", [$asm02.TypeRef("System.ServiceModel.FaultException")])
        ]), 
      WebMethodsCaller_ReadAndPrepareResponse
    );

    $.Method({Static:false, Public:false}, "ReadAndPrepareResponseGeneric", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.Threading.Tasks.TaskCompletionSource`1", ["!!0"]), $asm01.TypeRef("System.Net.DownloadStringCompletedEventArgs"), 
          $asm06.TypeRef("System.Type")
        ], ["T"]), 
      WebMethodsCaller_ReadAndPrepareResponseGeneric$b1
    );

    $['Field']({Static:false, Public:false}, "_xmlHttpRequest", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute")); 
    $['Field']({Static:false, Public:false}, "_addressOfService", $.String); 
    $['Field']({Static:false, Public:false}, "_webRequestHelper", $asm01.TypeRef("System.INTERNAL_WebRequestHelper")); 
    $['Field']({Static:true , Public:false}, "CS$$l$g9__CachedAnonymousMethodDelegate8", $asm06.TypeRef("System.Action`1", [$asm02.TypeRef("System.ServiceModel.FaultException")]))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.ClientBase`1+WebMethodsCaller+<>c__DisplayClass3`1 */ 

(function $l$gc__DisplayClass3$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.System.Net.DownloadStringCompletedEventArgs)) ();
  };

  function $l$gc__DisplayClass3$b1__ctor () {
  };

  function $l$gc__DisplayClass3$b1_$lCallWebMethodAsync$gb__2 (sender, args2) {
    $asm00.System.ServiceModel.ClientBase$b1_WebMethodsCaller.Of($thisType.TChannel.get(this)).prototype['ReadAndPrepareResponseGeneric$b1']($thisType.T.get(this)).call(this.$l$g4__this, this.taskCompletionSource, args2, this.methodReturnType);
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.ServiceModel.ClientBase`1+WebMethodsCaller+<>c__DisplayClass3`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TChannel", "T"], 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClass3$b1__ctor
    );

    $.Method({Static:false, Public:true }, "$lCallWebMethodAsync$gb__2", 
      new JSIL.MethodSignature(null, [$.Object, $asm01.TypeRef("System.Net.DownloadStringCompletedEventArgs")]), 
      $l$gc__DisplayClass3$b1_$lCallWebMethodAsync$gb__2
    );

    $['Field']({Static:false, Public:true }, "taskCompletionSource", $asm06.TypeRef("System.Threading.Tasks.TaskCompletionSource`1", [$.GenericParameter("T")])); 
    $['Field']({Static:false, Public:true }, "$l$g4__this", $asm00.TypeRef("System.ServiceModel.ClientBase`1+WebMethodsCaller", [$.GenericParameter("TChannel")])); 
    $['Field']({Static:false, Public:true }, "methodReturnType", $asm06.TypeRef("System.Type")); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ServiceModel.ClientBase`1+WebMethodsCaller+<>c__DisplayClassa`1 */ 

(function $l$gc__DisplayClassa$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm02.System.ServiceModel.FaultException)) ();
  };

  function $l$gc__DisplayClassa$b1__ctor () {
  };

  function $l$gc__DisplayClassa$b1_$lReadAndPrepareResponseGeneric$gb__9 (faultException) {
    var $s00 = new JSIL.MethodSignature($asm06.System.Boolean, [$asm06.System.Exception]);
    $s00.Call($asm06.System.Threading.Tasks.TaskCompletionSource$b1.Of($thisType.T.get(this)).prototype, "TrySetException", null, this.taskCompletionSource, faultException);
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.ServiceModel.ClientBase`1+WebMethodsCaller+<>c__DisplayClassa`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TChannel", "T"], 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClassa$b1__ctor
    );

    $.Method({Static:false, Public:true }, "$lReadAndPrepareResponseGeneric$gb__9", 
      JSIL.MethodSignature.Action($asm02.TypeRef("System.ServiceModel.FaultException")), 
      $l$gc__DisplayClassa$b1_$lReadAndPrepareResponseGeneric$gb__9
    );

    $['Field']({Static:false, Public:true }, "taskCompletionSource", $asm06.TypeRef("System.Threading.Tasks.TaskCompletionSource`1", [$.GenericParameter("T")])); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.ServiceModel.INTERNAL_RealClientBaseImplementation`1 */ 

(function INTERNAL_RealClientBaseImplementation$b1$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm02.System.ServiceModel.Channels.Binding)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm02.System.ServiceModel.EndpointAddress)) ();
  };

  function INTERNAL_RealClientBaseImplementation$b1__ctor$00 () {
    $asm05.System.ServiceModel.ClientBase$b1.Of($thisType.TChannel.get(this)).prototype['_ctor'].call(this);
  };

  function INTERNAL_RealClientBaseImplementation$b1__ctor$01 (endpointConfigurationName) {
    $asm05.System.ServiceModel.ClientBase$b1.Of($thisType.TChannel.get(this)).prototype['_ctor'].call(this, endpointConfigurationName);
  };

  function INTERNAL_RealClientBaseImplementation$b1__ctor$02 (binding, remoteAddress) {
    var $s00 = new JSIL.MethodSignature(null, [$asm02.System.ServiceModel.Channels.Binding, $asm02.System.ServiceModel.EndpointAddress]);
    $s00.Call($asm05.System.ServiceModel.ClientBase$b1.Of($thisType.TChannel.get(this)).prototype, "_ctor", null, this, binding, remoteAddress);
  };

  function INTERNAL_RealClientBaseImplementation$b1__ctor$03 (endpointConfigurationName, remoteAddress) {
    var $s00 = new JSIL.MethodSignature(null, [$asm06.System.String, $asm02.System.ServiceModel.EndpointAddress]);
    $s00.Call($asm05.System.ServiceModel.ClientBase$b1.Of($thisType.TChannel.get(this)).prototype, "_ctor", null, this, endpointConfigurationName, remoteAddress);
  };

  function INTERNAL_RealClientBaseImplementation$b1__ctor$04 (endpointConfigurationName, remoteAddress) {
    var $s00 = new JSIL.MethodSignature(null, [$asm06.System.String, $asm06.System.String]);
    $s00.Call($asm05.System.ServiceModel.ClientBase$b1.Of($thisType.TChannel.get(this)).prototype, "_ctor", null, this, endpointConfigurationName, remoteAddress);
  };

  function INTERNAL_RealClientBaseImplementation$b1_get_Channel () {
    return $asm05.System.ServiceModel.ClientBase$b1.Of($thisType.TChannel.get(this)).prototype['get_Channel'].call(this);
  };

  JSIL.MakeType({
      BaseType: $asm05.TypeRef("System.ServiceModel.ClientBase`1", [new JSIL.GenericParameter("TChannel", "System.ServiceModel.INTERNAL_RealClientBaseImplementation`1")]), 
      Name: "System.ServiceModel.INTERNAL_RealClientBaseImplementation`1", 
      IsPublic: false, 
      IsReferenceType: true, 
      GenericParameters: ["TChannel"], 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      INTERNAL_RealClientBaseImplementation$b1__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String), 
      INTERNAL_RealClientBaseImplementation$b1__ctor$01
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm02.TypeRef("System.ServiceModel.Channels.Binding"), $asm02.TypeRef("System.ServiceModel.EndpointAddress")]), 
      INTERNAL_RealClientBaseImplementation$b1__ctor$02
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm02.TypeRef("System.ServiceModel.EndpointAddress")]), 
      INTERNAL_RealClientBaseImplementation$b1__ctor$03
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String]), 
      INTERNAL_RealClientBaseImplementation$b1__ctor$04
    );

    $.Method({Static:false, Public:true }, "get_Channel", 
      new JSIL.MethodSignature($.GenericParameter("TChannel"), null), 
      INTERNAL_RealClientBaseImplementation$b1_get_Channel
    );

    $.Property({Static:false, Public:true }, "Channel", $.GenericParameter("TChannel"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.ServiceModel.INTERNAL_WorkAroundIssueWithJSILAndDynamicUnderVs2015 */ 

(function INTERNAL_WorkAroundIssueWithJSILAndDynamicUnderVs2015$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Type)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Object)) ();
  };

  function INTERNAL_WorkAroundIssueWithJSILAndDynamicUnderVs2015_CallWebMethod$b2 (RETURN_TYPE, INTERFACE_TYPE, clientBase, methodName, request) {
    var webMethodsCaller = new ($asm00.System.ServiceModel.ClientBase$b1_WebMethodsCaller.Of(INTERFACE_TYPE)) (clientBase['get_INTERNAL_RemoteAddressAsString']());
    return RETURN_TYPE.$Cast($asm00.System.ServiceModel.ClientBase$b1_WebMethodsCaller.Of(INTERFACE_TYPE).prototype['CallWebMethod'].call(webMethodsCaller, methodName, INTERFACE_TYPE, RETURN_TYPE, request));
  };

  function INTERNAL_WorkAroundIssueWithJSILAndDynamicUnderVs2015_CallWebMethodAsync$b2 (RETURN_TYPE, INTERFACE_TYPE, clientBase, methodName, request) {
    var webMethodsCaller = new ($asm00.System.ServiceModel.ClientBase$b1_WebMethodsCaller.Of(INTERFACE_TYPE)) (clientBase['get_INTERNAL_RemoteAddressAsString']());
    return $asm00.System.ServiceModel.ClientBase$b1_WebMethodsCaller.Of(INTERFACE_TYPE).prototype['CallWebMethodAsync$b1'](RETURN_TYPE).call(webMethodsCaller, methodName, INTERFACE_TYPE, RETURN_TYPE, request);
  };

  JSIL.MakeStaticClass("System.ServiceModel.INTERNAL_WorkAroundIssueWithJSILAndDynamicUnderVs2015", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "CallWebMethod", 
      new JSIL.MethodSignature("!!0", [
          $asm05.TypeRef("System.ServiceModel.ClientBase`1", ["!!1"]), $.String, 
          $.Object
        ], ["RETURN_TYPE", "INTERFACE_TYPE"]), 
      INTERNAL_WorkAroundIssueWithJSILAndDynamicUnderVs2015_CallWebMethod$b2
    );

    $.Method({Static:true , Public:true }, "CallWebMethodAsync", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Threading.Tasks.Task`1", ["!!0"]), [
          $asm05.TypeRef("System.ServiceModel.ClientBase`1", ["!!1"]), $.String, 
          $.Object
        ], ["RETURN_TYPE", "INTERFACE_TYPE"]), 
      INTERNAL_WorkAroundIssueWithJSILAndDynamicUnderVs2015_CallWebMethodAsync$b2
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.DependencyObject */ 

(function DependencyObject$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Core.CoreDispatcher)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_PropertyStorage)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_PropertyStore)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm00.Windows.UI.Xaml.DependencyProperty, $asm00.Windows.UI.Xaml.Data.Expression))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.Expression)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.BindingExpression)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.Binding)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2_ValueCollection_Enumerator.Of($asm00.Windows.UI.Xaml.DependencyProperty, $asm00.Windows.UI.Xaml.Data.Expression))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2_ValueCollection.Of($asm00.Windows.UI.Xaml.DependencyProperty, $asm00.Windows.UI.Xaml.Data.Expression))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2_KeyCollection_Enumerator.Of($asm00.Windows.UI.Xaml.DependencyProperty, $asm00.DotNetForHtml5.Core.INTERNAL_PropertyStorage))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2_KeyCollection.Of($asm00.Windows.UI.Xaml.DependencyProperty, $asm00.DotNetForHtml5.Core.INTERNAL_PropertyStorage))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm00.Windows.UI.Xaml.DependencyProperty, $asm00.DotNetForHtml5.Core.INTERNAL_PropertyStorage))) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm06.System.ArgumentNullException)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm06.System.InvalidOperationException)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.BindingMode)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm06.System.Type)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.ArgumentNullException"), [$asm06.TypeRef("System.String")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.InvalidOperationException"), [$asm06.TypeRef("System.String")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"), $asm00.TypeRef("Windows.UI.Xaml.Data.Expression")]), null))) ();
  };

  function DependencyObject__ctor () {
  };

  function DependencyObject_get_Dispatcher () {
    return $T00()['INTERNAL_GetCurrentDispatcher']();
  };

  function DependencyObject_GetValue$00 (dependencyProperty) {
    var storage = $T03()['GetStorage'](this, dependencyProperty, false);
    return $T03()['GetValue'](storage);
  };

  function DependencyObject_INTERNAL_GetBinding (dependencyProperty) {
    if (!((this._expressions === null) || !(this._expressions)['ContainsKey'](dependencyProperty))) {
      var expression = (this._expressions)['get_Item'](dependencyProperty);
      if ($T06().$Is(expression)) {
        var result = ($T06().$Cast(expression).ParentBinding)['Clone']();
        return result;
      }
    }
    result = null;
    return result;
  };

  function DependencyObject_INTERNAL_OnAttachedToVisualTree () {
  };

  function DependencyObject_INTERNAL_OnDetachedFromVisualTree () {
  };

  function DependencyObject_INTERNAL_UpdateBindingsSource () {
    if (this._expressions !== null) {
      var enumerator = ((this._expressions)['get_Values']())['GetEnumerator']();

      while ($T08().prototype['MoveNext'].call(enumerator)) {
        var current = $T08().prototype['get_Current'].call(enumerator);
        var bindingExpression = $T06().$As(current);
        if (bindingExpression !== null) {
          bindingExpression['OnSourceAvailable']();
        }
      }
    }
  };

  function DependencyObject_ResetInheritedProperties () {
    if (this.INTERNAL_AllInheritedProperties !== null) {
      var enumerator = ((this.INTERNAL_AllInheritedProperties)['get_Keys']())['GetEnumerator']();

      while ($T0A().prototype['MoveNext'].call(enumerator)) {
        var current = $T0A().prototype['get_Current'].call(enumerator);
        if ((this.INTERNAL_PropertyStorageDictionary)['ContainsKey'](current)) {
          $T03()['ResetInheritedValue']((this.INTERNAL_PropertyStorageDictionary)['get_Item'](current));
        }
      }
      (this.INTERNAL_AllInheritedProperties)['Clear']();
    }
  };

  function DependencyObject_SetBinding (dependencyProperty, binding) {
    var bindingExpression = new ($T06())(binding, this, dependencyProperty);
    this['SetValueInternal'](dependencyProperty, bindingExpression);
    return bindingExpression;
  };

  function DependencyObject_SetInheritedValue (dependencyProperty, value, recursively) {
    var inheritedPropertyStorage = $T03()['GetInheritedPropertyStorage'](this, dependencyProperty, true);
    $T03()['SetInheritedValue'](inheritedPropertyStorage, value, recursively);
  };

  function DependencyObject_SetLocalValue (dependencyProperty, value) {
    var storage = $T03()['GetStorage'](this, dependencyProperty, true);
    $T03()['SetLocalValue'](storage, value);
  };

  function DependencyObject_SetValue (dependencyProperty, value) {
    if (dependencyProperty === null) {
      throw $S00().Construct("No property specified");
    }
    this['SetValueInternal'](dependencyProperty, value);
  };

  function DependencyObject_SetValueInternal (dependencyProperty, value) {
    var obj = value;
    var expression = null;
    var expression2 = null;
    var bindingExpression = null;
    if ($T05().$Is(value)) {
      expression = $T05().$Cast(value);
    }
    if (!((this._expressions === null) || !(this._expressions)['ContainsKey'](dependencyProperty))) {
      expression2 = (this._expressions)['get_Item'](dependencyProperty);
    }
    if (expression !== null) {
      if (expression !== expression2) {
        if (expression.IsAttached) {
          throw $S01().Construct("Cannot attach an instance of Windows.UI.Xaml.Data.Expression multiple times");
        }
        if (expression2 !== null) {
          (this._expressions)['Remove'](dependencyProperty);
          expression2['OnDetached'](this);
        }
        if (this._expressions === null) {
          this._expressions = $S02().Construct();
        }
        (this._expressions)['Add'](dependencyProperty, expression);
        expression['OnAttached'](this);
      }
      obj = expression['GetValue'](dependencyProperty);
    } else if (expression2 !== null) {
      if (!expression2.IsUpdating) {
        bindingExpression = $T06().$As(expression2);
        (this._expressions)['Remove'](dependencyProperty);
        expression2['OnDetached'](this);
      } else if (!(($T06().$As(expression2) === null) || (($T06().$Cast(expression2).ParentBinding)['get_Mode']() !== $T11().OneTime))) {
        (this._expressions)['Remove'](dependencyProperty);
        expression2['OnDetached'](this);
      }
    }
    if (!(!$T12()['op_Equality'](dependencyProperty.DependencyProperty$PropertyType$value, $T13().__Type__) || (obj === null))) {
      obj = obj['toString']();
    }
    this['SetLocalValue'](dependencyProperty, obj);
    if (!((bindingExpression === null) || ((bindingExpression.ParentBinding)['get_Mode']() !== $T11().TwoWay))) {
      bindingExpression['TryUpdateSourceObject'](obj);
    }
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.DependencyObject", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      DependencyObject__ctor
    );

    $.Method({Static:false, Public:true }, "get_Dispatcher", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Core.CoreDispatcher")), 
      DependencyObject_get_Dispatcher
    );

    $.Method({Static:false, Public:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")]), 
      DependencyObject_GetValue$00
    );

    $.Method({Static:false, Public:false}, "INTERNAL_GetBinding", 
      new JSIL.MethodSignature($asm00.TypeRef("Windows.UI.Xaml.Data.Binding"), [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")]), 
      DependencyObject_INTERNAL_GetBinding
    );

    $.Method({Static:false, Public:false, Virtual:true }, "INTERNAL_OnAttachedToVisualTree", 
      JSIL.MethodSignature.Void, 
      DependencyObject_INTERNAL_OnAttachedToVisualTree
    );

    $.Method({Static:false, Public:false, Virtual:true }, "INTERNAL_OnDetachedFromVisualTree", 
      JSIL.MethodSignature.Void, 
      DependencyObject_INTERNAL_OnDetachedFromVisualTree
    );

    $.Method({Static:false, Public:false}, "INTERNAL_UpdateBindingsSource", 
      JSIL.MethodSignature.Void, 
      DependencyObject_INTERNAL_UpdateBindingsSource
    );

    $.Method({Static:false, Public:false}, "ResetInheritedProperties", 
      JSIL.MethodSignature.Void, 
      DependencyObject_ResetInheritedProperties
    );

    $.Method({Static:false, Public:true }, "SetBinding", 
      new JSIL.MethodSignature($asm00.TypeRef("Windows.UI.Xaml.Data.BindingExpression"), [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"), $asm00.TypeRef("Windows.UI.Xaml.Data.Binding")]), 
      DependencyObject_SetBinding
    );

    $.Method({Static:false, Public:true }, "SetInheritedValue", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"), $.Object, 
          $.Boolean
        ]), 
      DependencyObject_SetInheritedValue
    );

    $.Method({Static:false, Public:true }, "SetLocalValue", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"), $.Object]), 
      DependencyObject_SetLocalValue
    );

    $.Method({Static:false, Public:true }, "SetValue", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"), $.Object]), 
      DependencyObject_SetValue
    );

    $.Method({Static:false, Public:false}, "SetValueInternal", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"), $.Object]), 
      DependencyObject_SetValueInternal
    );

    $['Field']({Static:false, Public:false}, "_expressions", $asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"), $asm00.TypeRef("Windows.UI.Xaml.Data.Expression")])); 
    $['Field']({Static:false, Public:false}, "INTERNAL_PropertyStorageDictionary", $asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"), $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_PropertyStorage")])); 
    $['Field']({Static:false, Public:false}, "INTERNAL_AllInheritedProperties", $asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"), $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_PropertyStorage")])); 
    $['Field']({Static:false, Public:false}, "INTERNAL_PropertiesForWhichToCallPropertyChangedWhenLoadedIntoVisualTree", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")])); 
    $.Property({Static:false, Public:true }, "Dispatcher", $asm00.TypeRef("Windows.UI.Core.CoreDispatcher"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.UIElement */ 

(function UIElement$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.System.Windows.Media.Effects.Effect)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.Transform)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.Visibility)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventHandler)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_EventManager$b2.Of($asm00.Windows.UI.Xaml.RoutedEventHandler, $asm00.Windows.UI.Xaml.RoutedEventArgs))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.Func$b1.Of($asm06.System.Object))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.System.Action$b1.Of($asm06.System.Object))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Windows.UI.Xaml.Input.KeyEventHandler)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_EventManager$b2.Of($asm00.Windows.UI.Xaml.Input.KeyEventHandler, $asm00.Windows.UI.Xaml.Input.KeyRoutedEventArgs))) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.Windows.UI.Xaml.Input.PointerEventHandler)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize(System.Array.Of($asm06.System.String))) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_EventManager$b2.Of($asm00.Windows.UI.Xaml.Input.PointerEventHandler, $asm00.Windows.UI.Xaml.Input.PointerRoutedEventArgs))) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm00.Windows.UI.Xaml.Input.TappedEventHandler)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_EventManager$b2.Of($asm00.Windows.UI.Xaml.Input.TappedEventHandler, $asm00.Windows.UI.Xaml.Input.TappedRoutedEventArgs))) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm00.Windows.UI.Xaml.Input.Pointer)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm06.System.Random)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualChildInformation)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm00.Windows.UI.Xaml.UIElement, $asm00.DotNetForHtml5.Core.INTERNAL_VisualChildInformation))) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventArgs)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm08.System.Linq.Enumerable)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm00.Windows.UI.Xaml.Input.KeyRoutedEventArgs)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm00.Windows.System.VirtualKey)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm00.Windows.UI.Xaml.UIElement))) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm00.Windows.UI.Xaml.Input.PointerRoutedEventArgs)) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm00.Windows.UI.Xaml.Input.TappedRoutedEventArgs)) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T25 = function () {
    return ($T25 = JSIL.Memoize($asm06.System.Math)) ();
  };
  var $T26 = function () {
    return ($T26 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T27 = function () {
    return ($T27 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.TranslateTransform)) ();
  };
  var $T28 = function () {
    return ($T28 = JSIL.Memoize(System.Array.Of($asm06.System.Object))) ();
  };
  var $T29 = function () {
    return ($T29 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.RotateTransform)) ();
  };
  var $T2A = function () {
    return ($T2A = JSIL.Memoize($asm00.CSharpXamlForHtml5_Environment)) ();
  };
  var $T2B = function () {
    return ($T2B = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T2C = function () {
    return ($T2C = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_WorkaroundIE11IssuesWithScrollViewerInsideGrid)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_EventManager`2", [$asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler"), $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")]), [
        $asm06.TypeRef("System.Func`1", [$asm06.TypeRef("System.Object")]), $asm06.TypeRef("System.String"), 
        $asm06.TypeRef("System.Action`1", [$asm06.TypeRef("System.Object")])
      ]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_EventManager`2", [$asm00.TypeRef("Windows.UI.Xaml.Input.KeyEventHandler"), $asm00.TypeRef("Windows.UI.Xaml.Input.KeyRoutedEventArgs")]), [
        $asm06.TypeRef("System.Func`1", [$asm06.TypeRef("System.Object")]), $asm06.TypeRef("System.String"), 
        $asm06.TypeRef("System.Action`1", [$asm06.TypeRef("System.Object")])
      ]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_EventManager`2", [$asm00.TypeRef("Windows.UI.Xaml.Input.PointerEventHandler"), $asm00.TypeRef("Windows.UI.Xaml.Input.PointerRoutedEventArgs")]), [
        $asm06.TypeRef("System.Func`1", [$asm06.TypeRef("System.Object")]), $jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.String")]), 
        $asm06.TypeRef("System.Action`1", [$asm06.TypeRef("System.Object")])
      ]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_EventManager`2", [$asm00.TypeRef("Windows.UI.Xaml.Input.TappedEventHandler"), $asm00.TypeRef("Windows.UI.Xaml.Input.TappedRoutedEventArgs")]), [
        $asm06.TypeRef("System.Func`1", [$asm06.TypeRef("System.Object")]), $asm06.TypeRef("System.String"), 
        $asm06.TypeRef("System.Action`1", [$asm06.TypeRef("System.Object")])
      ]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Random"), null))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.KeyRoutedEventArgs")))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.KeyRoutedEventArgs")))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.PointerRoutedEventArgs")))) ();
  };
  var $S0B = function () {
    return ($S0B = JSIL.Memoize(JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.PointerRoutedEventArgs")))) ();
  };
  var $S0C = function () {
    return ($S0C = JSIL.Memoize(JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.PointerRoutedEventArgs")))) ();
  };
  var $S0D = function () {
    return ($S0D = JSIL.Memoize(JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.PointerRoutedEventArgs")))) ();
  };
  var $S0E = function () {
    return ($S0E = JSIL.Memoize(JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.PointerRoutedEventArgs")))) ();
  };
  var $S0F = function () {
    return ($S0F = JSIL.Memoize(JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.TappedRoutedEventArgs")))) ();
  };

  function UIElement__ctor () {
    this._childrenRadioButtonDefaultName = null;
    this._previousValueOfDisplayCssProperty = "block";
    this._pointerMovedEventManager = null;
    this._pointerPressedEventManager = null;
    this._pointerReleasedEventManager = null;
    this._pointerEnteredEventManager = null;
    this._pointerExitedEventManager = null;
    this._tappedEventManager = null;
    this._keyDownEventManager = null;
    this._keyUpEventManager = null;
    this._gotFocusEventManager = null;
    this._lostFocusEventManager = null;
    $T07().prototype['_ctor'].call(this);
  };

  function UIElement_$ladd_GotFocus$gb__6b () {
    return JSIL.Coalesce(this.UIElement$INTERNAL_OptionalSpecifyDomElementConcernedByFocus$value, this.UIElement$INTERNAL_OuterDomElement$value);
  };

  function UIElement_$ladd_KeyDown$gb__59 () {
    return JSIL.Coalesce(this.UIElement$INTERNAL_OptionalSpecifyDomElementConcernedByFocus$value, this.UIElement$INTERNAL_OuterDomElement$value);
  };

  function UIElement_$ladd_KeyUp$gb__62 () {
    return JSIL.Coalesce(this.UIElement$INTERNAL_OptionalSpecifyDomElementConcernedByFocus$value, this.UIElement$INTERNAL_OuterDomElement$value);
  };

  function UIElement_$ladd_LostFocus$gb__6e () {
    return JSIL.Coalesce(this.UIElement$INTERNAL_OptionalSpecifyDomElementConcernedByFocus$value, this.UIElement$INTERNAL_OuterDomElement$value);
  };

  function UIElement_$ladd_PointerEntered$gb__38 () {
    return this.UIElement$INTERNAL_OuterDomElement$value;
  };

  function UIElement_$ladd_PointerExited$gb__43 () {
    return this.UIElement$INTERNAL_OuterDomElement$value;
  };

  function UIElement_$ladd_PointerMoved$gb__17 () {
    return this.UIElement$INTERNAL_OuterDomElement$value;
  };

  function UIElement_$ladd_PointerPressed$gb__22 () {
    return this.UIElement$INTERNAL_OuterDomElement$value;
  };

  function UIElement_$ladd_PointerReleased$gb__2d () {
    return this.UIElement$INTERNAL_OuterDomElement$value;
  };

  function UIElement_$ladd_Tapped$gb__4e () {
    return this.UIElement$INTERNAL_OuterDomElement$value;
  };

  function UIElement_add_GotFocus (value) {
    if (this._gotFocusEventManager === null) {
      this._gotFocusEventManager = $S01().Construct($T0A()['New'](this, $thisType.prototype['$ladd_GotFocus$gb__6b'], function () { return JSIL.GetMethodInfo($thisType, "$ladd_GotFocus$gb__6b", JSIL.MethodSignature.Return($.Object), false); }), "focus", $T0B()['New'](this, $thisType.prototype['OnGotFocus'], function () { return JSIL.GetMethodInfo($thisType, "OnGotFocus", JSIL.MethodSignature.Action($.Object), false); }));
    }
    $T09().prototype['Add'].call(this._gotFocusEventManager, value);
  };

  function UIElement_add_KeyDown (value) {
    if (this._keyDownEventManager === null) {
      this._keyDownEventManager = $S02().Construct($T0A()['New'](this, $thisType.prototype['$ladd_KeyDown$gb__59'], function () { return JSIL.GetMethodInfo($thisType, "$ladd_KeyDown$gb__59", JSIL.MethodSignature.Return($.Object), false); }), "keydown", $T0B()['New'](this, $thisType.prototype['OnKeyDown'], function () { return JSIL.GetMethodInfo($thisType, "OnKeyDown", JSIL.MethodSignature.Action($.Object), false); }));
    }
    $T0D().prototype['Add'].call(this._keyDownEventManager, value);
  };

  function UIElement_add_KeyUp (value) {
    if (this._keyUpEventManager === null) {
      this._keyUpEventManager = $S02().Construct($T0A()['New'](this, $thisType.prototype['$ladd_KeyUp$gb__62'], function () { return JSIL.GetMethodInfo($thisType, "$ladd_KeyUp$gb__62", JSIL.MethodSignature.Return($.Object), false); }), "keyup", $T0B()['New'](this, $thisType.prototype['OnKeyUp'], function () { return JSIL.GetMethodInfo($thisType, "OnKeyUp", JSIL.MethodSignature.Action($.Object), false); }));
    }
    $T0D().prototype['Add'].call(this._keyUpEventManager, value);
  };

  function UIElement_add_LostFocus (value) {
    if (this._lostFocusEventManager === null) {
      this._lostFocusEventManager = $S01().Construct($T0A()['New'](this, $thisType.prototype['$ladd_LostFocus$gb__6e'], function () { return JSIL.GetMethodInfo($thisType, "$ladd_LostFocus$gb__6e", JSIL.MethodSignature.Return($.Object), false); }), "blur", $T0B()['New'](this, $thisType.prototype['OnLostFocus'], function () { return JSIL.GetMethodInfo($thisType, "OnLostFocus", JSIL.MethodSignature.Action($.Object), false); }));
    }
    $T09().prototype['Add'].call(this._lostFocusEventManager, value);
  };

  function UIElement_add_PointerEntered (value) {
    if (this._pointerEnteredEventManager === null) {
      if (true) {
        var array = JSIL.Array.New($T10(), ["mouseenter"]);
        var domEventsNamesToListenTo = array;
      } else {
        array = JSIL.Array.New($T10(), ["mouseover"]);
        domEventsNamesToListenTo = array;
      }
      this._pointerEnteredEventManager = $S03().Construct($T0A()['New'](this, $thisType.prototype['$ladd_PointerEntered$gb__38'], function () { return JSIL.GetMethodInfo($thisType, "$ladd_PointerEntered$gb__38", JSIL.MethodSignature.Return($.Object), false); }), domEventsNamesToListenTo, $T0B()['New'](this, $thisType.prototype['OnPointerEntered'], function () { return JSIL.GetMethodInfo($thisType, "OnPointerEntered", JSIL.MethodSignature.Action($.Object), false); }));
    }
    $T11().prototype['Add'].call(this._pointerEnteredEventManager, value);
  };

  function UIElement_add_PointerExited (value) {
    if (this._pointerExitedEventManager === null) {
      var domEventsNamesToListenTo = JSIL.Array.New($T10(), ["mouseleave"]);
      this._pointerExitedEventManager = $S03().Construct($T0A()['New'](this, $thisType.prototype['$ladd_PointerExited$gb__43'], function () { return JSIL.GetMethodInfo($thisType, "$ladd_PointerExited$gb__43", JSIL.MethodSignature.Return($.Object), false); }), domEventsNamesToListenTo, $T0B()['New'](this, $thisType.prototype['OnPointerExited'], function () { return JSIL.GetMethodInfo($thisType, "OnPointerExited", JSIL.MethodSignature.Action($.Object), false); }));
    }
    $T11().prototype['Add'].call(this._pointerExitedEventManager, value);
  };

  function UIElement_add_PointerMoved (value) {
    if (this._pointerMovedEventManager === null) {
      var domEventsNamesToListenTo = JSIL.Array.New($T10(), ["mousemove", "touchmove"]);
      this._pointerMovedEventManager = $S03().Construct($T0A()['New'](this, $thisType.prototype['$ladd_PointerMoved$gb__17'], function () { return JSIL.GetMethodInfo($thisType, "$ladd_PointerMoved$gb__17", JSIL.MethodSignature.Return($.Object), false); }), domEventsNamesToListenTo, $T0B()['New'](this, $thisType.prototype['OnPointerMoved'], function () { return JSIL.GetMethodInfo($thisType, "OnPointerMoved", JSIL.MethodSignature.Action($.Object), false); }));
    }
    $T11().prototype['Add'].call(this._pointerMovedEventManager, value);
  };

  function UIElement_add_PointerPressed (value) {
    if (this._pointerPressedEventManager === null) {
      var domEventsNamesToListenTo = JSIL.Array.New($T10(), ["mousedown", "touchstart", "toto"]);
      this._pointerPressedEventManager = $S03().Construct($T0A()['New'](this, $thisType.prototype['$ladd_PointerPressed$gb__22'], function () { return JSIL.GetMethodInfo($thisType, "$ladd_PointerPressed$gb__22", JSIL.MethodSignature.Return($.Object), false); }), domEventsNamesToListenTo, $T0B()['New'](this, $thisType.prototype['OnPointerPressed'], function () { return JSIL.GetMethodInfo($thisType, "OnPointerPressed", JSIL.MethodSignature.Action($.Object), false); }));
    }
    $T11().prototype['Add'].call(this._pointerPressedEventManager, value);
  };

  function UIElement_add_PointerReleased (value) {
    if (this._pointerReleasedEventManager === null) {
      var domEventsNamesToListenTo = JSIL.Array.New($T10(), ["mouseup", "touchend"]);
      this._pointerReleasedEventManager = $S03().Construct($T0A()['New'](this, $thisType.prototype['$ladd_PointerReleased$gb__2d'], function () { return JSIL.GetMethodInfo($thisType, "$ladd_PointerReleased$gb__2d", JSIL.MethodSignature.Return($.Object), false); }), domEventsNamesToListenTo, $T0B()['New'](this, $thisType.prototype['OnPointerReleased'], function () { return JSIL.GetMethodInfo($thisType, "OnPointerReleased", JSIL.MethodSignature.Action($.Object), false); }));
    }
    $T11().prototype['Add'].call(this._pointerReleasedEventManager, value);
  };

  function UIElement_add_Tapped (value) {
    if (this._tappedEventManager === null) {
      this._tappedEventManager = $S04().Construct($T0A()['New'](this, $thisType.prototype['$ladd_Tapped$gb__4e'], function () { return JSIL.GetMethodInfo($thisType, "$ladd_Tapped$gb__4e", JSIL.MethodSignature.Return($.Object), false); }), "mouseup", $T0B()['New'](this, $thisType.prototype['OnTapped'], function () { return JSIL.GetMethodInfo($thisType, "OnTapped", JSIL.MethodSignature.Action($.Object), false); }));
    }
    $T13().prototype['Add'].call(this._tappedEventManager, value);
  };

  function UIElement_CapturePointer$00 (value) {
    return $T15().$Cast(this['CapturePointer'](value, this.UIElement$INTERNAL_OuterDomElement$value));
  };

  function UIElement_CapturePointer$01 (value, element) {
    if ($T14().INTERNAL_captured === null) {
      $T14().INTERNAL_captured = this;
      if (true) {
             document.onmouseup = function(e) {
                if(e.doNotReroute == undefined)
                {
                       document.reroute(e, element);
                }
            }
             document.onmouseover = function(e) {
               if(e.doNotReroute == undefined)
                {
                       document.reroute(e, element);
                }
            }       
            document.onmousedown = function(e) {
               if(e.doNotReroute == undefined)
                {
                       document.reroute(e, element);
                }
            }                               
             document.onmouseout = function(e) {   
               if(e.doNotReroute == undefined)
                {
                       document.reroute(e, element);
                }
            }                                      
             document.onmousemove = function(e) {  
               if(e.doNotReroute == undefined)
                {
                       document.reroute(e, element);
                }
            }                                      
             document.onclick = function(e) {      
               if(e.doNotReroute == undefined)
                {
                       document.reroute(e, element);
                }
            }                                      
             document.oncontextmenu = function(e) {
               if(e.doNotReroute == undefined)
                {
                       document.reroute(e, element);
                }
            }                                      
             document.ondblclick = function(e) {   
               if(e.doNotReroute == undefined)
                {
                       document.reroute(e, element);
                }
            };
      } else {
        var javaScriptToExecute = $T10()['Format']("\r\n     document.onmouseup = function(e) {{\r\n        if(e.doNotReroute == undefined)\r\n        {{\r\n               var element = document.getElementById(\"{0}\");\r\n               document.reroute(e, element);\r\n        }}\r\n    }}\r\n     document.onmouseover = function(e) {{\r\n       if(e.doNotReroute == undefined)\r\n        {{\r\n               var element = document.getElementById(\"{0}\");\r\n               document.reroute(e, element);\r\n        }}\r\n    }} \r\n    document.onmousedown = function(e) {{\r\n       if(e.doNotReroute == undefined)\r\n        {{\r\n               var element = document.getElementById(\"{0}\");\r\n               document.reroute(e, element);\r\n        }}\r\n    }}                       \r\n     document.onmouseout = function(e) {{   \r\n       if(e.doNotReroute == undefined)\r\n        {{\r\n               var element = document.getElementById(\"{0}\");\r\n               document.reroute(e, element);\r\n        }}\r\n    }}                            \r\n     document.onmousemove = function(e) {{\r\n       if(e.doNotReroute == undefined)\r\n        {{\r\n               var element = document.getElementById(\"{0}\");\r\n               document.reroute(e, element);\r\n        }}\r\n    }}                                    \r\n     document.onclick = function(e) {{   \r\n       if(e.doNotReroute == undefined)\r\n        {{\r\n               var element = document.getElementById(\"{0}\");\r\n               document.reroute(e, element);\r\n        }}\r\n    }}                                     \r\n     document.oncontextmenu = function(e) {{\r\n       if(e.doNotReroute == undefined)\r\n        {{\r\n               var element = document.getElementById(\"{0}\");\r\n               document.reroute(e, element);\r\n        }}\r\n    }}                                      \r\n     document.ondblclick = function(e) {{   \r\n       if(e.doNotReroute == undefined)\r\n        {{\r\n               var element = document.getElementById(\"{0}\");\r\n               document.reroute(e, element);\r\n        }}\r\n    }}\r\n\r\n", JSIL.IgnoredMember("get_UniqueIdentifier()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(element)).LValue);
        JSIL.IgnoredMember("ExecuteJavaScriptWithResult(javaScriptToExecute, commentForDebugging)", javaScriptToExecute, null).LValue;
      }
      var result = true;
    } else {
      result = false;
    }
    return result;
  };

  function UIElement_CreateDomChildWrapper (parentRef, /* ref */ domElementWhereToPlaceChild) {
    domElementWhereToPlaceChild.set(null);
    return null;
  };

  function UIElement_Effect_Changed (d, e) {
    var parentUIElement = $thisType.$Cast(d);
    if (e['get_OldValue']() !== null) {
      ($T01().$Cast(e['get_NewValue']()))['SetParentUIElement'](null);
    }
    if (e['get_NewValue']() !== null) {
      ($T01().$Cast(e['get_NewValue']()))['SetParentUIElement'](parentUIElement);
    }
  };

  function UIElement_GenerateRadioButtonsDefaultName () {
    if ($thisType._random === null) {
      $thisType._random = $S05().Construct();
    }
    return JSIL.ConcatString("RadioButtonDefaultGroupName", ($thisType._random['Next']()).toString());
  };

  function UIElement_get_Effect () {
    return $T01().$Cast(this['GetValue']($thisType.EffectProperty));
  };

  function UIElement_get_INTERNAL_AdditionalOutsideDivForMargins () {
    return this.UIElement$INTERNAL_AdditionalOutsideDivForMargins$value;
  };

  function UIElement_get_INTERNAL_ChildrenRadioButtonDefaultName () {
    if ($T10()['IsNullOrWhiteSpace'](this._childrenRadioButtonDefaultName)) {
      this._childrenRadioButtonDefaultName = $thisType['GenerateRadioButtonsDefaultName']();
    }
    return this._childrenRadioButtonDefaultName;
  };

  function UIElement_get_INTERNAL_HtmlRepresentation () {
    return this.UIElement$INTERNAL_HtmlRepresentation$value;
  };

  function UIElement_get_INTERNAL_InnerDivOfTheChildWrapperOfTheParentIfAny () {
    return this.UIElement$INTERNAL_InnerDivOfTheChildWrapperOfTheParentIfAny$value;
  };

  function UIElement_get_INTERNAL_InnerDomElement () {
    return this.UIElement$INTERNAL_InnerDomElement$value;
  };

  function UIElement_get_INTERNAL_OptionalSpecifyDomElementConcernedByFocus () {
    return this.UIElement$INTERNAL_OptionalSpecifyDomElementConcernedByFocus$value;
  };

  function UIElement_get_INTERNAL_OuterDomElement () {
    return this.UIElement$INTERNAL_OuterDomElement$value;
  };

  function UIElement_get_INTERNAL_VisualChildrenInformation () {
    return this.UIElement$INTERNAL_VisualChildrenInformation$value;
  };

  function UIElement_get_INTERNAL_VisualParent () {
    return this.UIElement$INTERNAL_VisualParent$value;
  };

  function UIElement_get_Opacity () {
    return $T06().$Cast(this['GetValue']($thisType.OpacityProperty));
  };

  function UIElement_get_RenderTransform () {
    return $T04().$Cast(this['GetValue']($thisType.RenderTransformProperty));
  };

  function UIElement_get_Visibility () {
    return $T05().$Cast(this['GetValue']($thisType.VisibilityProperty));
  };

  function UIElement_GetChildsWrapper (child) {
    if (!(!$T1A()['IsElementInVisualTree'](this) || !$T1A()['IsElementInVisualTree'](child))) {
      var result = (this.UIElement$INTERNAL_VisualChildrenInformation$value)['get_Item'](child).INTERNAL_VisualChildInformation$INTERNAL_OptionalChildWrapper_OuterDomElement$value;
    } else {
      result = null;
    }
    return result;
  };

  function UIElement_GetDomElementWhereToPlaceChild (child) {
    return null;
  };

  function UIElement_INTERNAL_AttachToDomEvents () {
    if (this._pointerReleasedEventManager !== null) {
      $T11().prototype['AttachToDomEvents'].call(this._pointerReleasedEventManager);
    }
    if (this._pointerMovedEventManager !== null) {
      $T11().prototype['AttachToDomEvents'].call(this._pointerMovedEventManager);
    }
    if (this._pointerPressedEventManager !== null) {
      $T11().prototype['AttachToDomEvents'].call(this._pointerPressedEventManager);
    }
    if (this._pointerEnteredEventManager !== null) {
      $T11().prototype['AttachToDomEvents'].call(this._pointerEnteredEventManager);
    }
    if (this._pointerExitedEventManager !== null) {
      $T11().prototype['AttachToDomEvents'].call(this._pointerExitedEventManager);
    }
    if (this._tappedEventManager !== null) {
      $T13().prototype['AttachToDomEvents'].call(this._tappedEventManager);
    }
    if (this._gotFocusEventManager !== null) {
      $T09().prototype['AttachToDomEvents'].call(this._gotFocusEventManager);
    }
    if (this._lostFocusEventManager !== null) {
      $T09().prototype['AttachToDomEvents'].call(this._lostFocusEventManager);
    }
    if (this._keyDownEventManager !== null) {
      $T0D().prototype['AttachToDomEvents'].call(this._keyDownEventManager);
    }
    if (this._keyUpEventManager !== null) {
      $T0D().prototype['AttachToDomEvents'].call(this._keyUpEventManager);
    }
  };

  function UIElement_INTERNAL_DetachFromDomEvents () {
    if (this._pointerReleasedEventManager !== null) {
      $T11().prototype['DetachFromDomEvents'].call(this._pointerReleasedEventManager);
    }
    if (this._pointerMovedEventManager !== null) {
      $T11().prototype['DetachFromDomEvents'].call(this._pointerMovedEventManager);
    }
    if (this._pointerPressedEventManager !== null) {
      $T11().prototype['DetachFromDomEvents'].call(this._pointerPressedEventManager);
    }
    if (this._pointerEnteredEventManager !== null) {
      $T11().prototype['DetachFromDomEvents'].call(this._pointerEnteredEventManager);
    }
    if (this._pointerExitedEventManager !== null) {
      $T11().prototype['DetachFromDomEvents'].call(this._pointerExitedEventManager);
    }
    if (this._tappedEventManager !== null) {
      $T13().prototype['DetachFromDomEvents'].call(this._tappedEventManager);
    }
    if (this._gotFocusEventManager !== null) {
      $T09().prototype['DetachFromDomEvents'].call(this._gotFocusEventManager);
    }
    if (this._lostFocusEventManager !== null) {
      $T09().prototype['DetachFromDomEvents'].call(this._lostFocusEventManager);
    }
    if (this._keyDownEventManager !== null) {
      $T0D().prototype['DetachFromDomEvents'].call(this._keyDownEventManager);
    }
    if (this._keyUpEventManager !== null) {
      $T0D().prototype['DetachFromDomEvents'].call(this._keyUpEventManager);
    }
  };

  function UIElement_INTERNAL_UpdateDomStructureIfNecessary () {
  };

  function UIElement_IsChildOf (element) {

    for (var uIElement = this; uIElement.UIElement$INTERNAL_VisualParent$value !== null; uIElement = $thisType.$Cast(uIElement.UIElement$INTERNAL_VisualParent$value)) {
      if (uIElement.UIElement$INTERNAL_VisualParent$value === element) {
        var result = true;
        return result;
      }
    }
    result = false;
    return result;
  };

  function UIElement_OnGotFocus$02 (e) {
    var routedEventArgs = new ($T1D())();
    routedEventArgs['set_OriginalSource'](this);
    $S06().CallVirtual("OnGotFocus", null, this, routedEventArgs);
  };

  function UIElement_OnGotFocus$03 (eventArgs) {
    var $temp00;

    for (var a$0 = $T1E()['ToList$b1']($T08())((this._gotFocusEventManager)['get_Handlers']())._items, i$0 = 0, l$0 = ($T1E()['ToList$b1']($T08())((this._gotFocusEventManager)['get_Handlers']())._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      current(this, eventArgs);
    }
  };

  function UIElement_OnKeyDown$04 (e) {
    var keyRoutedEventArgs = new ($T1F())();
    keyRoutedEventArgs['set_OriginalSource'](this);
    keyRoutedEventArgs['set_Key']($T20().$Cast($T19().$Cast(e.keyCode)));
    keyRoutedEventArgs['set_Handled'](e.data === "handled");
    var keyRoutedEventArgs2 = keyRoutedEventArgs;
    $S07().CallVirtual("OnKeyDown", null, this, keyRoutedEventArgs2);
    if (keyRoutedEventArgs2['get_Handled']()) {
      e.data = "handled";
    }
  };

  function UIElement_OnKeyDown$05 (eventArgs) {
    var $temp00;

  $loop0: 
    for (var a$0 = $T1E()['ToList$b1']($T0C())((this._keyDownEventManager)['get_Handlers']())._items, i$0 = 0, l$0 = ($T1E()['ToList$b1']($T0C())((this._keyDownEventManager)['get_Handlers']())._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (eventArgs['get_Handled']()) {
        break $loop0;
      }
      current(this, eventArgs);
    }
  };

  function UIElement_OnKeyUp$06 (e) {
    var keyRoutedEventArgs = new ($T1F())();
    keyRoutedEventArgs['set_OriginalSource'](this);
    keyRoutedEventArgs['set_Key']($T20().$Cast($T19().$Cast(e.keyCode)));
    keyRoutedEventArgs['set_Handled'](e.data === "handled");
    var keyRoutedEventArgs2 = keyRoutedEventArgs;
    $S08().CallVirtual("OnKeyUp", null, this, keyRoutedEventArgs2);
    if (keyRoutedEventArgs2['get_Handled']()) {
      e.data = "handled";
    }
  };

  function UIElement_OnKeyUp$07 (eventArgs) {
    var $temp00;

  $loop0: 
    for (var a$0 = $T1E()['ToList$b1']($T0C())((this._keyUpEventManager)['get_Handlers']())._items, i$0 = 0, l$0 = ($T1E()['ToList$b1']($T0C())((this._keyUpEventManager)['get_Handlers']())._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (eventArgs['get_Handled']()) {
        break $loop0;
      }
      current(this, eventArgs);
    }
  };

  function UIElement_OnLostFocus$08 (e) {
    var routedEventArgs = new ($T1D())();
    routedEventArgs['set_OriginalSource'](this);
    $S09().CallVirtual("OnLostFocus", null, this, routedEventArgs);
  };

  function UIElement_OnLostFocus$09 (eventArgs) {
    var $temp00;

    for (var a$0 = $T1E()['ToList$b1']($T08())((this._lostFocusEventManager)['get_Handlers']())._items, i$0 = 0, l$0 = ($T1E()['ToList$b1']($T08())((this._lostFocusEventManager)['get_Handlers']())._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      current(this, eventArgs);
    }
  };

  function UIElement_OnPointerEntered$0A (e) {
    var flag = true;
    if (!(true)) {
      if ($T1A()['get_INTERNAL_ListOfElementsContainingPointerWithMouseEnterOrMouseLeaveEvents']()['Contains'](this)) {
        flag = false;
      } else {
        $T1A()['get_INTERNAL_ListOfElementsContainingPointerWithMouseEnterOrMouseLeaveEvents']()['Add'](this);
      }
    }
    if (flag) {
      var pointerRoutedEventArgs = new ($T22())();
      pointerRoutedEventArgs['set_OriginalSource'](this);
      pointerRoutedEventArgs['set_Handled'](e.data === "handled");
      var pointerRoutedEventArgs2 = pointerRoutedEventArgs;
      if (pointerRoutedEventArgs2['CheckIfEventShouldBeTreated'](this, e)) {
        pointerRoutedEventArgs2['FillPointerRoutedEventArgs'](this, e);
        $S0A().CallVirtual("OnPointerEntered", null, this, pointerRoutedEventArgs2);
        if (pointerRoutedEventArgs2['get_Handled']()) {
          e.data = "handled";
        }
      }
    }
  };

  function UIElement_OnPointerEntered$0B (eventArgs) {
    var $temp00;

  $loop0: 
    for (var a$0 = $T1E()['ToList$b1']($T0E())((this._pointerEnteredEventManager)['get_Handlers']())._items, i$0 = 0, l$0 = ($T1E()['ToList$b1']($T0E())((this._pointerEnteredEventManager)['get_Handlers']())._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (eventArgs['get_Handled']()) {
        break $loop0;
      }
      current(this, eventArgs);
    }
  };

  function UIElement_OnPointerExited$0C (e) {
    var pointerRoutedEventArgs = new ($T22())();
    pointerRoutedEventArgs['set_OriginalSource'](this);
    pointerRoutedEventArgs['set_Handled'](e.data === "handled");
    var pointerRoutedEventArgs2 = pointerRoutedEventArgs;
    if (pointerRoutedEventArgs2['CheckIfEventShouldBeTreated'](this, e)) {
      pointerRoutedEventArgs2['FillPointerRoutedEventArgs'](this, e);
      $S0B().CallVirtual("OnPointerExited", null, this, pointerRoutedEventArgs2);
      if (pointerRoutedEventArgs2['get_Handled']()) {
        e.data = "handled";
      }
    }
  };

  function UIElement_OnPointerExited$0D (eventArgs) {
    var $temp00;

  $loop0: 
    for (var a$0 = $T1E()['ToList$b1']($T0E())((this._pointerExitedEventManager)['get_Handlers']())._items, i$0 = 0, l$0 = ($T1E()['ToList$b1']($T0E())((this._pointerExitedEventManager)['get_Handlers']())._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (eventArgs['get_Handled']()) {
        break $loop0;
      }
      current(this, eventArgs);
    }
  };

  function UIElement_OnPointerMoved$0E (e) {
    var pointerRoutedEventArgs = new ($T22())();
    pointerRoutedEventArgs['set_OriginalSource'](this);
    pointerRoutedEventArgs['set_Handled'](e.data === "handled");
    var pointerRoutedEventArgs2 = pointerRoutedEventArgs;
    if (pointerRoutedEventArgs2['CheckIfEventShouldBeTreated'](this, e)) {
      pointerRoutedEventArgs2['FillPointerRoutedEventArgs'](this, e);
      $S0C().CallVirtual("OnPointerMoved", null, this, pointerRoutedEventArgs2);
      if (pointerRoutedEventArgs2['get_Handled']()) {
        e.data = "handled";
      }
    }
  };

  function UIElement_OnPointerMoved$0F (eventArgs) {
    var $temp00;

  $loop0: 
    for (var a$0 = $T1E()['ToList$b1']($T0E())((this._pointerMovedEventManager)['get_Handlers']())._items, i$0 = 0, l$0 = ($T1E()['ToList$b1']($T0E())((this._pointerMovedEventManager)['get_Handlers']())._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (eventArgs['get_Handled']()) {
        break $loop0;
      }
      current(this, eventArgs);
    }
  };

  function UIElement_OnPointerPressed$10 (e) {
    var pointerRoutedEventArgs = new ($T22())();
    pointerRoutedEventArgs['set_OriginalSource'](this);
    pointerRoutedEventArgs['set_Handled'](e.data === "handled");
    var pointerRoutedEventArgs2 = pointerRoutedEventArgs;
    if (pointerRoutedEventArgs2['CheckIfEventShouldBeTreated'](this, e)) {
      pointerRoutedEventArgs2['FillPointerRoutedEventArgs'](this, e);
      $S0D().CallVirtual("OnPointerPressed", null, this, pointerRoutedEventArgs2);
      if (pointerRoutedEventArgs2['get_Handled']()) {
        e.data = "handled";
      }
    }
  };

  function UIElement_OnPointerPressed$11 (eventArgs) {
    var $temp00;

  $loop0: 
    for (var a$0 = $T1E()['ToList$b1']($T0E())((this._pointerPressedEventManager)['get_Handlers']())._items, i$0 = 0, l$0 = ($T1E()['ToList$b1']($T0E())((this._pointerPressedEventManager)['get_Handlers']())._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (eventArgs['get_Handled']()) {
        break $loop0;
      }
      current(this, eventArgs);
    }
  };

  function UIElement_OnPointerReleased$12 (e) {
    var pointerRoutedEventArgs = new ($T22())();
    pointerRoutedEventArgs['set_OriginalSource'](this);
    pointerRoutedEventArgs['set_Handled'](e.data === "handled");
    var pointerRoutedEventArgs2 = pointerRoutedEventArgs;
    if (pointerRoutedEventArgs2['CheckIfEventShouldBeTreated'](this, e)) {
      pointerRoutedEventArgs2['FillPointerRoutedEventArgs'](this, e);
      $S0E().CallVirtual("OnPointerReleased", null, this, pointerRoutedEventArgs2);
      if (pointerRoutedEventArgs2['get_Handled']()) {
        e.data = "handled";
      }
    }
  };

  function UIElement_OnPointerReleased$13 (eventArgs) {
    var $temp00;

  $loop0: 
    for (var a$0 = $T1E()['ToList$b1']($T0E())((this._pointerReleasedEventManager)['get_Handlers']())._items, i$0 = 0, l$0 = ($T1E()['ToList$b1']($T0E())((this._pointerReleasedEventManager)['get_Handlers']())._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (eventArgs['get_Handled']()) {
        break $loop0;
      }
      current(this, eventArgs);
    }
  };

  function UIElement_OnTapped$14 (e) {
    var tappedRoutedEventArgs = new ($T23())();
    tappedRoutedEventArgs['set_OriginalSource'](this);
    tappedRoutedEventArgs['set_Handled'](e.data === "handled");
    var tappedRoutedEventArgs2 = tappedRoutedEventArgs;
    if (tappedRoutedEventArgs2['CheckIfEventShouldBeTreated'](this, e)) {
      tappedRoutedEventArgs2['FillTappedRoutedEventArgs'](this, e);
      $S0F().CallVirtual("OnTapped", null, this, tappedRoutedEventArgs2);
      if (tappedRoutedEventArgs2['get_Handled']()) {
        e.data = "handled";
      }
    }
  };

  function UIElement_OnTapped$15 (eventArgs) {
    var $temp00;

  $loop0: 
    for (var a$0 = $T1E()['ToList$b1']($T12())((this._tappedEventManager)['get_Handlers']())._items, i$0 = 0, l$0 = ($T1E()['ToList$b1']($T12())((this._tappedEventManager)['get_Handlers']())._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (eventArgs['get_Handled']()) {
        break $loop0;
      }
      current(this, eventArgs);
    }
  };

  function UIElement_Opacity_Changed (d, e) {
    var uIElement = $thisType.$Cast(d);
    var num = $T06().$Cast(e['get_NewValue']());
    if ($T1A()['IsElementInVisualTree'](uIElement)) {
      $T24()['GetFrameworkElementOuterStyleForModification'](uIElement).opacity = ((+(((Math.floor((num * 1000))) / 1000))).toString());
    }
  };

  function UIElement_ReleasePointerCapture (value) {
    if (true) {
      if ($T14().INTERNAL_captured !== null) {
         document.onmousedown = null;
         document.onmouseup = null;
         document.onmouseover = null;
         document.onmouseout = null;
         document.onmousemove = null;
         document.onclick = null;
         document.oncontextmenu = null;
         document.ondblclick = null;;
        $T14().INTERNAL_captured = null;
      }
    } else if ($T14().INTERNAL_captured !== null) {
      var javaScriptToExecute = $T10()['Format']("\r\n document.onmousedown = null;\r\n document.onmouseup = null;\r\n document.onmouseover = null;\r\n document.onmouseout = null;\r\n document.onmousemove = null;\r\n document.onclick = null;\r\n document.oncontextmenu = null;\r\n document.ondblclick = null;\r\n", JSIL.Array.New($T16(), 0));
      JSIL.IgnoredMember("ExecuteJavaScript(javaScriptToExecute, commentForDebugging)", javaScriptToExecute, null).LValue;
      $T14().INTERNAL_captured = null;
    }
  };

  function UIElement_remove_GotFocus (value) {
    if (this._gotFocusEventManager !== null) {
      $T09().prototype['Remove'].call(this._gotFocusEventManager, value);
    }
  };

  function UIElement_remove_KeyDown (value) {
    if (this._keyDownEventManager !== null) {
      $T0D().prototype['Remove'].call(this._keyDownEventManager, value);
    }
  };

  function UIElement_remove_KeyUp (value) {
    if (this._keyUpEventManager !== null) {
      $T0D().prototype['Remove'].call(this._keyUpEventManager, value);
    }
  };

  function UIElement_remove_LostFocus (value) {
    if (this._lostFocusEventManager !== null) {
      $T09().prototype['Remove'].call(this._lostFocusEventManager, value);
    }
  };

  function UIElement_remove_PointerEntered (value) {
    if (this._pointerEnteredEventManager !== null) {
      $T11().prototype['Remove'].call(this._pointerEnteredEventManager, value);
    }
  };

  function UIElement_remove_PointerExited (value) {
    if (this._pointerExitedEventManager !== null) {
      $T11().prototype['Remove'].call(this._pointerExitedEventManager, value);
    }
  };

  function UIElement_remove_PointerMoved (value) {
    if (this._pointerMovedEventManager !== null) {
      $T11().prototype['Remove'].call(this._pointerMovedEventManager, value);
    }
  };

  function UIElement_remove_PointerPressed (value) {
    if (this._pointerPressedEventManager !== null) {
      $T11().prototype['Remove'].call(this._pointerPressedEventManager, value);
    }
  };

  function UIElement_remove_PointerReleased (value) {
    if (this._pointerReleasedEventManager !== null) {
      $T11().prototype['Remove'].call(this._pointerReleasedEventManager, value);
    }
  };

  function UIElement_remove_Tapped (value) {
    if (this._tappedEventManager !== null) {
      $T13().prototype['Remove'].call(this._tappedEventManager, value);
    }
  };

  function UIElement_RenderTransform_Changed (d, e, $exception) {
    var uIElement = $thisType.$Cast(d);
    var transform = $T04().$Cast(e['get_NewValue']());
    if (e['get_OldValue']() !== null) {
      $T04().$Cast(e.OldValue).INTERNAL_parent = null;
    }
    if ($T1A()['IsElementInVisualTree'](uIElement)) {
      transform.INTERNAL_parent = uIElement;
      if ($T27().$Is(transform)) {
        var frameworkElementOuterStyleForModification = $T24()['GetFrameworkElementOuterStyleForModification'](uIElement);
        var translateTransform = $T27().$Cast(transform);
        try {
          frameworkElementOuterStyleForModification.transform = (JSIL.ConcatString.apply(null, JSIL.Array.New($T16(), ["translate(", translateTransform['get_X'](), "px, ", translateTransform['get_Y'](), "px)"])));
        } catch ($exception) {
        }
        try {
          frameworkElementOuterStyleForModification.msTransform = (JSIL.ConcatString.apply(null, JSIL.Array.New($T16(), ["translate(", translateTransform['get_X'](), "px, ", translateTransform['get_Y'](), "px)"])));
        } catch ($exception) {
        }
        try {
          frameworkElementOuterStyleForModification.webkitTransform = (JSIL.ConcatString.apply(null, JSIL.Array.New($T16(), ["translate(", translateTransform['get_X'](), "px, ", translateTransform['get_Y'](), "px)"])));
        } catch ($exception) {
        }
      } else if ($T29().$Is(transform)) {
        frameworkElementOuterStyleForModification = $T24()['GetFrameworkElementOuterStyleForModification'](uIElement);
        var rotateTransform = $T29().$Cast(transform);
        try {
          frameworkElementOuterStyleForModification.transform = (JSIL.ConcatString("rotate(", rotateTransform['get_Angle'](), "deg)"));
          frameworkElementOuterStyleForModification.transformOrigin = (JSIL.ConcatString.apply(null, JSIL.Array.New($T16(), [rotateTransform['get_CenterX'](), "px ", rotateTransform['get_CenterY'](), "px"])));
        } catch ($exception) {
        }
        try {
          frameworkElementOuterStyleForModification.webkitTransform = (JSIL.ConcatString("rotate(", rotateTransform['get_Angle'](), "deg)"));
          frameworkElementOuterStyleForModification.webkitTransformOrigin = (JSIL.ConcatString.apply(null, JSIL.Array.New($T16(), [rotateTransform['get_CenterX'](), "px ", rotateTransform['get_CenterY'](), "px"])));
        } catch ($exception) {
        }
        try {
          frameworkElementOuterStyleForModification.msTransform = (JSIL.ConcatString("rotate(", rotateTransform['get_Angle'](), "deg)"));
          frameworkElementOuterStyleForModification.msTransformOrigin = (JSIL.ConcatString.apply(null, JSIL.Array.New($T16(), [rotateTransform['get_CenterX'](), "px ", rotateTransform['get_CenterY'](), "px"])));
        } catch ($exception) {
        }
      }
    }
  };

  function UIElement_set_Effect (value) {
    this['SetValue']($thisType.EffectProperty, value);
  };

  function UIElement_set_INTERNAL_AdditionalOutsideDivForMargins (value) {
    this.UIElement$INTERNAL_AdditionalOutsideDivForMargins$value = value;
  };

  function UIElement_set_INTERNAL_HtmlRepresentation (value) {
    this.UIElement$INTERNAL_HtmlRepresentation$value = value;
  };

  function UIElement_set_INTERNAL_InnerDivOfTheChildWrapperOfTheParentIfAny (value) {
    this.UIElement$INTERNAL_InnerDivOfTheChildWrapperOfTheParentIfAny$value = value;
  };

  function UIElement_set_INTERNAL_InnerDomElement (value) {
    this.UIElement$INTERNAL_InnerDomElement$value = value;
  };

  function UIElement_set_INTERNAL_OptionalSpecifyDomElementConcernedByFocus (value) {
    this.UIElement$INTERNAL_OptionalSpecifyDomElementConcernedByFocus$value = value;
  };

  function UIElement_set_INTERNAL_OuterDomElement (value) {
    this.UIElement$INTERNAL_OuterDomElement$value = value;
  };

  function UIElement_set_INTERNAL_VisualChildrenInformation (value) {
    this.UIElement$INTERNAL_VisualChildrenInformation$value = value;
  };

  function UIElement_set_INTERNAL_VisualParent (value) {
    this.UIElement$INTERNAL_VisualParent$value = value;
  };

  function UIElement_set_Opacity (value) {
    this['SetValue']($thisType.OpacityProperty, value);
  };

  function UIElement_set_RenderTransform (value) {
    this['SetValue']($thisType.RenderTransformProperty, value);
  };

  function UIElement_set_Visibility (value) {
    this['SetValue']($thisType.VisibilityProperty, value);
  };

  function UIElement_TransformToVisual (visual) {
    var iNTERNAL_OuterDomElement = this.UIElement$INTERNAL_OuterDomElement$value;
    var iNTERNAL_OuterDomElement2 = visual.UIElement$INTERNAL_OuterDomElement$value;
    if (true) {
      var obj = iNTERNAL_OuterDomElement['getBoundingClientRect']();
      var obj2 = iNTERNAL_OuterDomElement2['getBoundingClientRect']();
      var arg_201_2 = obj.left;
      var x = $T06().$Cast(arg_201_2 - obj2.left);
      var arg_342_2 = obj.top;
      var y = $T06().$Cast(arg_342_2 - obj2.top);
    } else {
      var uniqueIdentifier = JSIL.IgnoredMember("get_UniqueIdentifier()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(iNTERNAL_OuterDomElement)).LValue;
      var uniqueIdentifier2 = JSIL.IgnoredMember("get_UniqueIdentifier()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(iNTERNAL_OuterDomElement2)).LValue;
      JSIL.IgnoredMember("Flush()").LValue;
      x = $T06().$Cast(null);
      y = $T06().$Cast(null);
    }
    var translateTransform = new ($T27())();
    translateTransform['set_X'](x);
    translateTransform['set_Y'](y);
    return translateTransform;
  };

  function UIElement_Visibility_Changed (d, e) {
    var uIElement = $thisType.$Cast(d);
    var visibility = $T05().$Cast(e['get_NewValue']());
    if (!(!$T1A()['IsElementInVisualTree'](uIElement) || !$thisType.$Is(uIElement.UIElement$INTERNAL_VisualParent$value))) {
      var obj = ($thisType.$Cast(uIElement.UIElement$INTERNAL_VisualParent$value).UIElement$INTERNAL_VisualChildrenInformation$value)['get_Item'](uIElement).INTERNAL_VisualChildInformation$INTERNAL_OptionalChildWrapper_OuterDomElement$value;
      if (obj === null) {
        obj = uIElement.UIElement$INTERNAL_AdditionalOutsideDivForMargins$value;
      }
      var obj2 = $T24()['GetDomElementStyleForModification'](obj);
      if (visibility === $T05().Collapsed) {
        var text = $T10().$Cast(obj2.display);
        if (text != "none") {
          uIElement._previousValueOfDisplayCssProperty = text;
        }
        obj2.display = "none";
      } else {
        if (obj2.display === "none") {
          obj2.display = uIElement._previousValueOfDisplayCssProperty;
        }
        if ($T2B().$Is(uIElement)) {
          $T2B()['INTERNAL_ApplyHorizontalAlignmentAndWidth']($T2B().$Cast(uIElement), ($T2B().$Cast(uIElement))['get_HorizontalAlignment']());
          $T2B()['INTERNAL_ApplyVerticalAlignmentAndHeight']($T2B().$Cast(uIElement), ($T2B().$Cast(uIElement))['get_VerticalAlignment']());
        }
      }
      $T2C()['RefreshLayoutIfIE']();
    }
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), 
      Name: "Windows.UI.Xaml.UIElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void, 
      UIElement__ctor
    );

    $.Method({Static:false, Public:false}, "$ladd_GotFocus$gb__6b", 
      JSIL.MethodSignature.Return($.Object), 
      UIElement_$ladd_GotFocus$gb__6b
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "$ladd_KeyDown$gb__59", 
      JSIL.MethodSignature.Return($.Object), 
      UIElement_$ladd_KeyDown$gb__59
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "$ladd_KeyUp$gb__62", 
      JSIL.MethodSignature.Return($.Object), 
      UIElement_$ladd_KeyUp$gb__62
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "$ladd_LostFocus$gb__6e", 
      JSIL.MethodSignature.Return($.Object), 
      UIElement_$ladd_LostFocus$gb__6e
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "$ladd_PointerEntered$gb__38", 
      JSIL.MethodSignature.Return($.Object), 
      UIElement_$ladd_PointerEntered$gb__38
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "$ladd_PointerExited$gb__43", 
      JSIL.MethodSignature.Return($.Object), 
      UIElement_$ladd_PointerExited$gb__43
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "$ladd_PointerMoved$gb__17", 
      JSIL.MethodSignature.Return($.Object), 
      UIElement_$ladd_PointerMoved$gb__17
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "$ladd_PointerPressed$gb__22", 
      JSIL.MethodSignature.Return($.Object), 
      UIElement_$ladd_PointerPressed$gb__22
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "$ladd_PointerReleased$gb__2d", 
      JSIL.MethodSignature.Return($.Object), 
      UIElement_$ladd_PointerReleased$gb__2d
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "$ladd_Tapped$gb__4e", 
      JSIL.MethodSignature.Return($.Object), 
      UIElement_$ladd_Tapped$gb__4e
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "add_GotFocus", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")), 
      UIElement_add_GotFocus
    );

    $.Method({Static:false, Public:true }, "add_KeyDown", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.KeyEventHandler")), 
      UIElement_add_KeyDown
    );

    $.Method({Static:false, Public:true }, "add_KeyUp", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.KeyEventHandler")), 
      UIElement_add_KeyUp
    );

    $.Method({Static:false, Public:true }, "add_LostFocus", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")), 
      UIElement_add_LostFocus
    );

    $.Method({Static:false, Public:true }, "add_PointerEntered", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.PointerEventHandler")), 
      UIElement_add_PointerEntered
    );

    $.Method({Static:false, Public:true }, "add_PointerExited", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.PointerEventHandler")), 
      UIElement_add_PointerExited
    );

    $.Method({Static:false, Public:true }, "add_PointerMoved", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.PointerEventHandler")), 
      UIElement_add_PointerMoved
    );

    $.Method({Static:false, Public:true }, "add_PointerPressed", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.PointerEventHandler")), 
      UIElement_add_PointerPressed
    );

    $.Method({Static:false, Public:true }, "add_PointerReleased", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.PointerEventHandler")), 
      UIElement_add_PointerReleased
    );

    $.Method({Static:false, Public:true }, "add_Tapped", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.TappedEventHandler")), 
      UIElement_add_Tapped
    );

    $.Method({Static:false, Public:true }, "CapturePointer", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Windows.UI.Xaml.Input.Pointer")]), 
      UIElement_CapturePointer$00
    );

    $.Method({Static:false, Public:false}, "CapturePointer", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Windows.UI.Xaml.Input.Pointer"), $.Object]), 
      UIElement_CapturePointer$01
    )
      .Parameter(1, "element", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:true , Virtual:true }, "CreateDomChildWrapper", 
      new JSIL.MethodSignature($.Object, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]), 
      UIElement_CreateDomChildWrapper
    );

    $.Method({Static:true , Public:false}, "Effect_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      UIElement_Effect_Changed
    );

    $.Method({Static:true , Public:false}, "GenerateRadioButtonsDefaultName", 
      JSIL.MethodSignature.Return($.String), 
      UIElement_GenerateRadioButtonsDefaultName
    );

    $.Method({Static:false, Public:true }, "get_Effect", 
      JSIL.MethodSignature.Return($asm00.TypeRef("System.Windows.Media.Effects.Effect")), 
      UIElement_get_Effect
    );

    $.Method({Static:false, Public:false}, "get_INTERNAL_AdditionalOutsideDivForMargins", 
      JSIL.MethodSignature.Return($.Object), 
      UIElement_get_INTERNAL_AdditionalOutsideDivForMargins
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_INTERNAL_ChildrenRadioButtonDefaultName", 
      JSIL.MethodSignature.Return($.String), 
      UIElement_get_INTERNAL_ChildrenRadioButtonDefaultName
    );

    $.Method({Static:false, Public:false}, "get_INTERNAL_HtmlRepresentation", 
      JSIL.MethodSignature.Return($.String), 
      UIElement_get_INTERNAL_HtmlRepresentation
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_INTERNAL_InnerDivOfTheChildWrapperOfTheParentIfAny", 
      JSIL.MethodSignature.Return($.Object), 
      UIElement_get_INTERNAL_InnerDivOfTheChildWrapperOfTheParentIfAny
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_INTERNAL_InnerDomElement", 
      JSIL.MethodSignature.Return($.Object), 
      UIElement_get_INTERNAL_InnerDomElement
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_INTERNAL_OptionalSpecifyDomElementConcernedByFocus", 
      JSIL.MethodSignature.Return($.Object), 
      UIElement_get_INTERNAL_OptionalSpecifyDomElementConcernedByFocus
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_INTERNAL_OuterDomElement", 
      JSIL.MethodSignature.Return($.Object), 
      UIElement_get_INTERNAL_OuterDomElement
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_INTERNAL_VisualChildrenInformation", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$.Type, $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_VisualChildInformation")])), 
      UIElement_get_INTERNAL_VisualChildrenInformation
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_INTERNAL_VisualParent", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.DependencyObject")), 
      UIElement_get_INTERNAL_VisualParent
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Opacity", 
      JSIL.MethodSignature.Return($.Double), 
      UIElement_get_Opacity
    );

    $.Method({Static:false, Public:true }, "get_RenderTransform", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Media.Transform")), 
      UIElement_get_RenderTransform
    );

    $.Method({Static:false, Public:true }, "get_Visibility", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Visibility")), 
      UIElement_get_Visibility
    );

    $.Method({Static:false, Public:true }, "GetChildsWrapper", 
      new JSIL.MethodSignature($.Object, [$.Type]), 
      UIElement_GetChildsWrapper
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetDomElementWhereToPlaceChild", 
      new JSIL.MethodSignature($.Object, [$.Type]), 
      UIElement_GetDomElementWhereToPlaceChild
    );

    $.Method({Static:false, Public:false, Virtual:true }, "INTERNAL_AttachToDomEvents", 
      JSIL.MethodSignature.Void, 
      UIElement_INTERNAL_AttachToDomEvents
    );

    $.Method({Static:false, Public:false, Virtual:true }, "INTERNAL_DetachFromDomEvents", 
      JSIL.MethodSignature.Void, 
      UIElement_INTERNAL_DetachFromDomEvents
    );

    $.Method({Static:false, Public:false, Virtual:true }, "INTERNAL_UpdateDomStructureIfNecessary", 
      JSIL.MethodSignature.Void, 
      UIElement_INTERNAL_UpdateDomStructureIfNecessary
    );

    $.Method({Static:false, Public:false}, "IsChildOf", 
      new JSIL.MethodSignature($.Boolean, [$.Type]), 
      UIElement_IsChildOf
    );

    $.Method({Static:false, Public:false}, "OnGotFocus", 
      JSIL.MethodSignature.Action($.Object), 
      UIElement_OnGotFocus$02
    )
      .Parameter(0, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false, Virtual:true }, "OnGotFocus", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")), 
      UIElement_OnGotFocus$03
    );

    $.Method({Static:false, Public:false}, "OnKeyDown", 
      JSIL.MethodSignature.Action($.Object), 
      UIElement_OnKeyDown$04
    )
      .Parameter(0, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false, Virtual:true }, "OnKeyDown", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.KeyRoutedEventArgs")), 
      UIElement_OnKeyDown$05
    );

    $.Method({Static:false, Public:false}, "OnKeyUp", 
      JSIL.MethodSignature.Action($.Object), 
      UIElement_OnKeyUp$06
    )
      .Parameter(0, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false, Virtual:true }, "OnKeyUp", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.KeyRoutedEventArgs")), 
      UIElement_OnKeyUp$07
    );

    $.Method({Static:false, Public:false}, "OnLostFocus", 
      JSIL.MethodSignature.Action($.Object), 
      UIElement_OnLostFocus$08
    )
      .Parameter(0, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false, Virtual:true }, "OnLostFocus", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")), 
      UIElement_OnLostFocus$09
    );

    $.Method({Static:false, Public:false}, "OnPointerEntered", 
      JSIL.MethodSignature.Action($.Object), 
      UIElement_OnPointerEntered$0A
    )
      .Parameter(0, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false, Virtual:true }, "OnPointerEntered", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.PointerRoutedEventArgs")), 
      UIElement_OnPointerEntered$0B
    );

    $.Method({Static:false, Public:false}, "OnPointerExited", 
      JSIL.MethodSignature.Action($.Object), 
      UIElement_OnPointerExited$0C
    )
      .Parameter(0, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false, Virtual:true }, "OnPointerExited", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.PointerRoutedEventArgs")), 
      UIElement_OnPointerExited$0D
    );

    $.Method({Static:false, Public:false}, "OnPointerMoved", 
      JSIL.MethodSignature.Action($.Object), 
      UIElement_OnPointerMoved$0E
    )
      .Parameter(0, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false, Virtual:true }, "OnPointerMoved", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.PointerRoutedEventArgs")), 
      UIElement_OnPointerMoved$0F
    );

    $.Method({Static:false, Public:false}, "OnPointerPressed", 
      JSIL.MethodSignature.Action($.Object), 
      UIElement_OnPointerPressed$10
    )
      .Parameter(0, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false, Virtual:true }, "OnPointerPressed", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.PointerRoutedEventArgs")), 
      UIElement_OnPointerPressed$11
    );

    $.Method({Static:false, Public:false}, "OnPointerReleased", 
      JSIL.MethodSignature.Action($.Object), 
      UIElement_OnPointerReleased$12
    )
      .Parameter(0, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false, Virtual:true }, "OnPointerReleased", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.PointerRoutedEventArgs")), 
      UIElement_OnPointerReleased$13
    );

    $.Method({Static:false, Public:false}, "OnTapped", 
      JSIL.MethodSignature.Action($.Object), 
      UIElement_OnTapped$14
    )
      .Parameter(0, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false, Virtual:true }, "OnTapped", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.TappedRoutedEventArgs")), 
      UIElement_OnTapped$15
    );

    $.Method({Static:true , Public:false}, "Opacity_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      UIElement_Opacity_Changed
    );

    $.Method({Static:false, Public:true }, "ReleasePointerCapture", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.Pointer")), 
      UIElement_ReleasePointerCapture
    );

    $.Method({Static:false, Public:true }, "remove_GotFocus", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")), 
      UIElement_remove_GotFocus
    );

    $.Method({Static:false, Public:true }, "remove_KeyDown", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.KeyEventHandler")), 
      UIElement_remove_KeyDown
    );

    $.Method({Static:false, Public:true }, "remove_KeyUp", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.KeyEventHandler")), 
      UIElement_remove_KeyUp
    );

    $.Method({Static:false, Public:true }, "remove_LostFocus", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")), 
      UIElement_remove_LostFocus
    );

    $.Method({Static:false, Public:true }, "remove_PointerEntered", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.PointerEventHandler")), 
      UIElement_remove_PointerEntered
    );

    $.Method({Static:false, Public:true }, "remove_PointerExited", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.PointerEventHandler")), 
      UIElement_remove_PointerExited
    );

    $.Method({Static:false, Public:true }, "remove_PointerMoved", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.PointerEventHandler")), 
      UIElement_remove_PointerMoved
    );

    $.Method({Static:false, Public:true }, "remove_PointerPressed", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.PointerEventHandler")), 
      UIElement_remove_PointerPressed
    );

    $.Method({Static:false, Public:true }, "remove_PointerReleased", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.PointerEventHandler")), 
      UIElement_remove_PointerReleased
    );

    $.Method({Static:false, Public:true }, "remove_Tapped", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.TappedEventHandler")), 
      UIElement_remove_Tapped
    );

    $.Method({Static:true , Public:false}, "RenderTransform_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      UIElement_RenderTransform_Changed
    );

    $.Method({Static:false, Public:true }, "set_Effect", 
      JSIL.MethodSignature.Action($asm00.TypeRef("System.Windows.Media.Effects.Effect")), 
      UIElement_set_Effect
    );

    $.Method({Static:false, Public:false}, "set_INTERNAL_AdditionalOutsideDivForMargins", 
      JSIL.MethodSignature.Action($.Object), 
      UIElement_set_INTERNAL_AdditionalOutsideDivForMargins
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"))
      .Parameter(0, "value", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false}, "set_INTERNAL_HtmlRepresentation", 
      JSIL.MethodSignature.Action($.String), 
      UIElement_set_INTERNAL_HtmlRepresentation
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_INTERNAL_InnerDivOfTheChildWrapperOfTheParentIfAny", 
      JSIL.MethodSignature.Action($.Object), 
      UIElement_set_INTERNAL_InnerDivOfTheChildWrapperOfTheParentIfAny
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"))
      .Parameter(0, "value", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false}, "set_INTERNAL_InnerDomElement", 
      JSIL.MethodSignature.Action($.Object), 
      UIElement_set_INTERNAL_InnerDomElement
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"))
      .Parameter(0, "value", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false}, "set_INTERNAL_OptionalSpecifyDomElementConcernedByFocus", 
      JSIL.MethodSignature.Action($.Object), 
      UIElement_set_INTERNAL_OptionalSpecifyDomElementConcernedByFocus
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"))
      .Parameter(0, "value", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false}, "set_INTERNAL_OuterDomElement", 
      JSIL.MethodSignature.Action($.Object), 
      UIElement_set_INTERNAL_OuterDomElement
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"))
      .Parameter(0, "value", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false}, "set_INTERNAL_VisualChildrenInformation", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$.Type, $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_VisualChildInformation")])), 
      UIElement_set_INTERNAL_VisualChildrenInformation
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_INTERNAL_VisualParent", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DependencyObject")), 
      UIElement_set_INTERNAL_VisualParent
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Opacity", 
      JSIL.MethodSignature.Action($.Double), 
      UIElement_set_Opacity
    );

    $.Method({Static:false, Public:true }, "set_RenderTransform", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Media.Transform")), 
      UIElement_set_RenderTransform
    );

    $.Method({Static:false, Public:true }, "set_Visibility", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Visibility")), 
      UIElement_set_Visibility
    );

    $.Method({Static:false, Public:true }, "TransformToVisual", 
      new JSIL.MethodSignature($asm00.TypeRef("Windows.UI.Xaml.Media.GeneralTransform"), [$.Type]), 
      UIElement_TransformToVisual
    );

    $.Method({Static:true , Public:false}, "Visibility_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      UIElement_Visibility_Changed
    );

    $['Field']({Static:false, Public:false}, "_childrenRadioButtonDefaultName", $.String); 
    $['Field']({Static:true , Public:false}, "_random", $asm06.TypeRef("System.Random")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "EffectProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "RenderTransformProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "VisibilityProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:false, Public:false}, "_previousValueOfDisplayCssProperty", $.String); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "OpacityProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:false, Public:false}, "_pointerMovedEventManager", $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_EventManager`2", [$asm00.TypeRef("Windows.UI.Xaml.Input.PointerEventHandler"), $asm00.TypeRef("Windows.UI.Xaml.Input.PointerRoutedEventArgs")])); 
    $['Field']({Static:false, Public:false}, "_pointerPressedEventManager", $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_EventManager`2", [$asm00.TypeRef("Windows.UI.Xaml.Input.PointerEventHandler"), $asm00.TypeRef("Windows.UI.Xaml.Input.PointerRoutedEventArgs")])); 
    $['Field']({Static:false, Public:false}, "_pointerReleasedEventManager", $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_EventManager`2", [$asm00.TypeRef("Windows.UI.Xaml.Input.PointerEventHandler"), $asm00.TypeRef("Windows.UI.Xaml.Input.PointerRoutedEventArgs")])); 
    $['Field']({Static:false, Public:false}, "_pointerEnteredEventManager", $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_EventManager`2", [$asm00.TypeRef("Windows.UI.Xaml.Input.PointerEventHandler"), $asm00.TypeRef("Windows.UI.Xaml.Input.PointerRoutedEventArgs")])); 
    $['Field']({Static:false, Public:false}, "_pointerExitedEventManager", $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_EventManager`2", [$asm00.TypeRef("Windows.UI.Xaml.Input.PointerEventHandler"), $asm00.TypeRef("Windows.UI.Xaml.Input.PointerRoutedEventArgs")])); 
    $['Field']({Static:false, Public:false}, "_tappedEventManager", $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_EventManager`2", [$asm00.TypeRef("Windows.UI.Xaml.Input.TappedEventHandler"), $asm00.TypeRef("Windows.UI.Xaml.Input.TappedRoutedEventArgs")])); 
    $['Field']({Static:false, Public:false}, "_keyDownEventManager", $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_EventManager`2", [$asm00.TypeRef("Windows.UI.Xaml.Input.KeyEventHandler"), $asm00.TypeRef("Windows.UI.Xaml.Input.KeyRoutedEventArgs")])); 
    $['Field']({Static:false, Public:false}, "_keyUpEventManager", $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_EventManager`2", [$asm00.TypeRef("Windows.UI.Xaml.Input.KeyEventHandler"), $asm00.TypeRef("Windows.UI.Xaml.Input.KeyRoutedEventArgs")])); 
    $['Field']({Static:false, Public:false}, "_gotFocusEventManager", $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_EventManager`2", [$asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler"), $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")])); 
    $['Field']({Static:false, Public:false}, "_lostFocusEventManager", $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_EventManager`2", [$asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler"), $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")])); 
    $['Field']({Static:false, Public:false}, "UIElement$INTERNAL_VisualParent$value", $asm00.TypeRef("Windows.UI.Xaml.DependencyObject"))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "UIElement$INTERNAL_OuterDomElement$value", $.Object)
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"))
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute")); 
    $['Field']({Static:false, Public:false}, "UIElement$INTERNAL_InnerDomElement$value", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "UIElement$INTERNAL_AdditionalOutsideDivForMargins$value", $.Object)
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"))
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute")); 
    $['Field']({Static:false, Public:false}, "UIElement$INTERNAL_InnerDivOfTheChildWrapperOfTheParentIfAny$value", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "UIElement$INTERNAL_OptionalSpecifyDomElementConcernedByFocus$value", $.Object)
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"))
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute")); 
    $['Field']({Static:false, Public:false}, "UIElement$INTERNAL_HtmlRepresentation$value", $.String)
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "UIElement$INTERNAL_VisualChildrenInformation$value", $asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$.Type, $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_VisualChildInformation")]))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    function UIElement__cctor () {
      $thisType.EffectProperty = $T00()['Register']("Effect", $T01().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['Effect_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Effect_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.RenderTransformProperty = $T00()['Register']("RenderTransform", $T04().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['RenderTransform_Changed'], function () { return JSIL.GetMethodInfo($thisType, "RenderTransform_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.VisibilityProperty = $T00()['Register']("Visibility", $T05().__Type__, $thisType.__Type__, $S00().Construct($T05().Visible, $T03()['New']($thisType, $thisType['Visibility_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Visibility_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.OpacityProperty = $T00()['Register']("Opacity", $T06().__Type__, $thisType.__Type__, $S00().Construct(1, $T03()['New']($thisType, $thisType['Opacity_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Opacity_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      UIElement__cctor
    );

    $.Property({Static:false, Public:false}, "INTERNAL_VisualParent", $asm00.TypeRef("Windows.UI.Xaml.DependencyObject"));

    $.Property({Static:false, Public:false}, "INTERNAL_OuterDomElement", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"));

    $.Property({Static:false, Public:false}, "INTERNAL_InnerDomElement", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"));

    $.Property({Static:false, Public:false}, "INTERNAL_AdditionalOutsideDivForMargins", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"));

    $.Property({Static:false, Public:false}, "INTERNAL_InnerDivOfTheChildWrapperOfTheParentIfAny", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"));

    $.Property({Static:false, Public:false}, "INTERNAL_OptionalSpecifyDomElementConcernedByFocus", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"));

    $.Property({Static:false, Public:false}, "INTERNAL_HtmlRepresentation", $.String);

    $.Property({Static:false, Public:false}, "INTERNAL_VisualChildrenInformation", $asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$.Type, $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_VisualChildInformation")]));

    $.Property({Static:false, Public:false}, "INTERNAL_ChildrenRadioButtonDefaultName", $.String);

    $.Property({Static:false, Public:true }, "Effect", $asm00.TypeRef("System.Windows.Media.Effects.Effect"));

    $.Property({Static:false, Public:true }, "RenderTransform", $asm00.TypeRef("Windows.UI.Xaml.Media.Transform"));

    $.Property({Static:false, Public:true }, "Visibility", $asm00.TypeRef("Windows.UI.Xaml.Visibility"));

    $.Property({Static:false, Public:true }, "Opacity", $.Double);

    $.Event({Static:false, Public:true }, "PointerMoved", $asm00.TypeRef("Windows.UI.Xaml.Input.PointerEventHandler"));

    $.Event({Static:false, Public:true }, "PointerPressed", $asm00.TypeRef("Windows.UI.Xaml.Input.PointerEventHandler"));

    $.Event({Static:false, Public:true }, "PointerReleased", $asm00.TypeRef("Windows.UI.Xaml.Input.PointerEventHandler"));

    $.Event({Static:false, Public:true }, "PointerEntered", $asm00.TypeRef("Windows.UI.Xaml.Input.PointerEventHandler"));

    $.Event({Static:false, Public:true }, "PointerExited", $asm00.TypeRef("Windows.UI.Xaml.Input.PointerEventHandler"));

    $.Event({Static:false, Public:true }, "Tapped", $asm00.TypeRef("Windows.UI.Xaml.Input.TappedEventHandler"));

    $.Event({Static:false, Public:true }, "KeyDown", $asm00.TypeRef("Windows.UI.Xaml.Input.KeyEventHandler"));

    $.Event({Static:false, Public:true }, "KeyUp", $asm00.TypeRef("Windows.UI.Xaml.Input.KeyEventHandler"));

    $.Event({Static:false, Public:true }, "GotFocus", $asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler"));

    $.Event({Static:false, Public:true }, "LostFocus", $asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.FrameworkElement */ 

(function FrameworkElement$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.System.Windows.Input.Cursor)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.HorizontalAlignment)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Windows.UI.Xaml.Thickness)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Windows.UI.Xaml.ResourceDictionary)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Windows.UI.Xaml.VerticalAlignment)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Windows.UI.Xaml.Style)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventHandler)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm06.System.Delegate)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm06.System.Threading.Interlocked)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm06.System.ArgumentNullException)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm00.Windows.UI.Xaml.Markup.INameScope)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm00.Windows.UI.Xaml.DependencyProperty, $asm00.Windows.UI.Xaml.Setter))) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm00.Windows.UI.Xaml.Setter))) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm06.System.Collections.ObjectModel.Collection$b1.Of($asm00.Windows.UI.Xaml.Setter))) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm06.System.Collections.IEnumerator)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm00.Windows.UI.Xaml.Setter)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm06.System.IDisposable)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm00.Windows.UI.Xaml.Visibility)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Canvas)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.StackPanel)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Orientation)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ScrollViewer)) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm06.System.NotSupportedException)) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.TextBox)) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.CheckBox)) ();
  };
  var $T25 = function () {
    return ($T25 = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventArgs)) ();
  };
  var $T26 = function () {
    return ($T26 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2_ValueCollection_Enumerator.Of($asm00.Windows.UI.Xaml.DependencyProperty, $asm00.Windows.UI.Xaml.Setter))) ();
  };
  var $T27 = function () {
    return ($T27 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2_ValueCollection.Of($asm00.Windows.UI.Xaml.DependencyProperty, $asm00.Windows.UI.Xaml.Setter))) ();
  };
  var $T28 = function () {
    return ($T28 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_PropertyStorage)) ();
  };
  var $T29 = function () {
    return ($T29 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_PropertyStore)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), null))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.ArgumentNullException"), [$asm06.TypeRef("System.String")]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"), $asm00.TypeRef("Windows.UI.Xaml.Setter")]), null))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.NotSupportedException"), null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm00.Windows.UI.Xaml.Markup.INameScope.FindName)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm06.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm00.Windows.UI.Xaml.Setter).get_Current)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm06.System.IDisposable.Dispose)) ();
  };

  function FrameworkElement__ctor () {
    $T0D().prototype['_ctor'].call(this);
    var value = new ($T0A())();
    this['SetValue']($thisType.ResourcesProperty, value);
  };

  function FrameworkElement_add_Loaded (value) {
    var routedEventHandler = this.Loaded;

    do {
      var routedEventHandler2 = routedEventHandler;
      var value2 = $T10()['Combine'](routedEventHandler2, value);
      routedEventHandler = $T11()['CompareExchange$b1']($T0F())(/* ref */ new JSIL['MemberReference'](this, "Loaded"), value2, routedEventHandler2);
    } while (routedEventHandler !== routedEventHandler2);
  };

  function FrameworkElement_add_Unloaded (value) {
    var routedEventHandler = this.Unloaded;

    do {
      var routedEventHandler2 = routedEventHandler;
      var value2 = $T10()['Combine'](routedEventHandler2, value);
      routedEventHandler = $T11()['CompareExchange$b1']($T0F())(/* ref */ new JSIL['MemberReference'](this, "Unloaded"), value2, routedEventHandler2);
    } while (routedEventHandler !== routedEventHandler2);
  };

  function FrameworkElement_CreateDomElement (parentRef, /* ref */ domElementWhereToPlaceChildren) {
    var obj2 = new JSIL.BoxedVariable(null);
    var obj4 = new JSIL.BoxedVariable(null);
    var obj = $T12()['CreateDomElementAppendItAndGetStyle']("div", parentRef, this, /* ref */ obj2);
    var obj3 = $T12()['CreateDomElementAppendItAndGetStyle']("div", obj2.get(), this, /* ref */ obj4);
    obj3.width = "100%";
    obj3.height = "100%";
    domElementWhereToPlaceChildren.set(obj4.get());
    return obj2.get();
  };

  function FrameworkElement_Cursor_Changed (d, e) {
    var frameworkElement = $thisType.$Cast(d);
    var cursor = $T01().$Cast(e['get_NewValue']());
    if ($T14()['IsElementInVisualTree'](frameworkElement)) {
      var iNTERNAL_OuterDomElement = frameworkElement.UIElement$INTERNAL_OuterDomElement$value;
      var obj = $T12()['GetDomElementStyleForModification'](iNTERNAL_OuterDomElement);
      if (cursor === null) {
        obj.cursor = "inherit";
      } else {
        obj.cursor = cursor._cursorHtmlString;
      }
    }
  };

  function FrameworkElement_FindName (name) {
    if (name === null) {
      throw $S03().Construct("name");
    }
    if ($T16().$Is(this)) {
      var result = $IM00().Call($T16().$Cast(this), null, name);
    } else {
      if (this.UIElement$INTERNAL_VisualParent$value !== null) {
        if ($thisType.$Is(this.UIElement$INTERNAL_VisualParent$value)) {
          result = $thisType.prototype['FindName'].call($thisType.$Cast(this.UIElement$INTERNAL_VisualParent$value), name);
          return result;
        }
      }
      result = null;
    }
    return result;
  };

  function FrameworkElement_GenerateDictionaryOfSettersFromStyle (style) {
    var dictionary = $S04().Construct();

    for (var style2 = style; style2 !== null; style2 = style2['get_BasedOn']()) {
      if (style2['get_Setters']() !== null) {
        var enumerator = (style2['get_Setters']())['GetEnumerator']();
        try {

          while ($IM01().Call(enumerator, null)) {
            var current = $IM02().Call(enumerator, null);
            if (current['get_Property']() !== null) {
              if (!dictionary['ContainsKey'](current['get_Property']())) {
                dictionary['Add'](current['get_Property'](), current);
              }
            }
          }
        } finally {
          if (enumerator !== null) {
            $IM03().Call(enumerator, null);
          }
        }
      }
    }
    return dictionary;
  };

  function FrameworkElement_get_ActualHeight () {
    if ($T14()['IsElementInVisualTree'](this)) {
      if (true) {
        var result = $T04().$Cast(this.UIElement$INTERNAL_OuterDomElement$value.offsetHeight);
      } else {
        JSIL.IgnoredMember("Flush()").LValue;
        result = $T04().$Cast($T12()['CastToJsValue_SimulatorOnly']($T12()['GetDomElementAttribute'](this.UIElement$INTERNAL_OuterDomElement$value, "offsetHeight")));
      }
    } else {
      result = NaN;
    }
    return result;
  };

  function FrameworkElement_get_ActualWidth () {
    if ($T14()['IsElementInVisualTree'](this)) {
      if (true) {
        var result = $T04().$Cast(this.UIElement$INTERNAL_OuterDomElement$value.offsetWidth);
      } else {
        JSIL.IgnoredMember("Flush()").LValue;
        result = $T04().$Cast($T12()['CastToJsValue_SimulatorOnly']($T12()['GetDomElementAttribute'](this.UIElement$INTERNAL_OuterDomElement$value, "offsetWidth")));
      }
    } else {
      result = NaN;
    }
    return result;
  };

  function FrameworkElement_get_Cursor () {
    return $T01().$Cast(this['GetValue']($thisType.CursorProperty));
  };

  function FrameworkElement_get_DataContext () {
    return this['GetValue']($thisType.DataContextProperty);
  };

  function FrameworkElement_get_Height () {
    return $T04().$Cast(this['GetValue']($thisType.HeightProperty));
  };

  function FrameworkElement_get_HorizontalAlignment () {
    return $T08().$Cast(this['GetValue']($thisType.HorizontalAlignmentProperty));
  };

  function FrameworkElement_get_IsEnabled () {
    return $T05().$Cast(this['GetValue']($thisType.IsEnabledProperty));
  };

  function FrameworkElement_get_IsHitTestVisible () {
    return $T05().$Cast(this['GetValue']($thisType.IsHitTestVisibleProperty));
  };

  function FrameworkElement_get_Margin () {
    return $T09().$Cast(this['GetValue']($thisType.MarginProperty));
  };

  function FrameworkElement_get_Name () {
    return $T06().$Cast(this['GetValue']($thisType.NameProperty));
  };

  function FrameworkElement_get_Resources () {
    return $T0A().$Cast(this['GetValue']($thisType.ResourcesProperty));
  };

  function FrameworkElement_get_Style () {
    return $T0C().$Cast(this['GetValue']($thisType.StyleProperty));
  };

  function FrameworkElement_get_Tag () {
    return this['GetValue']($thisType.TagProperty);
  };

  function FrameworkElement_get_VerticalAlignment () {
    return $T0B().$Cast(this['GetValue']($thisType.VerticalAlignmentProperty));
  };

  function FrameworkElement_get_Width () {
    return $T04().$Cast(this['GetValue']($thisType.WidthProperty));
  };

  function FrameworkElement_Height_Changed (d, e) {
    var frameworkElement = $thisType.$Cast(d);
    $thisType['INTERNAL_ApplyVerticalAlignmentAndHeight'](frameworkElement, frameworkElement['get_VerticalAlignment']());
  };

  function FrameworkElement_HorizontalAlignment_Changed (d, e) {
    var frameworkElement = $thisType.$Cast(d);
    var newHorizontalAlignment = $T08().$Cast(e['get_NewValue']());
    $thisType['INTERNAL_ApplyHorizontalAlignmentAndWidth'](frameworkElement, newHorizontalAlignment);
  };

  function FrameworkElement_INTERNAL_ApplyHorizontalAlignmentAndWidth (frameworkElement, newHorizontalAlignment) {
    if (!(!$T14()['IsElementInVisualTree'](frameworkElement) || 
        (frameworkElement['get_Visibility']() === $T1D().Collapsed) || $T1E().$Is(frameworkElement.UIElement$INTERNAL_VisualParent$value))) {
      var flag = ($T1F().$As(frameworkElement.UIElement$INTERNAL_VisualParent$value) !== null) && 
      (($T1F().$Cast(frameworkElement.UIElement$INTERNAL_VisualParent$value))['get_Orientation']() === $T20().Horizontal);
      var frameworkElementOuterStyleForModification = $T12()['GetFrameworkElementOuterStyleForModification'](frameworkElement);
      var obj = $T12()['GetFirstChildDomElement'](frameworkElement.UIElement$INTERNAL_OuterDomElement$value);
      if (!$T12()['IsNotUndefinedOrNull'](obj)) {
        var arg_1EF_0 = null;
      } else {
        arg_1EF_0 = $T12()['GetDomElementStyleForModification'](obj);
      }
      var obj2 = arg_1EF_0;
      var obj3 = JSIL.Coalesce(frameworkElement.UIElement$INTERNAL_InnerDivOfTheChildWrapperOfTheParentIfAny$value, frameworkElement.UIElement$INTERNAL_AdditionalOutsideDivForMargins$value);
      var obj4 = $T12()['GetDomElementStyleForModification'](obj3);
      if (!((newHorizontalAlignment !== $T08().Stretch) || (isNaN(frameworkElement['get_Width']())))) {
        newHorizontalAlignment = $T08().Center;
      }
      switch (newHorizontalAlignment['valueOf']()) {
        case 0: 
          if (!flag) {
            obj4.width = "100%";
            frameworkElementOuterStyleForModification.marginLeft = "0px";
            frameworkElementOuterStyleForModification.marginRight = "auto";
            if (!$T21().$Is(frameworkElement)) {
              frameworkElementOuterStyleForModification.display = "table";
              if ($T12()['IsNotUndefinedOrNull'](obj2)) {
                obj2.display = "table-cell";
              }
            }
          }
          frameworkElementOuterStyleForModification.width = (
            !(isNaN(frameworkElement['get_Width']()))
               ? JSIL.ConcatString((frameworkElement['get_Width']()).toString(), "px")
               : "auto")
          ;
          break;

        case 1: 
          if (!flag) {
            obj4.width = "auto";
            frameworkElementOuterStyleForModification.marginLeft = "auto";
            frameworkElementOuterStyleForModification.marginRight = "auto";
            if (!$T21().$Is(frameworkElement)) {
              frameworkElementOuterStyleForModification.display = "table";
              if ($T12()['IsNotUndefinedOrNull'](obj2)) {
                obj2.display = "table-cell";
              }
            }
          }
          frameworkElementOuterStyleForModification.width = (
            !(isNaN(frameworkElement['get_Width']()))
               ? JSIL.ConcatString((frameworkElement['get_Width']()).toString(), "px")
               : "auto")
          ;
          break;

        case 2: 
          if (!flag) {
            obj4.width = "auto";
            frameworkElementOuterStyleForModification.marginLeft = "auto";
            frameworkElementOuterStyleForModification.marginRight = "0px";
            if (!$T21().$Is(frameworkElement)) {
              frameworkElementOuterStyleForModification.display = "table";
              if ($T12()['IsNotUndefinedOrNull'](obj2)) {
                obj2.display = "table-cell";
              }
            }
          }
          frameworkElementOuterStyleForModification.width = (
            !(isNaN(frameworkElement['get_Width']()))
               ? JSIL.ConcatString((frameworkElement['get_Width']()).toString(), "px")
               : "auto")
          ;
          break;

        case 3: 
          if (!flag) {
            obj4.width = "100%";
            frameworkElementOuterStyleForModification.marginLeft = "0px";
            frameworkElementOuterStyleForModification.marginRight = "0px";
            frameworkElementOuterStyleForModification.display = "block";
            frameworkElementOuterStyleForModification.width = "100%";
          }
          break;

      }
      if (!$T21().$Is(frameworkElement)) {
        if (!((isNaN(frameworkElement['get_Width']())) || $T1E().$Is(frameworkElement))) {
          frameworkElementOuterStyleForModification.overflowX = "hidden";
        } else {
          frameworkElementOuterStyleForModification.overflowX = "";
        }
      }
      frameworkElement['OnAfterApplyHorizontalAlignmentAndWidth']();
    }
  };

  function FrameworkElement_INTERNAL_ApplyVerticalAlignmentAndHeight (frameworkElement, newVerticalAlignment) {
    if (!(!$T14()['IsElementInVisualTree'](frameworkElement) || 
        (frameworkElement['get_Visibility']() === $T1D().Collapsed) || $T1E().$Is(frameworkElement.UIElement$INTERNAL_VisualParent$value))) {
      var flag = ($T1F().$As(frameworkElement.UIElement$INTERNAL_VisualParent$value) !== null) && 
      (($T1F().$Cast(frameworkElement.UIElement$INTERNAL_VisualParent$value))['get_Orientation']() === $T20().Vertical);
      var frameworkElementOuterStyleForModification = $T12()['GetFrameworkElementOuterStyleForModification'](frameworkElement);
      var obj = JSIL.Coalesce(frameworkElement.UIElement$INTERNAL_InnerDivOfTheChildWrapperOfTheParentIfAny$value, frameworkElement.UIElement$INTERNAL_AdditionalOutsideDivForMargins$value);
      var obj2 = $T12()['GetDomElementStyleForModification'](obj);
      var obj3 = $T12()['GetParentDomElement'](obj);
      var obj4 = $T12()['GetDomElementStyleForModification'](obj3);
      if (!((newVerticalAlignment !== $T0B().Stretch) || (isNaN(frameworkElement['get_Height']())))) {
        newVerticalAlignment = $T0B().Center;
      }
      switch (newVerticalAlignment['valueOf']()) {
        case 0: 
          if (!flag) {
            obj2.verticalAlign = "top";
          }
          frameworkElementOuterStyleForModification.height = (
            !(isNaN(frameworkElement['get_Height']()))
               ? JSIL.ConcatString((frameworkElement['get_Height']()).toString(), "px")
               : "auto")
          ;
          break;

        case 1: 
          if (!flag) {
            obj4.display = "table";
            obj2.display = "table-cell";
            obj2.verticalAlign = "middle";
          }
          frameworkElementOuterStyleForModification.height = (
            !(isNaN(frameworkElement['get_Height']()))
               ? JSIL.ConcatString((frameworkElement['get_Height']()).toString(), "px")
               : "auto")
          ;
          break;

        case 2: 
          if (!flag) {
            obj4.display = "table";
            obj2.display = "table-cell";
            obj2.verticalAlign = "bottom";
          }
          frameworkElementOuterStyleForModification.height = (
            !(isNaN(frameworkElement['get_Height']()))
               ? JSIL.ConcatString((frameworkElement['get_Height']()).toString(), "px")
               : "auto")
          ;
          break;

        case 3: 
          if (!flag) {
            obj2.verticalAlign = "middle";
            frameworkElementOuterStyleForModification.height = "100%";
          }
          break;

        default: 
          throw $S05().Construct();

      }
      if (!(($T21().$As(frameworkElement) !== null) || $T23().$Is(frameworkElement))) {
        if (!((isNaN(frameworkElement['get_Height']())) || $T1E().$Is(frameworkElement))) {
          frameworkElementOuterStyleForModification.overflowY = "hidden";
        } else {
          frameworkElementOuterStyleForModification.overflowY = "";
        }
      }
      frameworkElement['OnAfterApplyVerticalAlignmentAndWidth']();
    }
  };

  function FrameworkElement_INTERNAL_InitializeOuterDomElementWidthAndHeight (element, outerDomElement) {
    var obj = $T12()['GetDomElementStyleForModification'](outerDomElement);
    if (!(isNaN(element['get_Height']()))) {
      obj.height = (JSIL.ConcatString(element['get_Height'](), "px"));
    } else if (!((element['get_VerticalAlignment']() !== $T0B().Stretch) || 
        ($T1E().$As(element.UIElement$INTERNAL_VisualParent$value) !== null) || $T24().$Is(element))) {
      obj.height = "100%";
    } else {
      obj.height = "auto";
    }
    if (!(isNaN(element['get_Width']()))) {
      obj.width = (JSIL.ConcatString(element['get_Width'](), "px"));
    } else if (!((element['get_HorizontalAlignment']() !== $T08().Stretch) || 
        ($T1E().$As(element.UIElement$INTERNAL_VisualParent$value) !== null) || $T24().$Is(element))) {
      obj.width = "100%";
    } else {
      obj.width = "auto";
    }
  };

  function FrameworkElement_INTERNAL_RaiseLoadedEvent () {
    if (this.Loaded !== null) {
      this.Loaded(this, new ($T25())());
    }
  };

  function FrameworkElement_INTERNAL_RaiseUnloadedEvent () {
    if (this.Unloaded !== null) {
      this.Unloaded(this, new ($T25())());
    }
  };

  function FrameworkElement_INTERNAL_UpdateCssPointerEventsPropertyBasedOnIsHitTestVisibleAndIsEnabled (element, isHitTestVisible, isEnabled) {
    if ($T14()['IsElementInVisualTree'](element)) {
      var obj = $T12()['GetDomElementStyleForModification'](element.UIElement$INTERNAL_OuterDomElement$value);
      if (!(!isHitTestVisible || !isEnabled)) {
        obj.pointerEvents = "auto";
      } else {
        obj.pointerEvents = "none";
      }
    }
  };

  function FrameworkElement_IsEnabled_Changed (d, e) {
    var frameworkElement = $thisType.$Cast(d);
    $thisType['INTERNAL_UpdateCssPointerEventsPropertyBasedOnIsHitTestVisibleAndIsEnabled'](
      frameworkElement, 
      $T05().$Cast(e['get_NewValue']()), 
      frameworkElement['get_IsEnabled']()
    );
    frameworkElement['ManageIsEnabled'](e);
  };

  function FrameworkElement_IsHitTestVisible_Changed (d, e) {
    var frameworkElement = $thisType.$Cast(d);
    $thisType['INTERNAL_UpdateCssPointerEventsPropertyBasedOnIsHitTestVisibleAndIsEnabled'](
      frameworkElement, 
      $T05().$Cast(e['get_NewValue']()), 
      frameworkElement['get_IsEnabled']()
    );
  };

  function FrameworkElement_ManageIsEnabled (e) {
    if ($T14()['IsElementInVisualTree'](this)) {
      if ($T05().$Cast(e['get_NewValue']())) {
        $T12()['RemoveDomElementAttribute'](this.UIElement$INTERNAL_OuterDomElement$value, "disabled", true);
      } else {
        $T12()['SetDomElementAttribute'](this.UIElement$INTERNAL_OuterDomElement$value, "disabled", true, true);
      }
    }
  };

  function FrameworkElement_Margin_Changed (d, e) {
    var frameworkElement = $thisType.$Cast(d);
    if (!$T1E().$Is(frameworkElement.UIElement$INTERNAL_VisualParent$value)) {
      var thickness = $T09().$Cast(e['get_NewValue']())['MemberwiseClone']();
      if ($T14()['IsElementInVisualTree'](frameworkElement)) {
        var iNTERNAL_AdditionalOutsideDivForMargins = frameworkElement.UIElement$INTERNAL_AdditionalOutsideDivForMargins$value;
        var obj = $T12()['GetDomElementStyleForModification'](iNTERNAL_AdditionalOutsideDivForMargins);
        obj.paddingLeft = (JSIL.ConcatString(thickness['get_Left'](), "px"));
        obj.paddingTop = (JSIL.ConcatString(thickness['get_Top'](), "px"));
        obj.paddingRight = (JSIL.ConcatString(thickness['get_Right'](), "px"));
        obj.paddingBottom = (JSIL.ConcatString(thickness['get_Bottom'](), "px"));
      }
    }
  };

  function FrameworkElement_OnAfterApplyHorizontalAlignmentAndWidth () {
  };

  function FrameworkElement_OnAfterApplyVerticalAlignmentAndWidth () {
  };

  function FrameworkElement_RecursivelyRegisterToStyleChangedEvents () {

    for (var style = this['get_Style'](); style !== null; style = style['get_BasedOn']()) {
      style['remove_SetterValueChanged']($T0F()['New'](this, $thisType.prototype['StyleSetterValueChanged'], function () { return JSIL.GetMethodInfo($thisType, "StyleSetterValueChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm00.Windows.UI.Xaml.RoutedEventArgs]), false); }));
      style['add_SetterValueChanged']($T0F()['New'](this, $thisType.prototype['StyleSetterValueChanged'], function () { return JSIL.GetMethodInfo($thisType, "StyleSetterValueChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm00.Windows.UI.Xaml.RoutedEventArgs]), false); }));
    }
  };

  function FrameworkElement_RecursivelyUnregisterFromStyleChangedEvents () {

    for (var style = this['get_Style'](); style !== null; style = style['get_BasedOn']()) {
      style['remove_SetterValueChanged']($T0F()['New'](this, $thisType.prototype['StyleSetterValueChanged'], function () { return JSIL.GetMethodInfo($thisType, "StyleSetterValueChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm00.Windows.UI.Xaml.RoutedEventArgs]), false); }));
    }
  };

  function FrameworkElement_remove_Loaded (value) {
    var routedEventHandler = this.Loaded;

    do {
      var routedEventHandler2 = routedEventHandler;
      var value2 = $T10()['Remove'](routedEventHandler2, value);
      routedEventHandler = $T11()['CompareExchange$b1']($T0F())(/* ref */ new JSIL['MemberReference'](this, "Loaded"), value2, routedEventHandler2);
    } while (routedEventHandler !== routedEventHandler2);
  };

  function FrameworkElement_remove_Unloaded (value) {
    var routedEventHandler = this.Unloaded;

    do {
      var routedEventHandler2 = routedEventHandler;
      var value2 = $T10()['Remove'](routedEventHandler2, value);
      routedEventHandler = $T11()['CompareExchange$b1']($T0F())(/* ref */ new JSIL['MemberReference'](this, "Unloaded"), value2, routedEventHandler2);
    } while (routedEventHandler !== routedEventHandler2);
  };

  function FrameworkElement_set_Cursor (value) {
    this['SetValue']($thisType.CursorProperty, value);
  };

  function FrameworkElement_set_DataContext (value) {
    this['SetValue']($thisType.DataContextProperty, value);
  };

  function FrameworkElement_set_Height (value) {
    this['SetValue']($thisType.HeightProperty, value);
  };

  function FrameworkElement_set_HorizontalAlignment (value) {
    this['SetValue']($thisType.HorizontalAlignmentProperty, value);
  };

  function FrameworkElement_set_IsEnabled (value) {
    this['SetValue']($thisType.IsEnabledProperty, value);
  };

  function FrameworkElement_set_IsHitTestVisible (value) {
    this['SetValue']($thisType.IsHitTestVisibleProperty, value);
  };

  function FrameworkElement_set_Margin (value) {
    this['SetValue']($thisType.MarginProperty, value);
  };

  function FrameworkElement_set_Name (value) {
    this['SetValue']($thisType.NameProperty, value);
  };

  function FrameworkElement_set_Resources (value) {
    this['SetValue']($thisType.ResourcesProperty, value);
  };

  function FrameworkElement_set_Style (value) {
    this['SetValue']($thisType.StyleProperty, value);
  };

  function FrameworkElement_set_Tag (value) {
    this['SetValue']($thisType.TagProperty, value);
  };

  function FrameworkElement_set_VerticalAlignment (value) {
    this['SetValue']($thisType.VerticalAlignmentProperty, value);
  };

  function FrameworkElement_set_Width (value) {
    this['SetValue']($thisType.WidthProperty, value);
  };

  function FrameworkElement_Style_Changed (d, e) {
    var frameworkElement = $thisType.$Cast(d);
    var style = $T0C().$Cast(e['get_NewValue']());
    var style2 = $T0C().$Cast(e['get_OldValue']());
    var dictionary = $thisType['GenerateDictionaryOfSettersFromStyle'](style2);
    var dictionary2 = $thisType['GenerateDictionaryOfSettersFromStyle'](style);
    var enumerator = (dictionary['get_Values']())['GetEnumerator']();

    while ($T26().prototype['MoveNext'].call(enumerator)) {
      var current = $T26().prototype['get_Current'].call(enumerator);
      if (current['get_Property']() !== null) {
        if (!dictionary2['ContainsKey'](current['get_Property']())) {
          var storage = $T29()['GetStorage'](d, current['get_Property'](), false);
          $T29()['ResetLocalStyleValue'](storage);
        }
        frameworkElement['RecursivelyUnregisterFromStyleChangedEvents']();
      }
    }
    enumerator = (dictionary2['get_Values']())['GetEnumerator']();

    while ($T26().prototype['MoveNext'].call(enumerator)) {
      var current2 = $T26().prototype['get_Current'].call(enumerator);
      if (current2['get_Property']() !== null) {
        if (!(dictionary['ContainsKey'](current2['get_Property']()) && (dictionary['get_Item'](current2['get_Property']()) === current2['get_Value']()))) {
          storage = $T29()['GetStorage'](frameworkElement, current2['get_Property'](), true);
          $T29()['SetLocalStyleValue'](storage, current2['get_Value']());
        }
        frameworkElement['RecursivelyRegisterToStyleChangedEvents']();
      }
    }
  };

  function FrameworkElement_StyleSetterValueChanged (sender, e) {
    var setter = $T1B().$Cast(sender);
    if (setter['get_Property']() !== null) {
      var storage = $T29()['GetStorage'](this, setter['get_Property'](), true);
      $T29()['SetLocalStyleValue'](storage, (this['get_Style']())['GetActiveValue'](setter['get_Property']()));
    }
  };

  function FrameworkElement_VerticalAlignment_Changed (d, e) {
    var frameworkElement = $thisType.$Cast(d);
    var newVerticalAlignment = $T0B().$Cast(e['get_NewValue']());
    $thisType['INTERNAL_ApplyVerticalAlignmentAndHeight'](frameworkElement, newVerticalAlignment);
  };

  function FrameworkElement_Width_Changed (d, e) {
    var frameworkElement = $thisType.$Cast(d);
    $thisType['INTERNAL_ApplyHorizontalAlignmentAndWidth'](frameworkElement, frameworkElement['get_HorizontalAlignment']());
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.UIElement"), 
      Name: "Windows.UI.Xaml.FrameworkElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      FrameworkElement__ctor
    );

    $.Method({Static:false, Public:true }, "add_Loaded", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")), 
      FrameworkElement_add_Loaded
    );

    $.Method({Static:false, Public:true }, "add_Unloaded", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")), 
      FrameworkElement_add_Unloaded
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CreateDomElement", 
      new JSIL.MethodSignature($.Object, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]), 
      FrameworkElement_CreateDomElement
    );

    $.Method({Static:true , Public:false}, "Cursor_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      FrameworkElement_Cursor_Changed
    );

    $.Method({Static:false, Public:true }, "FindName", 
      new JSIL.MethodSignature($.Object, [$.String]), 
      FrameworkElement_FindName
    );

    $.Method({Static:true , Public:false}, "GenerateDictionaryOfSettersFromStyle", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"), $asm00.TypeRef("Windows.UI.Xaml.Setter")]), [$asm00.TypeRef("Windows.UI.Xaml.Style")]), 
      FrameworkElement_GenerateDictionaryOfSettersFromStyle
    );

    $.Method({Static:false, Public:true }, "get_ActualHeight", 
      JSIL.MethodSignature.Return($.Double), 
      FrameworkElement_get_ActualHeight
    );

    $.Method({Static:false, Public:true }, "get_ActualWidth", 
      JSIL.MethodSignature.Return($.Double), 
      FrameworkElement_get_ActualWidth
    );

    $.Method({Static:false, Public:true }, "get_Cursor", 
      JSIL.MethodSignature.Return($asm00.TypeRef("System.Windows.Input.Cursor")), 
      FrameworkElement_get_Cursor
    );

    $.Method({Static:false, Public:true }, "get_DataContext", 
      JSIL.MethodSignature.Return($.Object), 
      FrameworkElement_get_DataContext
    );

    $.Method({Static:false, Public:true }, "get_Height", 
      JSIL.MethodSignature.Return($.Double), 
      FrameworkElement_get_Height
    );

    $.Method({Static:false, Public:true }, "get_HorizontalAlignment", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.HorizontalAlignment")), 
      FrameworkElement_get_HorizontalAlignment
    );

    $.Method({Static:false, Public:true }, "get_IsEnabled", 
      JSIL.MethodSignature.Return($.Boolean), 
      FrameworkElement_get_IsEnabled
    );

    $.Method({Static:false, Public:true }, "get_IsHitTestVisible", 
      JSIL.MethodSignature.Return($.Boolean), 
      FrameworkElement_get_IsHitTestVisible
    );

    $.Method({Static:false, Public:true }, "get_Margin", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Thickness")), 
      FrameworkElement_get_Margin
    );

    $.Method({Static:false, Public:true }, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      FrameworkElement_get_Name
    );

    $.Method({Static:false, Public:true }, "get_Resources", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.ResourceDictionary")), 
      FrameworkElement_get_Resources
    );

    $.Method({Static:false, Public:true }, "get_Style", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Style")), 
      FrameworkElement_get_Style
    );

    $.Method({Static:false, Public:true }, "get_Tag", 
      JSIL.MethodSignature.Return($.Object), 
      FrameworkElement_get_Tag
    );

    $.Method({Static:false, Public:true }, "get_VerticalAlignment", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.VerticalAlignment")), 
      FrameworkElement_get_VerticalAlignment
    );

    $.Method({Static:false, Public:true }, "get_Width", 
      JSIL.MethodSignature.Return($.Double), 
      FrameworkElement_get_Width
    );

    $.Method({Static:true , Public:false}, "Height_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      FrameworkElement_Height_Changed
    );

    $.Method({Static:true , Public:false}, "HorizontalAlignment_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      FrameworkElement_HorizontalAlignment_Changed
    );

    $.Method({Static:true , Public:false}, "INTERNAL_ApplyHorizontalAlignmentAndWidth", 
      new JSIL.MethodSignature(null, [$.Type, $asm00.TypeRef("Windows.UI.Xaml.HorizontalAlignment")]), 
      FrameworkElement_INTERNAL_ApplyHorizontalAlignmentAndWidth
    );

    $.Method({Static:true , Public:false}, "INTERNAL_ApplyVerticalAlignmentAndHeight", 
      new JSIL.MethodSignature(null, [$.Type, $asm00.TypeRef("Windows.UI.Xaml.VerticalAlignment")]), 
      FrameworkElement_INTERNAL_ApplyVerticalAlignmentAndHeight
    );

    $.Method({Static:true , Public:false}, "INTERNAL_InitializeOuterDomElementWidthAndHeight", 
      new JSIL.MethodSignature(null, [$.Type, $.Object]), 
      FrameworkElement_INTERNAL_InitializeOuterDomElementWidthAndHeight
    )
      .Parameter(1, "outerDomElement", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false}, "INTERNAL_RaiseLoadedEvent", 
      JSIL.MethodSignature.Void, 
      FrameworkElement_INTERNAL_RaiseLoadedEvent
    );

    $.Method({Static:false, Public:false}, "INTERNAL_RaiseUnloadedEvent", 
      JSIL.MethodSignature.Void, 
      FrameworkElement_INTERNAL_RaiseUnloadedEvent
    );

    $.Method({Static:true , Public:false}, "INTERNAL_UpdateCssPointerEventsPropertyBasedOnIsHitTestVisibleAndIsEnabled", 
      new JSIL.MethodSignature(null, [
          $.Type, $.Boolean, 
          $.Boolean
        ]), 
      FrameworkElement_INTERNAL_UpdateCssPointerEventsPropertyBasedOnIsHitTestVisibleAndIsEnabled
    );

    $.Method({Static:true , Public:false}, "IsEnabled_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      FrameworkElement_IsEnabled_Changed
    );

    $.Method({Static:true , Public:false}, "IsHitTestVisible_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      FrameworkElement_IsHitTestVisible_Changed
    );

    $.Method({Static:false, Public:false, Virtual:true }, "ManageIsEnabled", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")), 
      FrameworkElement_ManageIsEnabled
    );

    $.Method({Static:true , Public:false}, "Margin_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      FrameworkElement_Margin_Changed
    );

    $.Method({Static:false, Public:false, Virtual:true }, "OnAfterApplyHorizontalAlignmentAndWidth", 
      JSIL.MethodSignature.Void, 
      FrameworkElement_OnAfterApplyHorizontalAlignmentAndWidth
    );

    $.Method({Static:false, Public:false, Virtual:true }, "OnAfterApplyVerticalAlignmentAndWidth", 
      JSIL.MethodSignature.Void, 
      FrameworkElement_OnAfterApplyVerticalAlignmentAndWidth
    );

    $.Method({Static:false, Public:false}, "RecursivelyRegisterToStyleChangedEvents", 
      JSIL.MethodSignature.Void, 
      FrameworkElement_RecursivelyRegisterToStyleChangedEvents
    );

    $.Method({Static:false, Public:false}, "RecursivelyUnregisterFromStyleChangedEvents", 
      JSIL.MethodSignature.Void, 
      FrameworkElement_RecursivelyUnregisterFromStyleChangedEvents
    );

    $.Method({Static:false, Public:true }, "remove_Loaded", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")), 
      FrameworkElement_remove_Loaded
    );

    $.Method({Static:false, Public:true }, "remove_Unloaded", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")), 
      FrameworkElement_remove_Unloaded
    );

    $.Method({Static:false, Public:true }, "set_Cursor", 
      JSIL.MethodSignature.Action($asm00.TypeRef("System.Windows.Input.Cursor")), 
      FrameworkElement_set_Cursor
    );

    $.Method({Static:false, Public:true }, "set_DataContext", 
      JSIL.MethodSignature.Action($.Object), 
      FrameworkElement_set_DataContext
    );

    $.Method({Static:false, Public:true }, "set_Height", 
      JSIL.MethodSignature.Action($.Double), 
      FrameworkElement_set_Height
    );

    $.Method({Static:false, Public:true }, "set_HorizontalAlignment", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.HorizontalAlignment")), 
      FrameworkElement_set_HorizontalAlignment
    );

    $.Method({Static:false, Public:true }, "set_IsEnabled", 
      JSIL.MethodSignature.Action($.Boolean), 
      FrameworkElement_set_IsEnabled
    );

    $.Method({Static:false, Public:true }, "set_IsHitTestVisible", 
      JSIL.MethodSignature.Action($.Boolean), 
      FrameworkElement_set_IsHitTestVisible
    );

    $.Method({Static:false, Public:true }, "set_Margin", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Thickness")), 
      FrameworkElement_set_Margin
    );

    $.Method({Static:false, Public:true }, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      FrameworkElement_set_Name
    );

    $.Method({Static:false, Public:true }, "set_Resources", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.ResourceDictionary")), 
      FrameworkElement_set_Resources
    );

    $.Method({Static:false, Public:true }, "set_Style", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Style")), 
      FrameworkElement_set_Style
    );

    $.Method({Static:false, Public:true }, "set_Tag", 
      JSIL.MethodSignature.Action($.Object), 
      FrameworkElement_set_Tag
    );

    $.Method({Static:false, Public:true }, "set_VerticalAlignment", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.VerticalAlignment")), 
      FrameworkElement_set_VerticalAlignment
    );

    $.Method({Static:false, Public:true }, "set_Width", 
      JSIL.MethodSignature.Action($.Double), 
      FrameworkElement_set_Width
    );

    $.Method({Static:true , Public:false}, "Style_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      FrameworkElement_Style_Changed
    );

    $.Method({Static:false, Public:false}, "StyleSetterValueChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")]), 
      FrameworkElement_StyleSetterValueChanged
    );

    $.Method({Static:true , Public:false}, "VerticalAlignment_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      FrameworkElement_VerticalAlignment_Changed
    );

    $.Method({Static:true , Public:false}, "Width_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      FrameworkElement_Width_Changed
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "CursorProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "HeightProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "IsEnabledProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "IsHitTestVisibleProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "NameProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "DataContextProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "HorizontalAlignmentProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "MarginProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "ResourcesProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "TagProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "VerticalAlignmentProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "WidthProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "StyleProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:false, Public:false}, "Loaded", $asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")); 
    $['Field']({Static:false, Public:false}, "Unloaded", $asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")); 
    function FrameworkElement__cctor () {
      $thisType.CursorProperty = $T00()['Register']("Cursor", $T01().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['Cursor_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Cursor_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.HeightProperty = $T00()['Register']("Height", $T04().__Type__, $thisType.__Type__, $S00().Construct(NaN, $T03()['New']($thisType, $thisType['Height_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Height_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      var propertyMetadata = $S00().Construct(true, $T03()['New']($thisType, $thisType['IsEnabled_Changed'], function () { return JSIL.GetMethodInfo($thisType, "IsEnabled_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); }));
      propertyMetadata.PropertyMetadata$Inherits$value = true;
      $thisType.IsEnabledProperty = $T00()['Register']("IsEnabled", $T05().__Type__, $thisType.__Type__, propertyMetadata);
      var propertyMetadata2 = $S00().Construct(true, $T03()['New']($thisType, $thisType['IsHitTestVisible_Changed'], function () { return JSIL.GetMethodInfo($thisType, "IsHitTestVisible_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); }));
      propertyMetadata2.PropertyMetadata$Inherits$value = true;
      $thisType.IsHitTestVisibleProperty = $T00()['Register']("IsHitTestVisible", $T05().__Type__, $thisType.__Type__, propertyMetadata2);
      $thisType.NameProperty = $T00()['Register']("Name", $T06().__Type__, $thisType.__Type__, $S01().Construct($T06().Empty));
      var propertyMetadata3 = $S02().Construct();
      propertyMetadata3.PropertyMetadata$Inherits$value = true;
      $thisType.DataContextProperty = $T00()['Register']("DataContext", $T07().__Type__, $thisType.__Type__, propertyMetadata3);
      var propertyMetadata4 = $S00().Construct($T08().Stretch, $T03()['New']($thisType, $thisType['HorizontalAlignment_Changed'], function () { return JSIL.GetMethodInfo($thisType, "HorizontalAlignment_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); }));
      propertyMetadata4.PropertyMetadata$CallPropertyChangedWhenLoadedIntoVisualTree$value = false;
      $thisType.HorizontalAlignmentProperty = $T00()['Register']("HorizontalAlignment", $T08().__Type__, $thisType.__Type__, propertyMetadata4);
      $thisType.MarginProperty = $T00()['Register']("Margin", $T09().__Type__, $thisType.__Type__, $S00().Construct(new ($T09())(), $T03()['New']($thisType, $thisType['Margin_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Margin_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.ResourcesProperty = $T00()['Register']("Resources", $T0A().__Type__, $thisType.__Type__, $S00().Construct(null, null));
      $thisType.TagProperty = $T00()['Register']("Tag", $T07().__Type__, $thisType.__Type__, $S00().Construct(null, null));
      var propertyMetadata5 = $S00().Construct($T0B().Stretch, $T03()['New']($thisType, $thisType['VerticalAlignment_Changed'], function () { return JSIL.GetMethodInfo($thisType, "VerticalAlignment_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); }));
      propertyMetadata5.PropertyMetadata$CallPropertyChangedWhenLoadedIntoVisualTree$value = false;
      $thisType.VerticalAlignmentProperty = $T00()['Register']("VerticalAlignment", $T0B().__Type__, $thisType.__Type__, propertyMetadata5);
      $thisType.WidthProperty = $T00()['Register']("Width", $T04().__Type__, $thisType.__Type__, $S00().Construct(NaN, $T03()['New']($thisType, $thisType['Width_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Width_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.StyleProperty = $T00()['Register']("Style", $T0C().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['Style_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Style_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      FrameworkElement__cctor
    );

    $.Property({Static:false, Public:true }, "Cursor", $asm00.TypeRef("System.Windows.Input.Cursor"));

    $.Property({Static:false, Public:true }, "Height", $.Double);

    $.Property({Static:false, Public:true }, "IsEnabled", $.Boolean);

    $.Property({Static:false, Public:true }, "IsHitTestVisible", $.Boolean);

    $.Property({Static:false, Public:true }, "Name", $.String);

    $.Property({Static:false, Public:true }, "DataContext", $.Object);

    $.Property({Static:false, Public:true }, "HorizontalAlignment", $asm00.TypeRef("Windows.UI.Xaml.HorizontalAlignment"));

    $.Property({Static:false, Public:true }, "Margin", $asm00.TypeRef("Windows.UI.Xaml.Thickness"));

    $.Property({Static:false, Public:true }, "Resources", $asm00.TypeRef("Windows.UI.Xaml.ResourceDictionary"));

    $.Property({Static:false, Public:true }, "Tag", $.Object);

    $.Property({Static:false, Public:true }, "VerticalAlignment", $asm00.TypeRef("Windows.UI.Xaml.VerticalAlignment"));

    $.Property({Static:false, Public:true }, "Width", $.Double);

    $.Property({Static:false, Public:true }, "Style", $asm00.TypeRef("Windows.UI.Xaml.Style"));

    $.Property({Static:false, Public:true }, "ActualWidth", $.Double);

    $.Property({Static:false, Public:true }, "ActualHeight", $.Double);

    $.Event({Static:false, Public:true }, "Loaded", $asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler"));

    $.Event({Static:false, Public:true }, "Unloaded", $asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.Control */ 

(function Control$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.Brush)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Thickness)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Text.FontWeight)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.SolidColorBrush)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Colors)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.FontFamily)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm00.Windows.UI.Color)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm06.System.NotSupportedException)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize(System.Array.Of($asm06.System.Object))) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm06.System.Math)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm06.System.UInt16)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Canvas)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.Media.SolidColorBrush"), [$asm00.TypeRef("Windows.UI.Color")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.NotSupportedException"), [$asm06.TypeRef("System.String")]))) ();
  };

  function Control__ctor () {
    $T0B().prototype['_ctor'].call(this);
  };

  function Control_Background_Changed (d, e) {
    var control = $thisType.$Cast(d);
    var brush = $T01().$Cast(e['get_NewValue']());
    if ($T0E()['IsElementInVisualTree'](control)) {
      if ($T06().$Is(brush)) {
        $T0F()['GetFrameworkElementOuterStyleForModification'](control).backgroundColor = (($T06().$Cast(brush))['get_Color']()['MemberwiseClone']())['INTERNAL_ToHtmlString']();
      } else {
        if (brush !== null) {
          throw $S02().Construct("The specified brush is not supported.");
        }
        $T0F()['GetFrameworkElementOuterStyleForModification'](control).backgroundColor = "";
      }
    }
  };

  function Control_BorderBrush_Changed (d, e) {
    var control = $thisType.$Cast(d);
    var brush = $T01().$Cast(e['get_NewValue']());
    if (!(!$T0E()['IsElementInVisualTree'](control) || !$T06().$Is(brush))) {
      $T0F()['GetFrameworkElementOuterStyleForModification'](control).borderColor = (($T06().$Cast(brush))['get_Color']()['MemberwiseClone']())['INTERNAL_ToHtmlString']();
    }
  };

  function Control_BorderThickness_Changed (d, e) {
    var control = $thisType.$Cast(d);
    var thickness = $T04().$Cast(e['get_NewValue']())['MemberwiseClone']();
    if ($T0E()['IsElementInVisualTree'](control)) {
      var frameworkElementOuterStyleForModification = $T0F()['GetFrameworkElementOuterStyleForModification'](control);
      frameworkElementOuterStyleForModification.borderStyle = "solid";
      frameworkElementOuterStyleForModification.borderWidth = (JSIL.ConcatString.apply(null, JSIL.Array.New($T12(), [thickness['get_Top'](), "px ", thickness['get_Right'](), "px ", thickness['get_Bottom'](), "px ", thickness['get_Left'](), "px "])));
    }
  };

  function Control_Focus () {
    $T0F()['SetFocus'](this);
  };

  function Control_FontFamily_Changed (d, e) {
    var control = $thisType.$Cast(d);
    var fontFamily = $T08().$Cast(e['get_NewValue']());
    var text = "";
    if (fontFamily !== null) {
      text = fontFamily['get_Source']();
    }
    if ($T0E()['IsElementInVisualTree'](control)) {
      $T0F()['GetFrameworkElementOuterStyleForModification'](control).fontFamily = text;
    }
  };

  function Control_FontSize_Changed (d, e) {
    var control = $thisType.$Cast(d);
    var num = $T09().$Cast(e['get_NewValue']());
    if ($T0E()['IsElementInVisualTree'](control)) {
      $T0F()['GetFrameworkElementOuterStyleForModification'](control).fontSize = (JSIL.ConcatString((+(((Math.floor((num * 1000))) / 1000))).toString(), "px"));
    }
  };

  function Control_FontWeight_Changed (d, e) {
    var control = $thisType.$Cast(d);
    var fontWeight = $T05().$Cast(e['get_NewValue']())['MemberwiseClone']();
    if ($T0E()['IsElementInVisualTree'](control)) {
      var frameworkElementOuterStyleForModification = $T0F()['GetFrameworkElementOuterStyleForModification'](control);
      frameworkElementOuterStyleForModification.fontWeight = ((fontWeight.Weight).toString());
    }
  };

  function Control_Foreground_Changed (d, e) {
    var control = $thisType.$Cast(d);
    var brush = $T01().$Cast(e['get_NewValue']());
    if ($T0E()['IsElementInVisualTree'](control)) {
      if ($T06().$Is(brush)) {
        $T0F()['GetFrameworkElementOuterStyleForModification'](control).color = (($T06().$Cast(brush))['get_Color']()['MemberwiseClone']())['INTERNAL_ToHtmlString']();
      } else {
        if (brush !== null) {
          throw $S02().Construct("The specified brush is not supported.");
        }
        $T0F()['GetFrameworkElementOuterStyleForModification'](control).color = "";
      }
    }
  };

  function Control_get_Background () {
    return $T01().$Cast(this['GetValue']($thisType.BackgroundProperty));
  };

  function Control_get_BorderBrush () {
    return $T01().$Cast(this['GetValue']($thisType.BorderBrushProperty));
  };

  function Control_get_BorderThickness () {
    return $T04().$Cast(this['GetValue']($thisType.BorderThicknessProperty));
  };

  function Control_get_FontFamily () {
    return $T08().$Cast(this['GetValue']($thisType.FontFamilyProperty));
  };

  function Control_get_FontSize () {
    return $T09().$Cast(this['GetValue']($thisType.FontSizeProperty));
  };

  function Control_get_FontWeight () {
    return $T05().$Cast(this['GetValue']($thisType.FontWeightProperty));
  };

  function Control_get_Foreground () {
    return $T01().$Cast(this['GetValue']($thisType.ForegroundProperty));
  };

  function Control_get_Padding () {
    return $T04().$Cast(this['GetValue']($thisType.PaddingProperty));
  };

  function Control_get_TabIndex () {
    return $T0A().$Cast(this['GetValue']($thisType.TabIndexProperty));
  };

  function Control_Padding_Changed (d, e) {
    var control = $thisType.$Cast(d);
    if (!$T17().$Is(control.UIElement$INTERNAL_VisualParent$value)) {
      var thickness = $T04().$Cast(e['get_NewValue']())['MemberwiseClone']();
      if ($T0E()['IsElementInVisualTree'](control)) {
        var iNTERNAL_InnerDomElement = control.UIElement$INTERNAL_InnerDomElement$value;
        var obj = $T0F()['GetDomElementStyleForModification'](iNTERNAL_InnerDomElement);
        obj.boxSizing = "border-box";
        obj.paddingLeft = (JSIL.ConcatString(thickness['get_Left'](), "px"));
        obj.paddingTop = (JSIL.ConcatString(thickness['get_Top'](), "px"));
        obj.paddingRight = (JSIL.ConcatString(thickness['get_Right'](), "px"));
        obj.paddingBottom = (JSIL.ConcatString(thickness['get_Bottom'](), "px"));
      }
    }
  };

  function Control_set_Background (value) {
    this['SetValue']($thisType.BackgroundProperty, value);
  };

  function Control_set_BorderBrush (value) {
    this['SetValue']($thisType.BorderBrushProperty, value);
  };

  function Control_set_BorderThickness (value) {
    this['SetValue']($thisType.BorderThicknessProperty, value);
  };

  function Control_set_FontFamily (value) {
    this['SetValue']($thisType.FontFamilyProperty, value);
  };

  function Control_set_FontSize (value) {
    this['SetValue']($thisType.FontSizeProperty, value);
  };

  function Control_set_FontWeight (value) {
    this['SetValue']($thisType.FontWeightProperty, value);
  };

  function Control_set_Foreground (value) {
    this['SetValue']($thisType.ForegroundProperty, value);
  };

  function Control_set_Padding (value) {
    this['SetValue']($thisType.PaddingProperty, value);
  };

  function Control_set_TabIndex (value) {
    this['SetValue']($thisType.TabIndexProperty, value);
  };

  function Control_TabIndexProperty_Changed (d, e) {
    var control = $thisType.$Cast(d);
    if ($T0E()['IsElementInVisualTree'](control)) {
      var obj = JSIL.Coalesce(control.UIElement$INTERNAL_OptionalSpecifyDomElementConcernedByFocus$value, control.UIElement$INTERNAL_OuterDomElement$value);
      if (!(!$T0A().$Is(e['get_NewValue']()) || ($T0A().$Cast(e['get_NewValue']()) === 2147483647))) {
        $T0F()['SetDomElementAttribute'](obj, "tabIndex", ($T0A().$Cast(e['get_NewValue']())).toString());
      } else {
        $T0F()['SetDomElementAttribute'](obj, "tabIndex", "");
      }
    }
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.FrameworkElement"), 
      Name: "Windows.UI.Xaml.Controls.Control", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Control__ctor
    );

    $.Method({Static:true , Public:false}, "Background_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Control_Background_Changed
    );

    $.Method({Static:true , Public:false}, "BorderBrush_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Control_BorderBrush_Changed
    );

    $.Method({Static:true , Public:false}, "BorderThickness_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Control_BorderThickness_Changed
    );

    $.Method({Static:false, Public:true }, "Focus", 
      JSIL.MethodSignature.Void, 
      Control_Focus
    );

    $.Method({Static:true , Public:false}, "FontFamily_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Control_FontFamily_Changed
    );

    $.Method({Static:true , Public:false}, "FontSize_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Control_FontSize_Changed
    );

    $.Method({Static:true , Public:false}, "FontWeight_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Control_FontWeight_Changed
    );

    $.Method({Static:true , Public:false}, "Foreground_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Control_Foreground_Changed
    );

    $.Method({Static:false, Public:true }, "get_Background", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      Control_get_Background
    );

    $.Method({Static:false, Public:true }, "get_BorderBrush", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      Control_get_BorderBrush
    );

    $.Method({Static:false, Public:true }, "get_BorderThickness", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Thickness")), 
      Control_get_BorderThickness
    );

    $.Method({Static:false, Public:true }, "get_FontFamily", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Media.FontFamily")), 
      Control_get_FontFamily
    );

    $.Method({Static:false, Public:true }, "get_FontSize", 
      JSIL.MethodSignature.Return($.Double), 
      Control_get_FontSize
    );

    $.Method({Static:false, Public:true }, "get_FontWeight", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Text.FontWeight")), 
      Control_get_FontWeight
    );

    $.Method({Static:false, Public:true }, "get_Foreground", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      Control_get_Foreground
    );

    $.Method({Static:false, Public:true }, "get_Padding", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Thickness")), 
      Control_get_Padding
    );

    $.Method({Static:false, Public:true }, "get_TabIndex", 
      JSIL.MethodSignature.Return($.Int32), 
      Control_get_TabIndex
    );

    $.Method({Static:true , Public:false}, "Padding_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Control_Padding_Changed
    );

    $.Method({Static:false, Public:true }, "set_Background", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      Control_set_Background
    );

    $.Method({Static:false, Public:true }, "set_BorderBrush", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      Control_set_BorderBrush
    );

    $.Method({Static:false, Public:true }, "set_BorderThickness", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Thickness")), 
      Control_set_BorderThickness
    );

    $.Method({Static:false, Public:true }, "set_FontFamily", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Media.FontFamily")), 
      Control_set_FontFamily
    );

    $.Method({Static:false, Public:true }, "set_FontSize", 
      JSIL.MethodSignature.Action($.Double), 
      Control_set_FontSize
    );

    $.Method({Static:false, Public:true }, "set_FontWeight", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Text.FontWeight")), 
      Control_set_FontWeight
    );

    $.Method({Static:false, Public:true }, "set_Foreground", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      Control_set_Foreground
    );

    $.Method({Static:false, Public:true }, "set_Padding", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Thickness")), 
      Control_set_Padding
    );

    $.Method({Static:false, Public:true }, "set_TabIndex", 
      JSIL.MethodSignature.Action($.Int32), 
      Control_set_TabIndex
    );

    $.Method({Static:true , Public:false}, "TabIndexProperty_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Control_TabIndexProperty_Changed
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "BackgroundProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "BorderBrushProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "BorderThicknessProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "FontWeightProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "ForegroundProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "FontFamilyProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "FontSizeProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "PaddingProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "TabIndexProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function Control__cctor () {
      $thisType.BackgroundProperty = $T00()['Register']("Background", $T01().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['Background_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Background_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.BorderBrushProperty = $T00()['Register']("BorderBrush", $T01().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['BorderBrush_Changed'], function () { return JSIL.GetMethodInfo($thisType, "BorderBrush_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.BorderThicknessProperty = $T00()['Register']("BorderThickness", $T04().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['BorderThickness_Changed'], function () { return JSIL.GetMethodInfo($thisType, "BorderThickness_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.FontWeightProperty = $T00()['Register']("FontWeight", $T05().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['FontWeight_Changed'], function () { return JSIL.GetMethodInfo($thisType, "FontWeight_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.ForegroundProperty = $T00()['Register']("Foreground", $T01().__Type__, $thisType.__Type__, $S00().Construct($S01().Construct($T07()['get_Black']()['MemberwiseClone']()), $T03()['New']($thisType, $thisType['Foreground_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Foreground_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.FontFamilyProperty = $T00()['Register']("FontFamily", $T08().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['FontFamily_Changed'], function () { return JSIL.GetMethodInfo($thisType, "FontFamily_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.FontSizeProperty = $T00()['Register']("FontSize", $T09().__Type__, $thisType.__Type__, $S00().Construct(16, $T03()['New']($thisType, $thisType['FontSize_Changed'], function () { return JSIL.GetMethodInfo($thisType, "FontSize_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.PaddingProperty = $T00()['Register']("Padding", $T04().__Type__, $thisType.__Type__, $S00().Construct(new ($T04())(), $T03()['New']($thisType, $thisType['Padding_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Padding_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.TabIndexProperty = $T00()['Register']("TabIndex", $T0A().__Type__, $thisType.__Type__, $S00().Construct(2147483647, $T03()['New']($thisType, $thisType['TabIndexProperty_Changed'], function () { return JSIL.GetMethodInfo($thisType, "TabIndexProperty_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Control__cctor
    );

    $.Property({Static:false, Public:true }, "Background", $asm00.TypeRef("Windows.UI.Xaml.Media.Brush"));

    $.Property({Static:false, Public:true }, "BorderBrush", $asm00.TypeRef("Windows.UI.Xaml.Media.Brush"));

    $.Property({Static:false, Public:true }, "BorderThickness", $asm00.TypeRef("Windows.UI.Xaml.Thickness"));

    $.Property({Static:false, Public:true }, "FontWeight", $asm00.TypeRef("Windows.UI.Text.FontWeight"));

    $.Property({Static:false, Public:true }, "Foreground", $asm00.TypeRef("Windows.UI.Xaml.Media.Brush"));

    $.Property({Static:false, Public:true }, "FontFamily", $asm00.TypeRef("Windows.UI.Xaml.Media.FontFamily"));

    $.Property({Static:false, Public:true }, "FontSize", $.Double);

    $.Property({Static:false, Public:true }, "Padding", $asm00.TypeRef("Windows.UI.Xaml.Thickness"));

    $.Property({Static:false, Public:true }, "TabIndex", $.Int32);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.ContentControl */ 

(function ContentControl$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.DataTemplate)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Control)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkTemplate)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object")]))) ();
  };

  function ContentControl__ctor () {
    $T05().prototype['_ctor'].call(this);
  };

  function ContentControl_Content_Changed (d, e) {
    var contentControl = $thisType.$Cast(d);
    contentControl['OnContentChanged'](
      e['get_OldValue'](), 
      e['get_NewValue']()
    );
  };

  function ContentControl_get_Content () {
    return this['GetValue']($thisType.ContentProperty);
  };

  function ContentControl_get_ContentTemplate () {
    return $T04().$Cast(this['GetValue']($thisType.ContentTemplateProperty));
  };

  function ContentControl_OnContentChanged (oldContent, newContent) {
    if ($T08().$Is(oldContent)) {
      $T09()['DetachVisualChildIfNotNull']($T08().$Cast(oldContent), this);
    }
    if (this._dataTemplateRenderedContent !== null) {
      $T09()['DetachVisualChildIfNotNull'](this._dataTemplateRenderedContent, this);
    }
    this._dataTemplateRenderedContent = null;
    if ($T08().$Is(newContent)) {
      $T09()['AttachVisualChildIfNotAlreadyAttached']($T08().$Cast(newContent), this);
    } else if ($T09()['IsElementInVisualTree'](this)) {
      if (this['get_ContentTemplate']() !== null) {
        this._dataTemplateRenderedContent = (this['get_ContentTemplate']())['INTERNAL_InstantiateFrameworkTemplate']();
        (this._dataTemplateRenderedContent)['set_DataContext'](newContent);
        $T09()['AttachVisualChildIfNotAlreadyAttached'](this._dataTemplateRenderedContent, this);
      } else {
        $T0C()['SetContentString'](this, newContent['toString'](), true);
        var obj = $T0C()['GetDomElementStyleForModification'](this.UIElement$INTERNAL_InnerDomElement$value);
        obj.textAlign = "center";
      }
    }
  };

  function ContentControl_set_Content (value) {
    this['SetValue']($thisType.ContentProperty, value);
  };

  function ContentControl_set_ContentTemplate (value) {
    this['SetValue']($thisType.ContentTemplateProperty, value);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.Control"), 
      Name: "Windows.UI.Xaml.Controls.ContentControl", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ContentControl__ctor
    );

    $.Method({Static:true , Public:false}, "Content_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      ContentControl_Content_Changed
    );

    $.Method({Static:false, Public:true }, "get_Content", 
      JSIL.MethodSignature.Return($.Object), 
      ContentControl_get_Content
    );

    $.Method({Static:false, Public:true }, "get_ContentTemplate", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.DataTemplate")), 
      ContentControl_get_ContentTemplate
    );

    $.Method({Static:false, Public:false, Virtual:true }, "OnContentChanged", 
      new JSIL.MethodSignature(null, [$.Object, $.Object]), 
      ContentControl_OnContentChanged
    );

    $.Method({Static:false, Public:true }, "set_Content", 
      JSIL.MethodSignature.Action($.Object), 
      ContentControl_set_Content
    );

    $.Method({Static:false, Public:true }, "set_ContentTemplate", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DataTemplate")), 
      ContentControl_set_ContentTemplate
    );

    $['Field']({Static:false, Public:false}, "_dataTemplateRenderedContent", $asm00.TypeRef("Windows.UI.Xaml.FrameworkElement")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "ContentProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "ContentTemplateProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function ContentControl__cctor () {
      $thisType.ContentProperty = $T00()['Register']("Content", $T01().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['Content_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Content_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.ContentTemplateProperty = $T00()['Register']("ContentTemplate", $T04().__Type__, $thisType.__Type__, $S01().Construct(null));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      ContentControl__cctor
    );

    $.Property({Static:false, Public:true }, "Content", $.Object);

    $.Property({Static:false, Public:true }, "ContentTemplate", $asm00.TypeRef("Windows.UI.Xaml.DataTemplate"));

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm03.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Content"]; });

})();

/* class Windows.UI.Xaml.Controls.Primitives.ButtonBase */ 

(function ButtonBase$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm01.System.Windows.Input.ICommand)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ContentControl)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventHandler)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_EventManager$b2.Of($asm00.Windows.UI.Xaml.RoutedEventHandler, $asm00.Windows.UI.Xaml.RoutedEventArgs))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Func$b1.Of($asm06.System.Object))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.Action$b1.Of($asm06.System.Object))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventArgs)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Primitives.ButtonBase_$l$gc__DisplayClass10d)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm00.Windows.UI.Core.CoreDispatcher)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm06.System.Action)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm08.System.Linq.Enumerable)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_EventManager`2", [$asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler"), $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")]), [
        $asm06.TypeRef("System.Func`1", [$asm06.TypeRef("System.Object")]), $asm06.TypeRef("System.String"), 
        $asm06.TypeRef("System.Action`1", [$asm06.TypeRef("System.Object")])
      ]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm01.System.Windows.Input.ICommand.CanExecute)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm01.System.Windows.Input.ICommand.Execute)) ();
  };

  function ButtonBase__ctor () {
    this._forceClickEventToBeTheLastEventRaised = false;
    $T05().prototype['_ctor'].call(this);
  };

  function ButtonBase_$ladd_Click$gb__109 () {
    return this.UIElement$INTERNAL_OuterDomElement$value;
  };

  function ButtonBase_add_Click (value) {
    if (this._clickEventManager === null) {
      this._clickEventManager = $S02().Construct($T09()['New'](this, $thisType.prototype['$ladd_Click$gb__109'], function () { return JSIL.GetMethodInfo($thisType, "$ladd_Click$gb__109", JSIL.MethodSignature.Return($.Object), false); }), "click", $T0A()['New'](this, $thisType.prototype['OnClick'], function () { return JSIL.GetMethodInfo($thisType, "OnClick", JSIL.MethodSignature.Action($.Object), false); }));
    }
    $T08().prototype['Add'].call(this._clickEventManager, value);
  };

  function ButtonBase_Command_Changed (d, e) {
    var buttonBase = $thisType.$Cast(d);
    if (!((e['get_OldValue']() === null) || (e['get_NewValue']() !== null))) {
      buttonBase['remove_Click']($T07()['New']($thisType, $thisType['ExecuteCommand'], function () { return JSIL.GetMethodInfo($thisType, "ExecuteCommand", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm00.Windows.UI.Xaml.RoutedEventArgs]), true); }));
    }
    if (!((e['get_OldValue']() !== null) || (e['get_NewValue']() === null))) {
      buttonBase['add_Click']($T07()['New']($thisType, $thisType['ExecuteCommand'], function () { return JSIL.GetMethodInfo($thisType, "ExecuteCommand", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm00.Windows.UI.Xaml.RoutedEventArgs]), true); }));
    }
  };

  function ButtonBase_ExecuteCommand (sender, e) {
    var buttonBase = $thisType.$Cast(sender);
    if ($IM00().Call(buttonBase['get_Command'](), null, buttonBase['get_CommandParameter']())) {
      $IM01().Call(buttonBase['get_Command'](), null, buttonBase['get_CommandParameter']());
    }
  };

  function ButtonBase_get_Command () {
    return $T03().$Cast(this['GetValue']($thisType.CommandProperty));
  };

  function ButtonBase_get_CommandParameter () {
    return this['GetValue']($thisType.CommandParameterProperty);
  };

  function ButtonBase_INTERNAL_AttachToDomEvents () {
    $T06().prototype['INTERNAL_AttachToDomEvents'].call(this);
    if (this._clickEventManager !== null) {
      $T08().prototype['AttachToDomEvents'].call(this._clickEventManager);
    }
  };

  function ButtonBase_INTERNAL_DetachFromDomEvents () {
    $T06().prototype['INTERNAL_DetachFromDomEvents'].call(this);
    if (this._clickEventManager !== null) {
      $T08().prototype['DetachFromDomEvents'].call(this._clickEventManager);
    }
  };

  function ButtonBase_OnClick$00 (e) {
    var $closure0 = new ($T0E())();
    $closure0.$l$g4__this = this;
    var arg_20_0 = $closure0;
    var routedEventArgs = new ($T0D())();
    routedEventArgs['set_OriginalSource'](this);
    arg_20_0.eventArgs = routedEventArgs;
    if (this._forceClickEventToBeTheLastEventRaised) {
      (this['get_Dispatcher']())['BeginInvoke']($T10()['New']($closure0, $T0E().prototype['$lOnClick$gb__10b'], function () { return JSIL.GetMethodInfo($asm00.Windows.UI.Xaml.Controls.Primitives.ButtonBase_$l$gc__DisplayClass10d, "$lOnClick$gb__10b", JSIL.MethodSignature.Void, false); }));
    } else {
      $S03().CallVirtual("OnClick", null, this, $closure0.eventArgs);
    }
  };

  function ButtonBase_OnClick$01 (eventArgs) {
    var $temp00;

    for (var a$0 = $T11()['ToList$b1']($T07())((this._clickEventManager)['get_Handlers']())._items, i$0 = 0, l$0 = ($T11()['ToList$b1']($T07())((this._clickEventManager)['get_Handlers']())._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      current(this, eventArgs);
    }
  };

  function ButtonBase_remove_Click (value) {
    if (this._clickEventManager !== null) {
      $T08().prototype['Remove'].call(this._clickEventManager, value);
    }
  };

  function ButtonBase_set_Command (value) {
    this['SetValue']($thisType.CommandProperty, value);
  };

  function ButtonBase_set_CommandParameter (value) {
    this['SetValue']($thisType.CommandParameterProperty, value);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.ContentControl"), 
      Name: "Windows.UI.Xaml.Controls.Primitives.ButtonBase", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ButtonBase__ctor
    );

    $.Method({Static:false, Public:false}, "$ladd_Click$gb__109", 
      JSIL.MethodSignature.Return($.Object), 
      ButtonBase_$ladd_Click$gb__109
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "add_Click", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")), 
      ButtonBase_add_Click
    );

    $.Method({Static:true , Public:false}, "Command_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      ButtonBase_Command_Changed
    );

    $.Method({Static:true , Public:false}, "ExecuteCommand", 
      new JSIL.MethodSignature(null, [$.Object, $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")]), 
      ButtonBase_ExecuteCommand
    );

    $.Method({Static:false, Public:true }, "get_Command", 
      JSIL.MethodSignature.Return($asm01.TypeRef("System.Windows.Input.ICommand")), 
      ButtonBase_get_Command
    );

    $.Method({Static:false, Public:true }, "get_CommandParameter", 
      JSIL.MethodSignature.Return($.Object), 
      ButtonBase_get_CommandParameter
    );

    $.Method({Static:false, Public:false, Virtual:true }, "INTERNAL_AttachToDomEvents", 
      JSIL.MethodSignature.Void, 
      ButtonBase_INTERNAL_AttachToDomEvents
    );

    $.Method({Static:false, Public:false, Virtual:true }, "INTERNAL_DetachFromDomEvents", 
      JSIL.MethodSignature.Void, 
      ButtonBase_INTERNAL_DetachFromDomEvents
    );

    $.Method({Static:false, Public:false}, "OnClick", 
      JSIL.MethodSignature.Action($.Object), 
      ButtonBase_OnClick$00
    )
      .Parameter(0, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false}, "OnClick", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")), 
      ButtonBase_OnClick$01
    );

    $.Method({Static:false, Public:true }, "remove_Click", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")), 
      ButtonBase_remove_Click
    );

    $.Method({Static:false, Public:true }, "set_Command", 
      JSIL.MethodSignature.Action($asm01.TypeRef("System.Windows.Input.ICommand")), 
      ButtonBase_set_Command
    );

    $.Method({Static:false, Public:true }, "set_CommandParameter", 
      JSIL.MethodSignature.Action($.Object), 
      ButtonBase_set_CommandParameter
    );

    $['Field']({Static:false, Public:false}, "_clickEventManager", $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_EventManager`2", [$asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler"), $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")])); 
    $['Field']({Static:false, Public:false}, "_forceClickEventToBeTheLastEventRaised", $.Boolean); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "CommandParameterProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "CommandProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function ButtonBase__cctor () {
      $thisType.CommandParameterProperty = $T00()['Register']("CommandParameter", $T01().__Type__, $thisType.__Type__, $S00().Construct());
      $thisType.CommandProperty = $T00()['Register']("Command", $T03().__Type__, $thisType.__Type__, $S01().Construct(null, $T04()['New']($thisType, $thisType['Command_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Command_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      ButtonBase__cctor
    );

    $.Property({Static:false, Public:true }, "CommandParameter", $.Object);

    $.Property({Static:false, Public:true }, "Command", $asm01.TypeRef("System.Windows.Input.ICommand"));

    $.Event({Static:false, Public:true }, "Click", $asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.Primitives.ButtonBase+<>c__DisplayClass10d */ 

(function $l$gc__DisplayClass10d$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Primitives.ButtonBase)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")))) ();
  };

  function $l$gc__DisplayClass10d__ctor () {
  };

  function $l$gc__DisplayClass10d_$lOnClick$gb__10b () {
    $S00().CallVirtual("OnClick", null, this.$l$g4__this, this.eventArgs);
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.Controls.Primitives.ButtonBase+<>c__DisplayClass10d", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClass10d__ctor
    );

    $.Method({Static:false, Public:true }, "$lOnClick$gb__10b", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClass10d_$lOnClick$gb__10b
    );

    $['Field']({Static:false, Public:true }, "eventArgs", $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")); 
    $['Field']({Static:false, Public:true }, "$l$g4__this", $asm00.TypeRef("Windows.UI.Xaml.Controls.Primitives.ButtonBase")); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class System.Windows.Controls.Primitives.DataGridColumnHeader */ 

(function DataGridColumnHeader$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Primitives.ButtonBase)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.System.Windows.Controls.DataGridColumn)) ();
  };

  function DataGridColumnHeader__ctor () {
    $T00().prototype['_ctor'].call(this);
  };

  function DataGridColumnHeader_get_Column () {
    return this.DataGridColumnHeader$Column$value;
  };

  function DataGridColumnHeader_set_Column (value) {
    this.DataGridColumnHeader$Column$value = value;
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.Primitives.ButtonBase"), 
      Name: "System.Windows.Controls.Primitives.DataGridColumnHeader", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      DataGridColumnHeader__ctor
    );

    $.Method({Static:false, Public:true }, "get_Column", 
      JSIL.MethodSignature.Return($asm00.TypeRef("System.Windows.Controls.DataGridColumn")), 
      DataGridColumnHeader_get_Column
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Column", 
      JSIL.MethodSignature.Action($asm00.TypeRef("System.Windows.Controls.DataGridColumn")), 
      DataGridColumnHeader_set_Column
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $['Field']({Static:false, Public:false}, "DataGridColumnHeader$Column$value", $asm00.TypeRef("System.Windows.Controls.DataGridColumn"))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true }, "Column", $asm00.TypeRef("System.Windows.Controls.DataGridColumn"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.ItemsControl */ 

(function ItemsControl$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ItemsPanelTemplate)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Func$b1.Of($asm00.Windows.UI.Xaml.FrameworkElement))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Collections.IEnumerable)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.DataTemplate)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm06.System.Object, $asm00.Windows.UI.Xaml.FrameworkElement))) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Control)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ItemCollection)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm01.System.Collections.ObjectModel.ObservableCollection$b1.Of($asm06.System.Object))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm01.System.Collections.Specialized.NotifyCollectionChangedEventHandler)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.StackPanel)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm06.System.InvalidOperationException)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkTemplate)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.TextBlock)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm06.System.Object))) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm06.System.Collections.IEnumerator)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm06.System.IDisposable)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm06.System.Collections.ObjectModel.Collection$b1.Of($asm06.System.Object))) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm06.System.Collections.ICollection)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm01.System.Collections.Specialized.INotifyCollectionChanged)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Panel)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.UIElementCollection)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm06.System.Collections.ObjectModel.Collection$b1.Of($asm00.Windows.UI.Xaml.UIElement))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.FrameworkElement")]), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.Controls.ItemCollection"), null))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.InvalidOperationException"), [$asm06.TypeRef("System.String")]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("System.Object")]), null))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.Controls.ItemCollection"), [$asm06.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("System.Object")])]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Collections.IEnumerable"), $asm06.TypeRef("System.Collections.IEnumerable")]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm06.System.Collections.IEnumerable.GetEnumerator)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm06.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm06.System.Collections.IEnumerator.get_Current)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm06.System.IDisposable.Dispose)) ();
  };
  var $IM04 = function () {
    return ($IM04 = JSIL.Memoize($asm06.System.Collections.ICollection.get_Count)) ();
  };
  var $IM05 = function () {
    return ($IM05 = JSIL.Memoize($asm01.System.Collections.Specialized.INotifyCollectionChanged.remove_CollectionChanged)) ();
  };
  var $IM06 = function () {
    return ($IM06 = JSIL.Memoize($asm01.System.Collections.Specialized.INotifyCollectionChanged.add_CollectionChanged)) ();
  };

  function ItemsControl__ctor () {
    this._itemsToDataTemplatedRenderedElement = $S01().Construct();
    this._renderedItemsPanelTemplate = null;
    $T08().prototype['_ctor'].call(this);
    var itemCollection = $S02().Construct();
    itemCollection['add_CollectionChanged']($T0B()['New'](this, $thisType.prototype['OnCollectionChanged'], function () { return JSIL.GetMethodInfo($thisType, "OnCollectionChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs]), false); }));
    this._actualItemsSource = itemCollection;
  };

  function ItemsControl_$l_cctor$gb__4 () {
    return new ($T0C())();
  };

  function ItemsControl_$lget_Items$gb__0 (s, e) {
    throw $S03().Construct("Operation is not valid while ItemsSource is in use. Access and modify elements with ItemsControl.ItemsSource instead.");
  };

  function ItemsControl_AddChildItemToVisualTree (item) {
    if ($T10().$Is(item)) {
      $T11()['AttachVisualChildIfNotAlreadyAttached']($T10().$Cast(item), this._renderedItemsPanelTemplate);
    } else if ($T11()['IsElementInVisualTree'](this._renderedItemsPanelTemplate)) {
      if (this['get_ItemTemplate']() !== null) {
        var frameworkElement = (this['get_ItemTemplate']())['INTERNAL_InstantiateFrameworkTemplate']();
        frameworkElement['set_DataContext'](item);
      } else {
        var textBlock = new ($T14())();
        textBlock['set_Text'](item['toString']());
        frameworkElement = textBlock;
      }
      (this._itemsToDataTemplatedRenderedElement)['set_Item'](item, frameworkElement);
      $T11()['AttachVisualChildIfNotAlreadyAttached'](frameworkElement, this._renderedItemsPanelTemplate);
    }
  };

  function ItemsControl_ConvertToListOfObjectsOrNull (enumerable) {
    var list = null;
    if (enumerable !== null) {
      list = $S04().Construct();
      var enumerator = $IM00().Call(enumerable, null);
      try {

        while ($IM01().Call(enumerator, null)) {
          var current = $IM02().Call(enumerator, null);
          list['Add'](current);
        }
      } finally {
        var disposable = $T17().$As(enumerator);
        if (disposable !== null) {
          $IM03().Call(disposable, null);
        }
      }
    }
    return list;
  };

  function ItemsControl_get_Items () {
    if (this['get_ItemsSource']() === null) {
      var result = $T09().$Cast(this._actualItemsSource);
    } else {
      var itemCollection = $S05().Construct($thisType['ConvertToListOfObjectsOrNull'](this._actualItemsSource));
      itemCollection['add_CollectionChanged']($T0B()['New']($thisType, $thisType['$lget_Items$gb__0'], function () { return JSIL.GetMethodInfo($thisType, "$lget_Items$gb__0", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs]), true); }));
      result = itemCollection;
    }
    return result;
  };

  function ItemsControl_get_ItemsPanel () {
    return $T00().$Cast(this['GetValue']($thisType.ItemsPanelProperty));
  };

  function ItemsControl_get_ItemsSource () {
    return $T05().$Cast(this['GetValue']($thisType.ItemsSourceProperty));
  };

  function ItemsControl_get_ItemTemplate () {
    return $T06().$Cast(this['GetValue']($thisType.ItemTemplateProperty));
  };

  function ItemsControl_INTERNAL_OnAttachedToVisualTree () {
    this['UpdateItemsPanel'](this['get_ItemsPanel']());
  };

  function ItemsControl_ManageCollectionChanged (e) {
    var $temp00;
    switch ((e['get_Action']())['valueOf']()) {
      case 0: 
        if (this._renderedItemsPanelTemplate !== null) {
          if ((e['get_NewStartingIndex']() | 0) === ((((this['get_Items']())['get_Count']() | 0) - ($IM04().Call(e['get_NewItems'](), null) | 0)) | 0)) {
            var enumerator = $IM00().Call(e['get_NewItems'](), null);
            try {

              while ($IM01().Call(enumerator, null)) {
                var current = $IM02().Call(enumerator, null);
                this['AddChildItemToVisualTree'](current);
              }
            } finally {
              var disposable = $T17().$As(enumerator);
              if (disposable !== null) {
                $IM03().Call(disposable, null);
              }
            }
          } else {
            var list = $thisType['ConvertToListOfObjectsOrNull'](this['get_Items']());

            for (var i = ((($IM04().Call(e['get_NewItems'](), null) | 0) - 1) | 0); i >= 0; i = ((i - 1) | 0)) {
              list['RemoveAt']((((e['get_NewStartingIndex']() | 0) + i) | 0));
            }
            this['UpdateChildrenInVisualTree'](list, this['get_Items'](), false);
          }
        }
        break;

      case 1: 
        if (this._renderedItemsPanelTemplate !== null) {
          var list2 = $thisType['ConvertToListOfObjectsOrNull'](this['get_Items']());
          var list3 = $thisType['ConvertToListOfObjectsOrNull'](e['get_OldItems']());

          for (i = 0; i < (list3['get_Count']() | 0); i = ((i + 1) | 0)) {
            list2['Insert'](
              (((e['get_OldStartingIndex']() | 0) + i) | 0), 
              list3['get_Item'](i)
            );
          }
          if ((e['get_OldStartingIndex']() | 0) === ((this['get_Items']())['get_Count']() | 0)) {

            for (var a$0 = list3._items, i$0 = 0, l$0 = (list3._size | 0); i$0 < l$0; ($temp00 = i$0, 
                i$0 = ((i$0 + 1) | 0), 
                $temp00)) {
              current = a$0[i$0];
              this['RemoveChildItemFromVisualTree'](current, e['get_OldStartingIndex'](), list2);
            }
          } else {
            this['UpdateChildrenInVisualTree'](list2, this['get_Items'](), false);
          }
        }
        break;

    }
  };

  function ItemsControl_OnCollectionChanged (sender, e) {
    this['ManageCollectionChanged'](e);
  };

  function ItemsControl_OnItemsPanel_Changed (d, e) {
    var itemsControl = $thisType.$Cast(d);
    var newTemplate = $T00().$Cast(e['get_NewValue']());
    itemsControl['UpdateItemsPanel'](newTemplate);
  };

  function ItemsControl_OnItemsSourceChanged$00 (oldValue, newValue) {
    if (newValue !== this._actualItemsSource) {
      var flag = oldValue === null;
      var flag2 = ($T09().$As(this._actualItemsSource) !== null) && 
      ((($T09().$Cast(this._actualItemsSource))['get_Count']() | 0) > 0);
      if (!(!flag || !flag2)) {
        throw $S03().Construct("Items collection must be empty before using ItemsSource.");
      }
      if ($T1E().$Is(this._actualItemsSource)) {
        $IM05().Call($T1E().$Cast(this._actualItemsSource), null, $T0B()['New'](this, $thisType.prototype['OnCollectionChanged'], function () { return JSIL.GetMethodInfo($thisType, "OnCollectionChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs]), false); }));
      }
      if (newValue !== null) {
        this._actualItemsSource = newValue;
      } else {
        this._actualItemsSource = $S02().Construct();
      }
      if ($T1E().$Is(this._actualItemsSource)) {
        $IM06().Call($T1E().$Cast(this._actualItemsSource), null, $T0B()['New'](this, $thisType.prototype['OnCollectionChanged'], function () { return JSIL.GetMethodInfo($thisType, "OnCollectionChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs]), false); }));
      }
      this['OnItemsSourceChanged_BeforeVisualUpdate'](oldValue, newValue);
      if (!((this._renderedItemsPanelTemplate !== null) || (this['get_ItemsPanel']() === null))) {
        this['UpdateItemsPanel'](this['get_ItemsPanel']());
      } else if (this._renderedItemsPanelTemplate !== null) {
        this['UpdateChildrenInVisualTree'](oldValue, newValue, false);
      }
    }
  };

  function ItemsControl_OnItemsSourceChanged$01 (d, e) {
    if (!(($T05().$As(e['get_NewValue']()) === null) && (e['get_NewValue']() !== null))) {
      var itemsControl = $thisType.$Cast(d);
      var oldValue = $T05().$As(e['get_OldValue']());
      $S06().CallVirtual("OnItemsSourceChanged", null, itemsControl, oldValue, $T05().$Cast(e['get_NewValue']()));
      return;
    }
    throw $S03().Construct("ItemsControl.ItemsSource must be of type IEnumerable.");
  };

  function ItemsControl_OnItemsSourceChanged_BeforeVisualUpdate (oldValue, newValue) {
  };

  function ItemsControl_OnItemTemplate_Changed (d, e) {
    var itemsControl = $thisType.$Cast(d);
    if (e['get_NewValue']() !== e['get_OldValue']()) {
      if (itemsControl._renderedItemsPanelTemplate !== null) {
        itemsControl['UpdateChildrenInVisualTree'](
          itemsControl['get_Items'](), 
          itemsControl['get_Items'](), 
          true
        );
      }
    }
  };

  function ItemsControl_RemoveChildItemFromVisualTree$02 (item, startingIndex, coll) {
    if ($T10().$Is(item)) {
      var uIElement = $T10().$Cast(item);
      $T11()['DetachVisualChildIfNotNull'](uIElement, $T10().$Cast(uIElement.UIElement$INTERNAL_VisualParent$value));
    } else if ((this._itemsToDataTemplatedRenderedElement)['get_Item'](item) !== null) {
      $T11()['DetachVisualChildIfNotNull'](
        (this._itemsToDataTemplatedRenderedElement)['get_Item'](item), 
        $T10().$Cast((this._itemsToDataTemplatedRenderedElement)['get_Item'](item).UIElement$INTERNAL_VisualParent$value)
      );
      (this._itemsToDataTemplatedRenderedElement)['Remove'](item);
    }
  };

  function ItemsControl_set_ItemsPanel (value) {
    this['SetValue']($thisType.ItemsPanelProperty, value);
  };

  function ItemsControl_set_ItemsSource (value) {
    this['SetValue']($thisType.ItemsSourceProperty, value);
  };

  function ItemsControl_set_ItemTemplate (value) {
    this['SetValue']($thisType.ItemTemplateProperty, value);
  };

  function ItemsControl_UpdateChildrenInVisualTree (oldChildrenEnumerable, newChildrenEnumerable, forceUpdateAllChildren) {
    var $temp00, $temp01, $temp02, $temp03;
    if (!(!$T11()['IsElementInVisualTree'](this) || (this._renderedItemsPanelTemplate === null))) {
      var list = $thisType['ConvertToListOfObjectsOrNull'](oldChildrenEnumerable);
      var list2 = $thisType['ConvertToListOfObjectsOrNull'](newChildrenEnumerable);
      if (!((this._itemsToDataTemplatedRenderedElement === null) || (((this._itemsToDataTemplatedRenderedElement)['get_Count']() | 0) <= 0))) {
        if (forceUpdateAllChildren) {

          for (var a$0 = list._items, i$0 = 0, l$0 = (list._size | 0); i$0 < l$0; ($temp00 = i$0, 
              i$0 = ((i$0 + 1) | 0), 
              $temp00)) {
            var current = a$0[i$0];
            this['RemoveChildItemFromVisualTree'](current, 0, null);
          }

          for (var a$1 = list2._items, i$1 = 0, l$1 = (list2._size | 0); i$1 < l$1; ($temp01 = i$1, 
              i$1 = ((i$1 + 1) | 0), 
              $temp01)) {
            var current2 = a$1[i$1];
            this['AddChildItemToVisualTree'](current2);
          }
        } else {
          var i = 0;
          if (list2 !== null) {

            for (var a$2 = list2._items, i$2 = 0, l$2 = (list2._size | 0); i$2 < l$2; ($temp02 = i$2, 
                i$2 = ((i$2 + 1) | 0), 
                $temp02)) {
              current2 = a$2[i$2];
              if (list !== null) {

                for (; (i < (list['get_Count']() | 0)) && (current2 !== list['get_Item'](i)); i = ((i + 1) | 0)) {
                  this['RemoveChildItemFromVisualTree'](list['get_Item'](i), 0, null);
                }
              }
              if (!((list === null) || (i >= (list['get_Count']() | 0)))) {
                i = ((i + 1) | 0);
              } else {
                this['AddChildItemToVisualTree'](current2);
              }
            }
          }
          if (list !== null) {

            for (; i < (list['get_Count']() | 0); i = ((i + 1) | 0)) {
              this['RemoveChildItemFromVisualTree'](list['get_Item'](i), 0, null);
            }
          }
        }
      } else if (list2 !== null) {

        for (var a$3 = list2._items, i$3 = 0, l$3 = (list2._size | 0); i$3 < l$3; ($temp03 = i$3, 
            i$3 = ((i$3 + 1) | 0), 
            $temp03)) {
          current2 = a$3[i$3];
          this['AddChildItemToVisualTree'](current2);
        }
      }
    }
  };

  function ItemsControl_UpdateItemsPanel (newTemplate) {
    if ($T11()['IsElementInVisualTree'](this)) {
      $T11()['DetachVisualChildIfNotNull'](this._renderedItemsPanelTemplate, this);
      if (newTemplate !== null) {
        this._renderedItemsPanelTemplate = newTemplate['INTERNAL_InstantiateFrameworkTemplate']();
        if (!$T1F().$Is(this._renderedItemsPanelTemplate)) {
          throw $S03().Construct("ItemsControl.ItemsPanelTemplate must derive from Panel.");
        }
        if (!((($T1F().$Cast(this._renderedItemsPanelTemplate))['get_Children']() === null) || (((($T1F().$Cast(this._renderedItemsPanelTemplate))['get_Children']())['get_Count']() | 0) <= 0))) {
          throw $S03().Construct("Cannot explicitly modify Children collection of Panel used as ItemsPanel for ItemsControl. ItemsControl generates child elements for Panel.");
        }
        $T11()['AttachVisualChildIfNotAlreadyAttached'](this._renderedItemsPanelTemplate, this);
        if (this._actualItemsSource !== null) {
          this['UpdateChildrenInVisualTree'](this._actualItemsSource, this._actualItemsSource, true);
        }
      } else {
        this._renderedItemsPanelTemplate = null;
        (this._itemsToDataTemplatedRenderedElement)['Clear']();
      }
    }
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.Control"), 
      Name: "Windows.UI.Xaml.Controls.ItemsControl", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ItemsControl__ctor
    );

    $.Method({Static:true , Public:false}, "$l.cctor$gb__4", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.FrameworkElement")), 
      ItemsControl_$l_cctor$gb__4
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lget_Items$gb__0", 
      new JSIL.MethodSignature(null, [$.Object, $asm01.TypeRef("System.Collections.Specialized.NotifyCollectionChangedEventArgs")]), 
      ItemsControl_$lget_Items$gb__0
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "AddChildItemToVisualTree", 
      JSIL.MethodSignature.Action($.Object), 
      ItemsControl_AddChildItemToVisualTree
    );

    $.Method({Static:true , Public:false}, "ConvertToListOfObjectsOrNull", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$.Object]), [$asm06.TypeRef("System.Collections.IEnumerable")]), 
      ItemsControl_ConvertToListOfObjectsOrNull
    );

    $.Method({Static:false, Public:true }, "get_Items", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Controls.ItemCollection")), 
      ItemsControl_get_Items
    );

    $.Method({Static:false, Public:true }, "get_ItemsPanel", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Controls.ItemsPanelTemplate")), 
      ItemsControl_get_ItemsPanel
    );

    $.Method({Static:false, Public:true }, "get_ItemsSource", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.IEnumerable")), 
      ItemsControl_get_ItemsSource
    );

    $.Method({Static:false, Public:true }, "get_ItemTemplate", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.DataTemplate")), 
      ItemsControl_get_ItemTemplate
    );

    $.Method({Static:false, Public:false, Virtual:true }, "INTERNAL_OnAttachedToVisualTree", 
      JSIL.MethodSignature.Void, 
      ItemsControl_INTERNAL_OnAttachedToVisualTree
    );

    $.Method({Static:false, Public:false, Virtual:true }, "ManageCollectionChanged", 
      JSIL.MethodSignature.Action($asm01.TypeRef("System.Collections.Specialized.NotifyCollectionChangedEventArgs")), 
      ItemsControl_ManageCollectionChanged
    );

    $.Method({Static:false, Public:false}, "OnCollectionChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm01.TypeRef("System.Collections.Specialized.NotifyCollectionChangedEventArgs")]), 
      ItemsControl_OnCollectionChanged
    );

    $.Method({Static:true , Public:false}, "OnItemsPanel_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      ItemsControl_OnItemsPanel_Changed
    );

    $.Method({Static:false, Public:false}, "OnItemsSourceChanged", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Collections.IEnumerable"), $asm06.TypeRef("System.Collections.IEnumerable")]), 
      ItemsControl_OnItemsSourceChanged$00
    );

    $.Method({Static:true , Public:false}, "OnItemsSourceChanged", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      ItemsControl_OnItemsSourceChanged$01
    );

    $.Method({Static:false, Public:false, Virtual:true }, "OnItemsSourceChanged_BeforeVisualUpdate", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Collections.IEnumerable"), $asm06.TypeRef("System.Collections.IEnumerable")]), 
      ItemsControl_OnItemsSourceChanged_BeforeVisualUpdate
    );

    $.Method({Static:true , Public:false}, "OnItemTemplate_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      ItemsControl_OnItemTemplate_Changed
    );

    $.Method({Static:false, Public:false, Virtual:true }, "RemoveChildItemFromVisualTree", 
      new JSIL.MethodSignature(null, [
          $.Object, $.Int32, 
          $asm06.TypeRef("System.Collections.Generic.List`1", [$.Object])
        ]), 
      ItemsControl_RemoveChildItemFromVisualTree$02
    );

    $.Method({Static:false, Public:true }, "set_ItemsPanel", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Controls.ItemsPanelTemplate")), 
      ItemsControl_set_ItemsPanel
    );

    $.Method({Static:false, Public:true }, "set_ItemsSource", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Collections.IEnumerable")), 
      ItemsControl_set_ItemsSource
    );

    $.Method({Static:false, Public:true }, "set_ItemTemplate", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DataTemplate")), 
      ItemsControl_set_ItemTemplate
    );

    $.Method({Static:false, Public:false, Virtual:true }, "UpdateChildrenInVisualTree", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.Collections.IEnumerable"), $asm06.TypeRef("System.Collections.IEnumerable"), 
          $.Boolean
        ]), 
      ItemsControl_UpdateChildrenInVisualTree
    );

    $.Method({Static:false, Public:false, Virtual:true }, "UpdateItemsPanel", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Controls.ItemsPanelTemplate")), 
      ItemsControl_UpdateItemsPanel
    );

    $['Field']({Static:false, Public:false}, "_itemsToDataTemplatedRenderedElement", $asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$.Object, $asm00.TypeRef("Windows.UI.Xaml.FrameworkElement")])); 
    $['Field']({Static:false, Public:false}, "_renderedItemsPanelTemplate", $asm00.TypeRef("Windows.UI.Xaml.FrameworkElement")); 
    $['Field']({Static:false, Public:false}, "_actualItemsSource", $asm06.TypeRef("System.Collections.IEnumerable")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "ItemsPanelProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "ItemsSourceProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "ItemTemplateProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:false}, "CS$$l$g9__CachedAnonymousMethodDelegate1", $asm01.TypeRef("System.Collections.Specialized.NotifyCollectionChangedEventHandler"))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:true , Public:false}, "CS$$l$g9__CachedAnonymousMethodDelegate5", $asm06.TypeRef("System.Func`1", [$asm00.TypeRef("Windows.UI.Xaml.FrameworkElement")]))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    function ItemsControl__cctor () {
      var itemsPanelTemplate = new ($T00())();
      itemsPanelTemplate._methodToInstantiateFrameworkTemplate = $T01()['New']($thisType, $thisType['$l_cctor$gb__4'], function () { return JSIL.GetMethodInfo($thisType, "$l_cctor$gb__4", JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.FrameworkElement")), true); });
      $thisType.ItemsPanelProperty = $T02()['Register']("ItemsPanel", $T00().__Type__, $thisType.__Type__, $S00().Construct(itemsPanelTemplate, $T04()['New']($thisType, $thisType['OnItemsPanel_Changed'], function () { return JSIL.GetMethodInfo($thisType, "OnItemsPanel_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.ItemsSourceProperty = $T02()['Register']("ItemsSource", $T05().__Type__, $thisType.__Type__, $S00().Construct(null, $T04()['New']($thisType, $thisType['OnItemsSourceChanged'], function () { return JSIL.GetMethodInfo($thisType, "OnItemsSourceChanged", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.ItemTemplateProperty = $T02()['Register']("ItemTemplate", $T06().__Type__, $thisType.__Type__, $S00().Construct(null, $T04()['New']($thisType, $thisType['OnItemTemplate_Changed'], function () { return JSIL.GetMethodInfo($thisType, "OnItemTemplate_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      ItemsControl__cctor
    );

    $.Property({Static:false, Public:true }, "Items", $asm00.TypeRef("Windows.UI.Xaml.Controls.ItemCollection"));

    $.Property({Static:false, Public:true }, "ItemsPanel", $asm00.TypeRef("Windows.UI.Xaml.Controls.ItemsPanelTemplate"));

    $.Property({Static:false, Public:true }, "ItemsSource", $asm06.TypeRef("System.Collections.IEnumerable"));

    $.Property({Static:false, Public:true }, "ItemTemplate", $asm00.TypeRef("Windows.UI.Xaml.DataTemplate"));

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm03.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Items"]; });

})();

/* class Windows.UI.Xaml.FrameworkTemplate */ 

(function FrameworkTemplate$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Func$b1.Of($asm00.Windows.UI.Xaml.FrameworkElement))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Exception"), [$asm06.TypeRef("System.String")]))) ();
  };

  function FrameworkTemplate__ctor () {
    $T03().prototype['_ctor'].call(this);
  };

  function FrameworkTemplate_get_ContentPropertyUsefulOnlyDuringTheCompilation () {
    return $T01().$Cast(this['GetValue']($thisType.ContentPropertyUsefulOnlyDuringTheCompilationProperty));
  };

  function FrameworkTemplate_INTERNAL_InstantiateFrameworkTemplate () {
    if (this._methodToInstantiateFrameworkTemplate !== null) {
      return this._methodToInstantiateFrameworkTemplate();
    }
    throw $S01().Construct("The FrameworkTemplate was not properly initialized.");
  };

  function FrameworkTemplate_set_ContentPropertyUsefulOnlyDuringTheCompilation (value) {
    this['SetValue']($thisType.ContentPropertyUsefulOnlyDuringTheCompilationProperty, value);
  };

  function FrameworkTemplate_SetMethodToInstantiateFrameworkTemplate (methodToInstantiateFrameworkTemplate) {
    this._methodToInstantiateFrameworkTemplate = methodToInstantiateFrameworkTemplate;
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), 
      Name: "Windows.UI.Xaml.FrameworkTemplate", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      FrameworkTemplate__ctor
    );

    $.Method({Static:false, Public:true }, "get_ContentPropertyUsefulOnlyDuringTheCompilation", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.UIElement")), 
      FrameworkTemplate_get_ContentPropertyUsefulOnlyDuringTheCompilation
    );

    $.Method({Static:false, Public:false}, "INTERNAL_InstantiateFrameworkTemplate", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.FrameworkElement")), 
      FrameworkTemplate_INTERNAL_InstantiateFrameworkTemplate
    );

    $.Method({Static:false, Public:true }, "set_ContentPropertyUsefulOnlyDuringTheCompilation", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.UIElement")), 
      FrameworkTemplate_set_ContentPropertyUsefulOnlyDuringTheCompilation
    );

    $.Method({Static:false, Public:true }, "SetMethodToInstantiateFrameworkTemplate", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Func`1", [$asm00.TypeRef("Windows.UI.Xaml.FrameworkElement")])), 
      FrameworkTemplate_SetMethodToInstantiateFrameworkTemplate
    );

    $['Field']({Static:false, Public:false}, "_methodToInstantiateFrameworkTemplate", $asm06.TypeRef("System.Func`1", [$asm00.TypeRef("Windows.UI.Xaml.FrameworkElement")])); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "ContentPropertyUsefulOnlyDuringTheCompilationProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function FrameworkTemplate__cctor () {
      $thisType.ContentPropertyUsefulOnlyDuringTheCompilationProperty = $T00()['Register']("ContentPropertyUsefulOnlyDuringTheCompilation", $T01().__Type__, $thisType.__Type__, $S00().Construct(null, null));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      FrameworkTemplate__cctor
    );

    $.Property({Static:false, Public:true }, "ContentPropertyUsefulOnlyDuringTheCompilation", $asm00.TypeRef("Windows.UI.Xaml.UIElement"));

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm03.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["ContentPropertyUsefulOnlyDuringTheCompilation"]; });

})();

/* class Windows.UI.Xaml.Controls.ItemsPanelTemplate */ 

(function ItemsPanelTemplate$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkTemplate)) ();
  };

  function ItemsPanelTemplate__ctor () {
    $T00().prototype['_ctor'].call(this);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.FrameworkTemplate"), 
      Name: "Windows.UI.Xaml.Controls.ItemsPanelTemplate", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ItemsPanelTemplate__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.ItemsControl+NotInitializedItemsPanelTemplate */ 

(function NotInitializedItemsPanelTemplate$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ItemsPanelTemplate)) ();
  };

  function NotInitializedItemsPanelTemplate__ctor () {
    $T00().prototype['_ctor'].call(this);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.ItemsPanelTemplate"), 
      Name: "Windows.UI.Xaml.Controls.ItemsControl+NotInitializedItemsPanelTemplate", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NotInitializedItemsPanelTemplate__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.Primitives.Selector */ 

(function Selector$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ItemsControl)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize(System.Array.Of($asm06.System.String))) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.Char)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize(System.Array.Of($asm06.System.Char))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize(System.Array.Of($asm06.System.Reflection.MemberInfo))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.System.Type)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm06.System.Reflection.FieldInfo)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.System.Reflection.PropertyInfo)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.SelectionChangedEventHandler)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm06.System.Delegate)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm06.System.Threading.Interlocked)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm06.System.Collections.Generic.IList$b1.Of($asm06.System.Object))) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.SelectionChangedEventArgs)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventArgs)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm06.System.Object))) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm06.System.Collections.ObjectModel.Collection$b1.Of($asm06.System.Object))) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm06.System.Collections.IEnumerator)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm06.System.IDisposable)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm06.System.NotImplementedException)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm06.System.Object))) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm06.System.Convert)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm06.System.Collections.IEnumerable)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Primitives.Selector_$l$gc__DisplayClass7)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Primitives.Selector_$l$gc__DisplayClass9)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm08.System.Linq.Enumerable)) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm06.System.Func$b2.Of($asm06.System.Object, $asm06.System.Boolean))) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Primitives.Selector_$l$gc__DisplayClassf)) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_EventsHelper)) ();
  };
  var $T25 = function () {
    return ($T25 = JSIL.Memoize($asm06.System.Action$b1.Of($asm06.System.Object))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.Controls.SelectionChangedEventArgs"), [$asm06.TypeRef("System.Collections.Generic.IList`1", [$asm06.TypeRef("System.Object")]), $asm06.TypeRef("System.Collections.Generic.IList`1", [$asm06.TypeRef("System.Object")])]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.NotImplementedException"), null))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("System.Object")]), null))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [$asm06.TypeRef("System.Object")]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature("!!0", [$asm06.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), $asm06.TypeRef("System.Func`2", ["!!0", $asm06.TypeRef("System.Boolean")])], ["TSource"]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm06.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm06.System.Object).get_Current)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm06.System.IDisposable.Dispose)) ();
  };

  function Selector__ctor () {
    this._selectionChangeIsOnIndex = false;
    this._selectionChangeIsOnItem = false;
    this._selectionChangeIsOnValue = false;
    this._selectionChangedInCSharp = false;
    this._selectionChangedInHtml = false;
    $T06().prototype['_ctor'].call(this);
  };

  function Selector_AccessValueByApplyingPropertyPathIfAny (item, path) {
    if (!$T05()['IsNullOrWhiteSpace'](path)) {
      var array = (JSIL.SplitString(path, JSIL.Array.New($T08(), ["."])));
      var obj = item;

      for (var i = 0; i < (array.length | 0); i = ((i + 1) | 0)) {
        var member = (JSIL['GetType'](obj))['GetMember'](array[i]);
        if ((member === null) || ((member.length | 0) <= 0)) {
          var result = "";
          return result;
        }
        if ($T0C().$Is(member[0])) {
          var fieldInfo = $T0C().$Cast(member[0]);
          obj = fieldInfo['GetValue'](obj);
        } else {
          if (!$T0D().$Is(member[0])) {
            result = "";
            return result;
          }
          var propertyInfo = $T0D().$Cast(member[0]);
          obj = propertyInfo['GetValue'](obj);
        }
      }
      result = obj;
    } else {
      result = item;
    }
    return result;
  };

  function Selector_add_SelectionChanged (value) {
    var selectionChangedEventHandler = this.SelectionChanged;

    do {
      var selectionChangedEventHandler2 = selectionChangedEventHandler;
      var value2 = $T0F()['Combine'](selectionChangedEventHandler2, value);
      selectionChangedEventHandler = $T10()['CompareExchange$b1']($T0E())(/* ref */ new JSIL['MemberReference'](this, "SelectionChanged"), value2, selectionChangedEventHandler2);
    } while (selectionChangedEventHandler !== selectionChangedEventHandler2);
  };

  function Selector_CreateDomElement (parentRef, /* ref */ domElementWhereToPlaceChildren) {
    var obj = $T11().prototype['CreateDomElement'].call(this, parentRef, /* ref */ domElementWhereToPlaceChildren);
    this['SubscribeToDomSelectionChangedEvent'](obj);
    return obj;
  };

  function Selector_DisplayMemberPath_Changed (d, e) {
    if ($thisType.$Is(d)) {
      var selector = $thisType.$Cast(d);
      selector['UpdateChildrenInVisualTree'](
        selector['get_Items'](), 
        selector['get_Items'](), 
        true
      );
    }
  };

  function Selector_DomSelectionChanged (element) {
    if (!this._selectionChangedInCSharp) {
      var listOfSelectedItemsInCSharp = this['GetListOfSelectedItemsInCSharp']();
      var addedItems = $T14().$Cast(this['GetListOfNewlySelectedItems'](element));
      var selectionChangedEventArgs = $S02().Construct(listOfSelectedItemsInCSharp, addedItems);
      selectionChangedEventArgs['set_OriginalSource'](this);
      this._selectionChangedInHtml = true;
      this['SetLocalValue']($thisType.SelectedIndexProperty, this['GetSelectedIndex'](element));
      this._selectionChangedInHtml = false;
      this['OnSelectionChanged'](selectionChangedEventArgs);
    }
  };

  function Selector_get_DisplayMemberPath () {
    return $T05().$Cast(this['GetValue']($thisType.DisplayMemberPathProperty));
  };

  function Selector_get_SelectedIndex () {
    return $T01().$Cast(this['GetValue']($thisType.SelectedIndexProperty));
  };

  function Selector_get_SelectedItem () {
    return this['GetValue']($thisType.SelectedItemProperty);
  };

  function Selector_get_SelectedValue () {
    return this['GetValue']($thisType.SelectedValueProperty);
  };

  function Selector_get_SelectedValuePath () {
    return $T05().$Cast(this['GetValue']($thisType.SelectedValuePathProperty));
  };

  function Selector_GetIndexOfElementInItems (selector, element) {
    var num = 0;
    var enumerator = (selector['get_Items']())['GetEnumerator']();
    try {

    $loop0: 
      while ($IM00().Call(enumerator, null)) {
        var current = $IM01().Call(enumerator, null);
        if (JSIL.ObjectEqualsInstance(element, current, !false, $T04().__Type__)) {
          break $loop0;
        }
        num = ((num + 1) | 0);
      }
    } finally {
      if (enumerator !== null) {
        $IM02().Call(enumerator, null);
      }
    }
    if (num >= ((selector['get_Items']())['get_Count']() | 0)) {
      num = -1;
    }
    return num;
  };

  function Selector_GetListOfNewlySelectedItems (e) {
    throw $S03().Construct();
  };

  function Selector_GetListOfSelectedItemsInCSharp () {
    var list = $S04().Construct();
    list['Add'](this['get_SelectedItem']());
    return list;
  };

  function Selector_GetSelectedIndex (e) {
    throw $S03().Construct();
  };

  function Selector_ManageSelectedIndex_Changed (e) {
    if (!(e['get_OldValue']() == e['get_NewValue']())) {
      var num = ($S05().CallStatic($T1D(), "ToInt32", null, e['get_NewValue']()) | 0);
      if (!(this._selectionChangeIsOnValue || this._selectionChangeIsOnItem)) {
        var selectedItem = this['get_SelectedItem']();
        this._selectionChangeIsOnIndex = true;
        if (num === -1) {
          this['SetLocalValue']($thisType.SelectedItemProperty, null);
          this['SetLocalValue']($thisType.SelectedValueProperty, null);
        } else {
          var obj = (this['get_Items']())['get_Item'](num);
          this['SetLocalValue']($thisType.SelectedItemProperty, obj);
          this['SetLocalValue']($thisType.SelectedValueProperty, this['AccessValueByApplyingPropertyPathIfAny'](obj, this['get_SelectedValuePath']()));
        }
        this._selectionChangeIsOnIndex = false;
        var list = $S04().Construct();
        list['Add'](selectedItem);
        var list2 = $S04().Construct();
        list2['Add'](this['get_SelectedItem']());
        this['RefreshSelectedItem']();
        if (!this._selectionChangedInHtml) {
          this['OnSelectionChanged']($S02().Construct(list, list2));
        }
      }
      if (!this._selectionChangedInHtml) {
        this._selectionChangedInCSharp = true;
        this['SetNewSelectedIndexInHtml'](num);
        this._selectionChangedInCSharp = false;
      }
    }
  };

  function Selector_OnItemsSourceChanged_BeforeVisualUpdate (oldValue, newValue) {
    this['set_SelectedIndex'](-1);
  };

  function Selector_OnSelectionChanged (eventArgs) {
    if (this.SelectionChanged !== null) {
      this.SelectionChanged(this, eventArgs);
    }
  };

  function Selector_RefreshSelectedItem () {
  };

  function Selector_remove_SelectionChanged (value) {
    var selectionChangedEventHandler = this.SelectionChanged;

    do {
      var selectionChangedEventHandler2 = selectionChangedEventHandler;
      var value2 = $T0F()['Remove'](selectionChangedEventHandler2, value);
      selectionChangedEventHandler = $T10()['CompareExchange$b1']($T0E())(/* ref */ new JSIL['MemberReference'](this, "SelectionChanged"), value2, selectionChangedEventHandler2);
    } while (selectionChangedEventHandler !== selectionChangedEventHandler2);
  };

  function Selector_SelectedIndex_Changed (d, e) {
    var selector = $thisType.$Cast(d);
    selector['ManageSelectedIndex_Changed'](e);
  };

  function Selector_SelectedItem_changed (d, e) {
    if (!(e['get_OldValue']() == e['get_NewValue']())) {
      var selector = $thisType.$Cast(d);
      var newValue = e['get_NewValue']();
      if (!(selector._selectionChangeIsOnValue || selector._selectionChangeIsOnIndex)) {
        selector._selectionChangeIsOnItem = true;
        if (newValue === null) {
          selector['SetLocalValue']($thisType.SelectedIndexProperty, -1);
          selector['SetLocalValue']($thisType.SelectedValueProperty, null);
        } else {
          selector['SetLocalValue']($thisType.SelectedIndexProperty, $thisType['GetIndexOfElementInItems'](selector, newValue));
          selector['SetLocalValue']($thisType.SelectedValueProperty, selector['AccessValueByApplyingPropertyPathIfAny'](newValue, selector['get_SelectedValuePath']()));
        }
        selector._selectionChangeIsOnItem = false;
        var list = $S04().Construct();
        list['Add'](e['get_OldValue']());
        var list2 = $S04().Construct();
        list2['Add'](e['get_NewValue']());
        selector['RefreshSelectedItem']();
        selector['OnSelectionChanged']($S02().Construct(list, list2));
      }
    }
  };

  function Selector_SelectedValue_Changed (d, e) {
    if (!(e['get_OldValue']() == e['get_NewValue']())) {
      var $closure0 = new ($T1F())();
      $closure0.selector = $thisType.$Cast(d);
      $closure0.newValue = e['get_NewValue']();
      var selectedItem = ($closure0.selector)['get_SelectedItem']();
      if (!($closure0.selector._selectionChangeIsOnItem || $closure0.selector._selectionChangeIsOnIndex)) {
        $closure0.selector._selectionChangeIsOnValue = true;
        if ($closure0.newValue === null) {
          ($closure0.selector)['SetLocalValue']($thisType.SelectedIndexProperty, -1);
          ($closure0.selector)['SetLocalValue']($thisType.SelectedItemProperty, null);
        } else {
          var $closure1 = new ($T20())();
          $closure1.CS$$l$g8__locals8 = $closure0;
          $closure1.selectedPropertyPath = ($closure0.selector)['get_SelectedValuePath']();
          var obj = $S06().CallStatic($T21(), "First$b1", [$asm06.System.Object], 
            ($closure0.selector)['get_Items'](), 
            $T22()['New']($closure1, $T20().prototype['$lSelectedValue_Changed$gb__6'], function () { return JSIL.GetMethodInfo($asm00.Windows.UI.Xaml.Controls.Primitives.Selector_$l$gc__DisplayClass9, "$lSelectedValue_Changed$gb__6", new JSIL.MethodSignature($asm06.System.Boolean, [$asm06.System.Object]), false); })
          );
          ($closure0.selector)['SetLocalValue']($thisType.SelectedIndexProperty, $thisType['GetIndexOfElementInItems']($closure0.selector, obj));
          ($closure0.selector)['SetLocalValue']($thisType.SelectedItemProperty, obj);
        }
        $closure0.selector._selectionChangeIsOnValue = false;
        var list = $S04().Construct();
        list['Add'](selectedItem);
        var list2 = $S04().Construct();
        list2['Add'](($closure0.selector)['get_SelectedItem']());
        ($closure0.selector)['RefreshSelectedItem']();
        ($closure0.selector)['OnSelectionChanged']($S02().Construct(list, list2));
      }
    }
  };

  function Selector_set_DisplayMemberPath (value) {
    this['SetValue']($thisType.DisplayMemberPathProperty, value);
  };

  function Selector_set_SelectedIndex (value) {
    this['SetValue']($thisType.SelectedIndexProperty, value);
  };

  function Selector_set_SelectedItem (value) {
    this['SetValue']($thisType.SelectedItemProperty, value);
  };

  function Selector_set_SelectedValue (value) {
    this['SetValue']($thisType.SelectedValueProperty, value);
  };

  function Selector_set_SelectedValuePath (value) {
    this['SetValue']($thisType.SelectedValuePathProperty, value);
  };

  function Selector_SetNewSelectedIndexInHtml (index) {
    throw $S03().Construct();
  };

  function Selector_SubscribeToDomSelectionChangedEvent (elementOnWhichToSubscribe) {
    var $closure0 = new ($T23())();
    $closure0.elementOnWhichToSubscribe = elementOnWhichToSubscribe;
    $closure0.$l$g4__this = this;
    $T24()['AttachToDomEvents']("change", $closure0.elementOnWhichToSubscribe, $T25()['New']($closure0, $T23().prototype['$lSubscribeToDomSelectionChangedEvent$gb__e'], function () { return JSIL.GetMethodInfo($asm00.Windows.UI.Xaml.Controls.Primitives.Selector_$l$gc__DisplayClassf, "$lSubscribeToDomSelectionChangedEvent$gb__e", JSIL.MethodSignature.Action($.Object), false); }));
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.ItemsControl"), 
      Name: "Windows.UI.Xaml.Controls.Primitives.Selector", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Selector__ctor
    );

    $.Method({Static:false, Public:false}, "AccessValueByApplyingPropertyPathIfAny", 
      new JSIL.MethodSignature($.Object, [$.Object, $.String]), 
      Selector_AccessValueByApplyingPropertyPathIfAny
    );

    $.Method({Static:false, Public:true }, "add_SelectionChanged", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Controls.SelectionChangedEventHandler")), 
      Selector_add_SelectionChanged
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CreateDomElement", 
      new JSIL.MethodSignature($.Object, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]), 
      Selector_CreateDomElement
    );

    $.Method({Static:true , Public:false}, "DisplayMemberPath_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Selector_DisplayMemberPath_Changed
    );

    $.Method({Static:false, Public:false, Virtual:true }, "DomSelectionChanged", 
      JSIL.MethodSignature.Action($.Object), 
      Selector_DomSelectionChanged
    )
      .Parameter(0, "element", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:true }, "get_DisplayMemberPath", 
      JSIL.MethodSignature.Return($.String), 
      Selector_get_DisplayMemberPath
    );

    $.Method({Static:false, Public:true }, "get_SelectedIndex", 
      JSIL.MethodSignature.Return($.Int32), 
      Selector_get_SelectedIndex
    );

    $.Method({Static:false, Public:true }, "get_SelectedItem", 
      JSIL.MethodSignature.Return($.Object), 
      Selector_get_SelectedItem
    );

    $.Method({Static:false, Public:true }, "get_SelectedValue", 
      JSIL.MethodSignature.Return($.Object), 
      Selector_get_SelectedValue
    );

    $.Method({Static:false, Public:true }, "get_SelectedValuePath", 
      JSIL.MethodSignature.Return($.String), 
      Selector_get_SelectedValuePath
    );

    $.Method({Static:true , Public:false}, "GetIndexOfElementInItems", 
      new JSIL.MethodSignature($.Int32, [$.Type, $.Object]), 
      Selector_GetIndexOfElementInItems
    );

    $.Method({Static:false, Public:false, Virtual:true }, "GetListOfNewlySelectedItems", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.IList`1", [$.Object]), [$.Object]), 
      Selector_GetListOfNewlySelectedItems
    )
      .Parameter(0, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false, Virtual:true }, "GetListOfSelectedItemsInCSharp", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.IList`1", [$.Object])), 
      Selector_GetListOfSelectedItemsInCSharp
    );

    $.Method({Static:false, Public:false, Virtual:true }, "GetSelectedIndex", 
      new JSIL.MethodSignature($.Int32, [$.Object]), 
      Selector_GetSelectedIndex
    )
      .Parameter(0, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false, Virtual:true }, "ManageSelectedIndex_Changed", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")), 
      Selector_ManageSelectedIndex_Changed
    );

    $.Method({Static:false, Public:false, Virtual:true }, "OnItemsSourceChanged_BeforeVisualUpdate", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Collections.IEnumerable"), $asm06.TypeRef("System.Collections.IEnumerable")]), 
      Selector_OnItemsSourceChanged_BeforeVisualUpdate
    );

    $.Method({Static:false, Public:false, Virtual:true }, "OnSelectionChanged", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Controls.SelectionChangedEventArgs")), 
      Selector_OnSelectionChanged
    );

    $.Method({Static:false, Public:false, Virtual:true }, "RefreshSelectedItem", 
      JSIL.MethodSignature.Void, 
      Selector_RefreshSelectedItem
    );

    $.Method({Static:false, Public:true }, "remove_SelectionChanged", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Controls.SelectionChangedEventHandler")), 
      Selector_remove_SelectionChanged
    );

    $.Method({Static:true , Public:false}, "SelectedIndex_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Selector_SelectedIndex_Changed
    );

    $.Method({Static:true , Public:false}, "SelectedItem_changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Selector_SelectedItem_changed
    );

    $.Method({Static:true , Public:false}, "SelectedValue_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Selector_SelectedValue_Changed
    );

    $.Method({Static:false, Public:true }, "set_DisplayMemberPath", 
      JSIL.MethodSignature.Action($.String), 
      Selector_set_DisplayMemberPath
    );

    $.Method({Static:false, Public:true }, "set_SelectedIndex", 
      JSIL.MethodSignature.Action($.Int32), 
      Selector_set_SelectedIndex
    );

    $.Method({Static:false, Public:true }, "set_SelectedItem", 
      JSIL.MethodSignature.Action($.Object), 
      Selector_set_SelectedItem
    );

    $.Method({Static:false, Public:true }, "set_SelectedValue", 
      JSIL.MethodSignature.Action($.Object), 
      Selector_set_SelectedValue
    );

    $.Method({Static:false, Public:true }, "set_SelectedValuePath", 
      JSIL.MethodSignature.Action($.String), 
      Selector_set_SelectedValuePath
    );

    $.Method({Static:false, Public:false, Virtual:true }, "SetNewSelectedIndexInHtml", 
      JSIL.MethodSignature.Action($.Int32), 
      Selector_SetNewSelectedIndexInHtml
    );

    $.Method({Static:false, Public:false, Virtual:true }, "SubscribeToDomSelectionChangedEvent", 
      JSIL.MethodSignature.Action($.Object), 
      Selector_SubscribeToDomSelectionChangedEvent
    )
      .Parameter(0, "elementOnWhichToSubscribe", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $['Field']({Static:false, Public:false}, "_selectionChangeIsOnIndex", $.Boolean); 
    $['Field']({Static:false, Public:false}, "_selectionChangeIsOnItem", $.Boolean); 
    $['Field']({Static:false, Public:false}, "_selectionChangeIsOnValue", $.Boolean); 
    $['Field']({Static:false, Public:false}, "_selectionChangedInCSharp", $.Boolean); 
    $['Field']({Static:false, Public:false}, "_selectionChangedInHtml", $.Boolean); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "SelectedIndexProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "SelectedItemProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "SelectedValueProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "SelectedValuePathProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "DisplayMemberPathProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:false, Public:false}, "SelectionChanged", $asm00.TypeRef("Windows.UI.Xaml.Controls.SelectionChangedEventHandler")); 
    function Selector__cctor () {
      $thisType.SelectedIndexProperty = $T00()['Register']("SelectedindexProperty", $T01().__Type__, $thisType.__Type__, $S00().Construct(-1, $T03()['New']($thisType, $thisType['SelectedIndex_Changed'], function () { return JSIL.GetMethodInfo($thisType, "SelectedIndex_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.SelectedItemProperty = $T00()['Register']("SelectedItem", $T04().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['SelectedItem_changed'], function () { return JSIL.GetMethodInfo($thisType, "SelectedItem_changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.SelectedValueProperty = $T00()['Register']("SelectedValue", $T04().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['SelectedValue_Changed'], function () { return JSIL.GetMethodInfo($thisType, "SelectedValue_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.SelectedValuePathProperty = $T00()['Register']("SelectedValuePath", $T05().__Type__, $thisType.__Type__, $S01().Construct($T05().Empty));
      $thisType.DisplayMemberPathProperty = $T00()['Register']("DisplayMemberPath", $T05().__Type__, $thisType.__Type__, $S00().Construct($T05().Empty, $T03()['New']($thisType, $thisType['DisplayMemberPath_Changed'], function () { return JSIL.GetMethodInfo($thisType, "DisplayMemberPath_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Selector__cctor
    );

    $.Property({Static:false, Public:true }, "SelectedIndex", $.Int32);

    $.Property({Static:false, Public:true }, "SelectedItem", $.Object);

    $.Property({Static:false, Public:true }, "SelectedValue", $.Object);

    $.Property({Static:false, Public:true }, "SelectedValuePath", $.String);

    $.Property({Static:false, Public:true }, "DisplayMemberPath", $.String);

    $.Event({Static:false, Public:true }, "SelectionChanged", $asm00.TypeRef("Windows.UI.Xaml.Controls.SelectionChangedEventHandler"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.Primitives.Selector+<>c__DisplayClass7 */ 

(function $l$gc__DisplayClass7$Members () {
  var $, $thisType;
  function $l$gc__DisplayClass7__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.Controls.Primitives.Selector+<>c__DisplayClass7", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClass7__ctor
    );

    $['Field']({Static:false, Public:true }, "selector", $asm00.TypeRef("Windows.UI.Xaml.Controls.Primitives.Selector")); 
    $['Field']({Static:false, Public:true }, "newValue", $.Object); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Windows.UI.Xaml.Controls.Primitives.Selector+<>c__DisplayClass9 */ 

(function $l$gc__DisplayClass9$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Primitives.Selector)) ();
  };

  function $l$gc__DisplayClass9__ctor () {
  };

  function $l$gc__DisplayClass9_$lSelectedValue_Changed$gb__6 (element) {
    return ((this.CS$$l$g8__locals8.selector)['AccessValueByApplyingPropertyPathIfAny'](element, this.selectedPropertyPath) === this.CS$$l$g8__locals8.newValue);
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.Controls.Primitives.Selector+<>c__DisplayClass9", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClass9__ctor
    );

    $.Method({Static:false, Public:true }, "$lSelectedValue_Changed$gb__6", 
      new JSIL.MethodSignature($.Boolean, [$.Object]), 
      $l$gc__DisplayClass9_$lSelectedValue_Changed$gb__6
    );

    $['Field']({Static:false, Public:true }, "CS$$l$g8__locals8", $asm00.TypeRef("Windows.UI.Xaml.Controls.Primitives.Selector+<>c__DisplayClass7")); 
    $['Field']({Static:false, Public:true }, "selectedPropertyPath", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Windows.UI.Xaml.Controls.Primitives.Selector+<>c__DisplayClassf */ 

(function $l$gc__DisplayClassf$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Object)) ();
  };

  function $l$gc__DisplayClassf__ctor () {
  };

  function $l$gc__DisplayClassf_$lSubscribeToDomSelectionChangedEvent$gb__e (e) {
    (this.$l$g4__this)['DomSelectionChanged'](this.elementOnWhichToSubscribe);
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.Controls.Primitives.Selector+<>c__DisplayClassf", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClassf__ctor
    );

    $.Method({Static:false, Public:true }, "$lSubscribeToDomSelectionChangedEvent$gb__e", 
      JSIL.MethodSignature.Action($.Object), 
      $l$gc__DisplayClassf_$lSubscribeToDomSelectionChangedEvent$gb__e
    );

    $['Field']({Static:false, Public:true }, "$l$g4__this", $asm00.TypeRef("Windows.UI.Xaml.Controls.Primitives.Selector")); 
    $['Field']({Static:false, Public:true }, "elementOnWhichToSubscribe", $.Object); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Windows.UI.Xaml.Controls.Primitives.MultiSelector */ 

(function MultiSelector$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Collections.IList)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Primitives.Selector)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm01.System.Collections.ObjectModel.ObservableCollection$b1.Of($asm06.System.Object))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm01.System.Collections.Specialized.NotifyCollectionChangedEventHandler)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Collections.IEnumerable)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.Collections.ICollection)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_WorkaroundObservableCollectionBugWithJSIL)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.ObjectModel.ObservableCollection`1", [$asm06.TypeRef("System.Object")]), null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm06.System.Collections.ICollection.get_Count)) ();
  };

  function MultiSelector__ctor () {
    $T03().prototype['_ctor'].call(this);
    this['set_SelectedItems']($S01().Construct());
    ($T04().$Cast(this['get_SelectedItems']()))['add_CollectionChanged']($T05()['New'](this, $thisType.prototype['SelectedItems_CollectionChanged'], function () { return JSIL.GetMethodInfo($thisType, "SelectedItems_CollectionChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs]), false); }));
  };

  function MultiSelector_get_SelectedItems () {
    return $T01().$Cast(this['GetValue']($thisType.SelectedItemsProperty));
  };

  function MultiSelector_OnItemsSourceChanged_BeforeVisualUpdate (oldValue, newValue) {
    $T03().prototype['OnItemsSourceChanged_BeforeVisualUpdate'].call(this, oldValue, newValue);
    if (!((this['get_SelectedItems']() === null) || (($IM00().Call(this['get_SelectedItems'](), null) | 0) === 0))) {
      $T09()['Clear'](this['get_SelectedItems']());
    }
  };

  function MultiSelector_RefreshSelectedItems (e) {
  };

  function MultiSelector_SelectedItems_CollectionChanged (sender, e) {
    this['RefreshSelectedItems'](e);
  };

  function MultiSelector_set_SelectedItems (value) {
    this['SetValue']($thisType.SelectedItemsProperty, value);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.Primitives.Selector"), 
      Name: "Windows.UI.Xaml.Controls.Primitives.MultiSelector", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void, 
      MultiSelector__ctor
    );

    $.Method({Static:false, Public:true }, "get_SelectedItems", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.IList")), 
      MultiSelector_get_SelectedItems
    );

    $.Method({Static:false, Public:false, Virtual:true }, "OnItemsSourceChanged_BeforeVisualUpdate", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Collections.IEnumerable"), $asm06.TypeRef("System.Collections.IEnumerable")]), 
      MultiSelector_OnItemsSourceChanged_BeforeVisualUpdate
    );

    $.Method({Static:false, Public:false, Virtual:true }, "RefreshSelectedItems", 
      JSIL.MethodSignature.Action($asm01.TypeRef("System.Collections.Specialized.NotifyCollectionChangedEventArgs")), 
      MultiSelector_RefreshSelectedItems
    );

    $.Method({Static:false, Public:false}, "SelectedItems_CollectionChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm01.TypeRef("System.Collections.Specialized.NotifyCollectionChangedEventArgs")]), 
      MultiSelector_SelectedItems_CollectionChanged
    );

    $.Method({Static:false, Public:false}, "set_SelectedItems", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Collections.IList")), 
      MultiSelector_set_SelectedItems
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "SelectedItemsProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function MultiSelector__cctor () {
      $thisType.SelectedItemsProperty = $T00()['Register']("SelectedItems", $T01().__Type__, $thisType.__Type__, $S00().Construct(null));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      MultiSelector__cctor
    );

    $.Property({Static:false, Public:true }, "SelectedItems", $asm06.TypeRef("System.Collections.IList"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Windows.Controls.DataGrid */ 

(function DataGrid$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.Style)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm01.System.Collections.ObjectModel.ObservableCollection$b1.Of($asm00.System.Windows.Controls.DataGridColumn))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.System.Windows.Controls.DataGridSelectionMode)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.Brush)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.SolidColorBrush)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Windows.UI.Colors)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Windows.UI.Xaml.DataTemplate)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm06.System.Object, $asm00.System.Windows.Controls.DataGridRow))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Primitives.MultiSelector)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.RowDefinition)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm00.Windows.UI.Xaml.GridLength)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm06.System.Collections.ObjectModel.Collection$b1.Of($asm00.Windows.UI.Xaml.Controls.RowDefinition))) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Grid)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm00.System.Windows.Controls.DataGridRow)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm00.System.Windows.Controls.DataGridColumn))) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm06.System.Collections.ObjectModel.Collection$b1.Of($asm00.System.Windows.Controls.DataGridColumn))) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm06.System.Collections.IEnumerator)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm00.System.Windows.Controls.DataGridColumn)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm00.System.Windows.Controls.DataGridCell)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ContentControl)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm00.System.Windows.Controls.DataGridCell))) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Primitives.ButtonBase)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventHandler)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm06.System.Collections.ObjectModel.Collection$b1.Of($asm00.Windows.UI.Xaml.UIElement))) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Panel)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Control)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm06.System.IDisposable)) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ColumnDefinition)) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm06.System.Collections.ObjectModel.Collection$b1.Of($asm00.Windows.UI.Xaml.Controls.ColumnDefinition))) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm00.System.Windows.Controls.Primitives.DataGridColumnHeader))) ();
  };
  var $T25 = function () {
    return ($T25 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T26 = function () {
    return ($T26 = JSIL.Memoize($asm00.System.Windows.Controls.Primitives.DataGridColumnHeader)) ();
  };
  var $T27 = function () {
    return ($T27 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.Binding)) ();
  };
  var $T28 = function () {
    return ($T28 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T29 = function () {
    return ($T29 = JSIL.Memoize($asm00.System.Windows.Controls.DataGridBoundColumn)) ();
  };
  var $T2A = function () {
    return ($T2A = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.BindingMode)) ();
  };
  var $T2B = function () {
    return ($T2B = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T2C = function () {
    return ($T2C = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventArgs)) ();
  };
  var $T2D = function () {
    return ($T2D = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Primitives.Selector)) ();
  };
  var $T2E = function () {
    return ($T2E = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T2F = function () {
    return ($T2F = JSIL.Memoize($asm08.System.Linq.Enumerable)) ();
  };
  var $T30 = function () {
    return ($T30 = JSIL.Memoize($asm00.Windows.UI.Xaml.Visibility)) ();
  };
  var $T31 = function () {
    return ($T31 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ItemsControl)) ();
  };
  var $T32 = function () {
    return ($T32 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ItemCollection)) ();
  };
  var $T33 = function () {
    return ($T33 = JSIL.Memoize($asm06.System.Type)) ();
  };
  var $T34 = function () {
    return ($T34 = JSIL.Memoize(System.Array.Of($asm06.System.Type))) ();
  };
  var $T35 = function () {
    return ($T35 = JSIL.Memoize($asm06.System.Collections.ObjectModel.Collection$b1.Of($asm06.System.Object))) ();
  };
  var $T36 = function () {
    return ($T36 = JSIL.Memoize(System.Array.Of($asm06.System.Reflection.PropertyInfo))) ();
  };
  var $T37 = function () {
    return ($T37 = JSIL.Memoize($asm06.System.Reflection.PropertyInfo)) ();
  };
  var $T38 = function () {
    return ($T38 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T39 = function () {
    return ($T39 = JSIL.Memoize($asm06.System.Reflection.MemberInfo)) ();
  };
  var $T3A = function () {
    return ($T3A = JSIL.Memoize($asm00.System.Windows.Controls.DataGridTextColumn)) ();
  };
  var $T3B = function () {
    return ($T3B = JSIL.Memoize($asm00.System.Windows.Controls.DataGridCheckBoxColumn)) ();
  };
  var $T3C = function () {
    return ($T3C = JSIL.Memoize($asm01.System.Uri)) ();
  };
  var $T3D = function () {
    return ($T3D = JSIL.Memoize($asm00.System.Windows.Controls.DataGridHyperlinkColumn)) ();
  };
  var $T3E = function () {
    return ($T3E = JSIL.Memoize($asm06.System.Enum)) ();
  };
  var $T3F = function () {
    return ($T3F = JSIL.Memoize($asm00.System.Windows.Controls.DataGridComboBoxColumn)) ();
  };
  var $T40 = function () {
    return ($T40 = JSIL.Memoize($asm00.Windows.UI.Color)) ();
  };
  var $T41 = function () {
    return ($T41 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Grid_InternalHelpers)) ();
  };
  var $T42 = function () {
    return ($T42 = JSIL.Memoize($asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs)) ();
  };
  var $T43 = function () {
    return ($T43 = JSIL.Memoize($asm06.System.Collections.IEnumerable)) ();
  };
  var $T44 = function () {
    return ($T44 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm06.System.Object))) ();
  };
  var $T45 = function () {
    return ($T45 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_ListsHelper)) ();
  };
  var $T46 = function () {
    return ($T46 = JSIL.Memoize($asm06.System.Collections.ICollection)) ();
  };
  var $T47 = function () {
    return ($T47 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_WorkaroundObservableCollectionBugWithJSIL)) ();
  };
  var $T48 = function () {
    return ($T48 = JSIL.Memoize($asm06.System.Collections.IList)) ();
  };
  var $T49 = function () {
    return ($T49 = JSIL.Memoize($asm06.System.InvalidOperationException)) ();
  };
  var $T4A = function () {
    return ($T4A = JSIL.Memoize($asm01.System.Collections.Specialized.NotifyCollectionChangedAction)) ();
  };
  var $T4B = function () {
    return ($T4B = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2_ValueCollection_Enumerator.Of($asm06.System.Object, $asm00.System.Windows.Controls.DataGridRow))) ();
  };
  var $T4C = function () {
    return ($T4C = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2_ValueCollection.Of($asm06.System.Object, $asm00.System.Windows.Controls.DataGridRow))) ();
  };
  var $T4D = function () {
    return ($T4D = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ItemsPanelTemplate)) ();
  };
  var $T4E = function () {
    return ($T4E = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.StackPanel)) ();
  };
  var $T4F = function () {
    return ($T4F = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.Media.SolidColorBrush"), [$asm00.TypeRef("Windows.UI.Color")]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("System.Object"), $asm00.TypeRef("System.Windows.Controls.DataGridRow")]), null))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.ObjectModel.ObservableCollection`1", [$asm00.TypeRef("System.Windows.Controls.DataGridColumn")]), null))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("System.Windows.Controls.Primitives.DataGridColumnHeader")]), null))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.Data.Binding"), [$asm06.TypeRef("System.String")]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("System.Boolean"), [$asm06.TypeRef("System.Type")]))) ();
  };
  var $S08 = function () {
    return ($S08 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Collections.IEnumerable"), $asm06.TypeRef("System.Collections.IEnumerable")]))) ();
  };
  var $S09 = function () {
    return ($S09 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.InvalidOperationException"), [$asm06.TypeRef("System.String")]))) ();
  };
  var $S0A = function () {
    return ($S0A = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Exception"), [$asm06.TypeRef("System.String")]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm06.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm00.System.Windows.Controls.DataGridColumn).get_Current)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm06.System.IDisposable.Dispose)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm06.System.Collections.IEnumerable.GetEnumerator)) ();
  };
  var $IM04 = function () {
    return ($IM04 = JSIL.Memoize($asm06.System.Collections.IEnumerator.get_Current)) ();
  };
  var $IM05 = function () {
    return ($IM05 = JSIL.Memoize($asm06.System.Collections.ICollection.get_Count)) ();
  };
  var $IM06 = function () {
    return ($IM06 = JSIL.Memoize($asm06.System.Collections.IList.Add)) ();
  };

  function DataGrid__ctor () {
    this._objectsToDisplay = $S03().Construct();
    this._areItemsInVisualTree = false;
    this._currentEditionElement = null;
    this._currentCell = null;
    $T0C().prototype['_ctor'].call(this);
    this['set_Columns']($S04().Construct());
  };

  function DataGrid_AddChild (childData) {
    var rowDefinition = new ($T0E())();
    (rowDefinition.Height = $T0F()['get_Auto']()['MemberwiseClone']());
    ((this._grid)['get_RowDefinitions']())['Add'](rowDefinition);
    var dataGridRow = new ($T12())();
    dataGridRow._datagrid = this;
    dataGridRow._representationInRow.RowDefinition = rowDefinition;
    dataGridRow._rowIndex = (((((this._grid)['get_RowDefinitions']())['get_Count']() | 0) - 1) | 0);
    dataGridRow['set_HeaderTemplate'](this['GetActiveRowHeaderTemplate']());
    var num = 1;
    var enumerator = (this['get_Columns']())['GetEnumerator']();
    try {

      while ($IM00().Call(enumerator, null)) {
        var current = $IM01().Call(enumerator, null);
        var dataGridCell = new ($T18())();
        dataGridCell.DataGridCell$Item$value = childData;
        dataGridCell['set_DataContext'](childData);
        dataGridCell['set_Column'](current);
        var frameworkElement = current['GenerateElement'](childData);
        $T11()['SetRow'](dataGridCell, (((((this._grid)['get_RowDefinitions']())['get_Count']() | 0) - 1) | 0));
        $T11()['SetColumn'](dataGridCell, num);
        dataGridCell['set_Content'](frameworkElement);
        frameworkElement['set_IsEnabled'](false);
        (dataGridRow._representationInRow.ElementsInRow)['Add'](dataGridCell);
        dataGridCell['add_Click']($T1D()['New'](this, $thisType.prototype['CellElement_Click'], function () { return JSIL.GetMethodInfo($thisType, "CellElement_Click", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm00.Windows.UI.Xaml.RoutedEventArgs]), false); }));
        ((this._grid)['get_Children']())['Add'](dataGridCell);
        dataGridCell['set_Background'](this['get_UnselectedItemBackground']());
        dataGridCell['set_Foreground'](this['get_UnselectedItemForeground']());
        num = ((num + 1) | 0);
      }
    } finally {
      if (enumerator !== null) {
        $IM02().Call(enumerator, null);
      }
    }
    (this._objectsToDisplay)['Add'](childData, dataGridRow);
  };

  function DataGrid_AddColumns (columnsToAdd) {
    var $temp00;
    if (columnsToAdd !== null) {
      var columnDefinition = new ($T22())();
      (columnDefinition.Width = $T0F()['get_Auto']()['MemberwiseClone']());
      ((this._grid)['get_ColumnDefinitions']())['Add'](columnDefinition);
      var list = $S05().Construct();
      $T25()['DetachVisualChildIfNotNull'](this._grid, this);
      var num = 1;
      var enumerator = columnsToAdd['GetEnumerator']();
      try {

        while ($IM00().Call(enumerator, null)) {
          var current = $IM01().Call(enumerator, null);
          current._parent = this;
          var columnDefinition2 = new ($T22())();
          current._gridColumn = columnDefinition2;
          $T17()['UpdateGridColumnWidth'](current);
          ((this._grid)['get_ColumnDefinitions']())['Add'](columnDefinition2);
          var header = current['GetHeader']();
          if (current['get_HeaderStyle']() !== null) {
            header['set_Style'](current['get_HeaderStyle']());
          } else if (this['get_ColumnHeaderStyle']() !== null) {
            header['set_Style'](this['get_ColumnHeaderStyle']());
          }
          $T11()['SetColumn'](header, num);
          list['Add'](header);
          var binding = current['INTERNAL_GetBinding']($T29().BindingProperty);
          if (binding !== null) {
            if (!((binding['get_Mode']() !== $T2A().OneWay) || !binding['INTERNAL_WasModeSetByUserRatherThanDefaultValue']())) {
              current['set_IsReadOnly'](true);
            }
          }
          num = ((num + 1) | 0);
        }
      } finally {
        if (enumerator !== null) {
          $IM02().Call(enumerator, null);
        }
      }

      for (var a$0 = list._items, i$0 = 0, l$0 = (list._size | 0); i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current2 = a$0[i$0];
        var column = ($T11()['GetColumn'](current2) | 0);
        ((this._grid)['get_Children']())['Add'](current2);
      }
      $T25()['AttachVisualChildIfNotAlreadyAttached'](this._grid, this);
    }
  };

  function DataGrid_AddElementToGrid (elementToAdd) {
    ((this._grid)['get_Children']())['Add'](elementToAdd);
  };

  function DataGrid_CellElement_Click (sender, e) {
    var dataGridCell = $T18().$Cast(sender);
    if (this._currentCell !== dataGridCell) {
      if (!((((this['get_SelectionMode']())['valueOf']() | 0) !== 0) || (this['get_SelectedItem']() === null))) {
        this['UnselectItem'](this['get_SelectedItem']());
      }
      if (this._currentCell !== null) {
        this['LeaveCellEditionMode']();
      }
      this['SelectItem'](dataGridCell.DataGridCell$Item$value);
      this._currentCell = dataGridCell;
    } else {
      this['EnterCellEditionMode'](dataGridCell);
    }
  };

  function DataGrid_ColumnHeaderStyle_Changed (d, e) {
    if ($thisType.$Is(d)) {
      var dataGrid = $thisType.$Cast(d);
      if ($T25()['IsElementInVisualTree'](dataGrid)) {
        var enumerator = (dataGrid['get_Columns']())['GetEnumerator']();
        try {

          while ($IM00().Call(enumerator, null)) {
            var current = $IM01().Call(enumerator, null);
            current['SetHeaderStyleIfColumnsStyleNotSet']($T03().$Cast(e['get_NewValue']()));
          }
        } finally {
          if (enumerator !== null) {
            $IM02().Call(enumerator, null);
          }
        }
      }
    }
  };

  function DataGrid_Columns_Changed (d, e) {
  };

  function DataGrid_CurrentEditionElement_LostFocus (sender, e) {
    ($T19().$Cast(sender))['remove_LostFocus']($T1D()['New'](this, $thisType.prototype['CurrentEditionElement_LostFocus'], function () { return JSIL.GetMethodInfo($thisType, "CurrentEditionElement_LostFocus", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm00.Windows.UI.Xaml.RoutedEventArgs]), false); }));
    this['LeaveCellEditionMode']();
  };

  function DataGrid_DomSelectionChanged (element) {
  };

  function DataGrid_EnterCellEditionMode (cell) {
    if (!(this['get_IsReadOnly']() || 
        !this['get_IsEnabled']() || (cell['get_Column']())['get_IsReadOnly']())) {
      var item = cell.DataGridCell$Item$value;
      var column = ($T11()['GetColumn'](cell) | 0);
      var dataGridColumn = $T2F()['ElementAt$b1']($T17())(this['get_Columns'](), ((column - 1) | 0));
      var uIElement = dataGridColumn['GenerateEditingElement'](cell, item);
      if (uIElement !== null) {
        cell['set_Visibility']($T30().Collapsed);
        $T11()['SetRow'](uIElement, $T11()['GetRow'](cell));
        $T11()['SetColumn'](uIElement, column);
        uIElement['add_LostFocus']($T1D()['New'](this, $thisType.prototype['CurrentEditionElement_LostFocus'], function () { return JSIL.GetMethodInfo($thisType, "CurrentEditionElement_LostFocus", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm00.Windows.UI.Xaml.RoutedEventArgs]), false); }));
        ((this._grid)['get_Children']())['Add'](uIElement);
      } else {
        ($T19().$Cast(cell['get_Content']()))['remove_LostFocus']($T1D()['New'](this, $thisType.prototype['CurrentEditionElement_LostFocus'], function () { return JSIL.GetMethodInfo($thisType, "CurrentEditionElement_LostFocus", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm00.Windows.UI.Xaml.RoutedEventArgs]), false); }));
        ($T19().$Cast(cell['get_Content']()))['add_LostFocus']($T1D()['New'](this, $thisType.prototype['CurrentEditionElement_LostFocus'], function () { return JSIL.GetMethodInfo($thisType, "CurrentEditionElement_LostFocus", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm00.Windows.UI.Xaml.RoutedEventArgs]), false); }));
      }
      this._currentCell = cell;
      cell['set_IsEditing'](true);
      this._currentEditionElement = uIElement;
    }
  };

  function DataGrid_GenerateColumns () {
    if (this.AutoGeneratedColumns !== null) {
      var enumerator = (this.AutoGeneratedColumns)['GetEnumerator']();
      try {

        while ($IM00().Call(enumerator, null)) {
          var current = $IM01().Call(enumerator, null);
          (this['get_Columns']())['Remove'](current);
        }
      } finally {
        if (enumerator !== null) {
          $IM02().Call(enumerator, null);
        }
      }
      (this.AutoGeneratedColumns)['Clear']();
    }
    if (!((this['get_Items']() === null) && (this['get_ItemsSource']() === null))) {
      var type = null;
      if (this['get_ItemsSource']() !== null) {
        var type2 = JSIL['GetType'](this['get_ItemsSource']());
        if ((type2['get_GenericTypeArguments']().length | 0) > 0) {
          type = type2['get_GenericTypeArguments']()[0];
        }
      }
      if ($T33()['op_Equality'](type, null)) {
        if (!((this['get_Items']() === null) || (((this['get_Items']())['get_Count']() | 0) <= 0))) {
          type = JSIL['GetType']((this['get_Items']())['get_Item'](0));
        }
      }
      if ($T33()['op_Inequality'](type, null)) {
        if (this.AutoGeneratedColumns === null) {
          this.AutoGeneratedColumns = $S04().Construct();
        }
        var properties = type['GetProperties']();

        for (var i = 0; i < (properties.length | 0); i = ((i + 1) | 0)) {
          var propertyInfo = properties[i];
          var name = propertyInfo['get_Name']();
          var propertyType = propertyInfo['get_PropertyType']();
          var binding = $S06().Construct(name);
          if ($S07().CallVirtual("IsAssignableFrom", null, $T38().__Type__, propertyType)) {
            var dataGridBoundColumn = new ($T3A())();
          } else if ($S07().CallVirtual("IsAssignableFrom", null, $T01().__Type__, propertyType)) {
            dataGridBoundColumn = new ($T3B())();
          } else if ($S07().CallVirtual("IsAssignableFrom", null, $T3C().__Type__, propertyType)) {
            dataGridBoundColumn = new ($T3D())();
          } else if ($S07().CallVirtual("IsAssignableFrom", null, $T3E().__Type__, propertyType)) {
            dataGridBoundColumn = new ($T3F())();
          } else {
            dataGridBoundColumn = new ($T3A())();
            dataGridBoundColumn['set_IsReadOnly'](!propertyType['get_IsValueType']());
          }
          dataGridBoundColumn['set_IsAutoGenerated'](true);
          dataGridBoundColumn['set_Header'](name);
          dataGridBoundColumn['SetBinding']($T29().BindingProperty, binding);
          (this.AutoGeneratedColumns)['Add'](dataGridBoundColumn);
          (this['get_Columns']())['Add'](dataGridBoundColumn);
        }
      }
    }
  };

  function DataGrid_GenerateStringForGridLines (brush) {
    var text = "thin ";
    if ($T08().$Is(brush)) {
      text = (JSIL.ConcatString(text, "solid "));
      text = (JSIL.ConcatString(text, (($T08().$Cast(brush))['get_Color']()['MemberwiseClone']())['INTERNAL_ToHtmlString']()));
    } else {
      text = (JSIL.ConcatString(text, "solid black"));
    }
    return text;
  };

  function DataGrid_get_AutoGenerateColumns () {
    return $T01().$Cast(this['GetValue']($thisType.AutoGenerateColumnsProperty));
  };

  function DataGrid_get_ColumnHeaderStyle () {
    return $T03().$Cast(this['GetValue']($thisType.ColumnHeaderStyleProperty));
  };

  function DataGrid_get_Columns () {
    return $T05().$Cast(this['GetValue']($thisType.ColumnsProperty));
  };

  function DataGrid_get_HorizontalGridLinesBrush () {
    return $T07().$Cast(this['GetValue']($thisType.HorizontalGridLinesBrushProperty));
  };

  function DataGrid_get_IsReadOnly () {
    return $T01().$Cast(this['GetValue']($thisType.IsReadOnlyProperty));
  };

  function DataGrid_get_RowHeaderTemplate () {
    return $T0A().$Cast(this['GetValue']($thisType.RowHeaderTemplateProperty));
  };

  function DataGrid_get_SelectedItemBackground () {
    return $T07().$Cast(this['GetValue']($thisType.SelectedItemBackgroundProperty));
  };

  function DataGrid_get_SelectedItemForeground () {
    return $T07().$Cast(this['GetValue']($thisType.SelectedItemForegroundProperty));
  };

  function DataGrid_get_SelectionMode () {
    return $T06().$Cast(this['GetValue']($thisType.SelectionModeProperty));
  };

  function DataGrid_get_UnselectedItemBackground () {
    return $T07().$Cast(this['GetValue']($thisType.UnselectedItemBackgroundProperty));
  };

  function DataGrid_get_UnselectedItemForeground () {
    return $T07().$Cast(this['GetValue']($thisType.UnselectedItemForegroundProperty));
  };

  function DataGrid_get_VerticalGridLinesBrush () {
    return $T07().$Cast(this['GetValue']($thisType.VerticalGridLinesBrushProperty));
  };

  function DataGrid_GetActiveRowHeaderTemplate () {
    if (this['get_RowHeaderTemplate']() === null) {
      if (this['get_SelectionMode']() === $T06().Extended) {
        var result = $T12().DefaultTemplateForExtendedSelectionMode;
        return result;
      }
    }
    result = this['get_RowHeaderTemplate']();
    return result;
  };

  function DataGrid_HorizontalGridLinesBrush_Changed (sender, e) {
    var dataGrid = $thisType.$Cast(sender);
    if ($T25()['IsElementInVisualTree'](dataGrid)) {
      dataGrid._grid.INTERNAL_StringToSetHorizontalGridLinesInCss = dataGrid['GenerateStringForGridLines']($T07().$Cast(e['get_NewValue']()));
      $T41()['RefreshGridLines'](
        dataGrid._grid, 
        dataGrid._grid._currentCellsStructure, 
        (dataGrid._grid)['get_ColumnDefinitions'](), 
        (dataGrid._grid)['get_RowDefinitions']()
      );
    }
  };

  function DataGrid_INTERNAL_OnAttachedToVisualTree () {
    if (this._grid === null) {
      this['MakeUIStructure']();
      this._grid.INTERNAL_StringToSetVerticalGridLinesInCss = "thin solid black";
      this._grid.INTERNAL_StringToSetHorizontalGridLinesInCss = "thin solid black";
    }
    $T25()['AttachVisualChildIfNotAlreadyAttached'](this._grid, this);
    if (!((this._renderedItemsPanelTemplate !== null) || (this['get_ItemsPanel']() === null))) {
      this['UpdateItemsPanel'](this['get_ItemsPanel']());
    } else if (this._renderedItemsPanelTemplate !== null) {
      this['UpdateChildrenInVisualTree'](null, this['get_Items'](), false);
    }
  };

  function DataGrid_INTERNAL_OnDetachedFromVisualTree () {
    $T28().prototype['INTERNAL_OnDetachedFromVisualTree'].call(this);
    this._areItemsInVisualTree = false;
  };

  function DataGrid_IsReadonly_Changed (d, e) {
  };

  function DataGrid_LeaveCellEditionMode () {
    if (this._currentCell !== null) {
      var dataContext = (this._currentCell)['get_DataContext']();
      (this._currentCell)['set_DataContext'](null);
      (this._currentCell)['set_DataContext'](dataContext);
      (this._currentCell)['set_Visibility']($T30().Visible);
      if (this._currentEditionElement !== null) {
        ((this._grid)['get_Children']())['Remove'](this._currentEditionElement);
        ($T19().$Cast(this._currentEditionElement))['set_DataContext'](null);
      }
      (this._currentCell)['set_IsEditing'](false);
      this._currentCell = null;
      this._currentEditionElement = null;
    }
  };

  function DataGrid_MakeUIStructure () {
    this._grid = new ($T11())();
    var arg_2A_0 = (this._grid)['get_RowDefinitions']();
    var rowDefinition = new ($T0E())();
    (rowDefinition.Height = $T0F()['get_Auto']()['MemberwiseClone']());
    arg_2A_0['Add'](rowDefinition);
    if (this['get_AutoGenerateColumns']()) {
      this['GenerateColumns']();
    }
    this['AddColumns'](this['get_Columns']());
  };

  function DataGrid_ManageCollectionChanged (e) {
    switch ((e['get_Action']())['valueOf']()) {
      case 0: 
        if (this._renderedItemsPanelTemplate !== null) {
          var flag = this['get_ItemsSource']() === null;
          if (!flag) {
            var enumerator = $IM03().Call(this['get_ItemsSource'](), null);
            try {
              if ($IM00().Call(enumerator, null)) {
                var current = $IM04().Call(enumerator, null);
                flag = false;
              }
            } finally {
              var disposable = $T21().$As(enumerator);
              if (disposable !== null) {
                $IM02().Call(disposable, null);
              }
            }
          }
          if (!(!this['get_AutoGenerateColumns']() || !flag)) {
            if (((this['get_Items']())['get_Count']() | 0) === 1) {
              this['UpdateUIStructure']();
            }
          }
          var list = $T45()['ConvertToListOfObjectsOrNull'](this['get_Items']());

          for (var i = ((($IM05().Call(e['get_NewItems'](), null) | 0) - 1) | 0); i >= 0; i = ((i - 1) | 0)) {
            list['RemoveAt']((((e['get_NewStartingIndex']() | 0) + i) | 0));
          }
          this['UpdateChildrenInVisualTree'](list, this['get_Items'](), true);
        }
        break;

      case 1: 
        if (this._renderedItemsPanelTemplate !== null) {
          var list2 = $T45()['ConvertToListOfObjectsOrNull'](this['get_Items']());
          var list3 = $T45()['ConvertToListOfObjectsOrNull'](e['get_OldItems']());

          for (i = 0; i < (list3['get_Count']() | 0); i = ((i + 1) | 0)) {
            var text = ((e['get_OldStartingIndex']()).toString());
            if ((e['get_OldStartingIndex']() | 0) >= 0) {
              list2['Insert'](
                (((e['get_OldStartingIndex']() | 0) + i) | 0), 
                list3['get_Item'](i)
              );
            } else {
              list2['Add'](list3['get_Item'](i));
            }
          }
          this['UpdateChildrenInVisualTree'](list2, this['get_Items'](), true);
        }
        break;

      case 4: 
        if (this._renderedItemsPanelTemplate !== null) {
          this['RemoveAllChildren']();
        }
        break;

    }
  };

  function DataGrid_ManageSelectedIndex_Changed (e) {
    $T2D().prototype['ManageSelectedIndex_Changed'].call(this, e);
    if (!((e['get_OldValue']() === null) || 
        ($T13().$Cast(e['get_OldValue']()) < 0) || (this['get_SelectionMode']() !== $T06().Single))) {
      $T47()['Clear'](this['get_SelectedItems']());
    }
    if (!((e['get_NewValue']() === null) || ($T13().$Cast(e['get_NewValue']()) < 0))) {
      if (this['get_SelectionMode']() === $T06().Single) {
        $T47()['Clear'](this['get_SelectedItems']());
        $IM06().Call(this['get_SelectedItems'](), null, (this['get_Items']())['get_Item']($T13().$Cast(e['get_NewValue']())));
      } else if ($T47()['Contains'](
          this['get_SelectedItems'](), 
          e['get_NewValue']()
        )) {
        $IM06().Call(this['get_SelectedItems'](), null, (this['get_Items']())['get_Item']($T13().$Cast(e['get_NewValue']())));
      }
    }
  };

  function DataGrid_OnCollectionChanged (sender, e) {
    if (!((e['get_NewItems']() === null) && (e['get_NewItems']() !== null))) {
      var dataGrid = $thisType.$Cast(sender);
      var oldItems = e['get_OldItems']();
      $S08().CallVirtual("OnItemsSourceChanged", null, dataGrid, oldItems, e['get_NewItems']());
      return;
    }
    throw $S09().Construct("ItemsControl.ItemsSource must be of type IEnumerable.");
  };

  function DataGrid_OnItemsSourceChanged_BeforeVisualUpdate (oldValue, newValue) {
    if (!((newValue === oldValue) && this._areItemsInVisualTree)) {
      if ($T25()['IsElementInVisualTree'](this)) {
        var left = null;
        if (oldValue !== null) {
          var enumerator = $IM03().Call(oldValue, null);
          try {
            if ($IM00().Call(enumerator, null)) {
              var current = $IM04().Call(enumerator, null);
              left = JSIL['GetType'](current);
            }
          } finally {
            var disposable = $T21().$As(enumerator);
            if (disposable !== null) {
              $IM02().Call(disposable, null);
            }
          }
        }
        var type = null;
        if (newValue !== null) {
          enumerator = $IM03().Call(newValue, null);
          try {
            if ($IM00().Call(enumerator, null)) {
              var current2 = $IM04().Call(enumerator, null);
              type = JSIL['GetType'](current2);
            }
          } finally {
            disposable = $T21().$As(enumerator);
            if (disposable !== null) {
              $IM02().Call(disposable, null);
            }
          }
        }
        if ($T33()['op_Inequality'](left, type)) {
          if (this.AutoGeneratedColumns !== null) {
            var enumerator2 = (this.AutoGeneratedColumns)['GetEnumerator']();
            try {

              while ($IM00().Call(enumerator2, null)) {
                var current3 = $IM01().Call(enumerator2, null);
                (this['get_Columns']())['Remove'](current3);
              }
            } finally {
              if (enumerator2 !== null) {
                $IM02().Call(enumerator2, null);
              }
            }
            (this.AutoGeneratedColumns)['Clear']();
          }
          if ($T33()['op_Inequality'](type, null)) {
            this['UpdateUIStructure']();
          }
        }
      }
    }
  };

  function DataGrid_RefreshSelectedItems (e) {
    var $temp00, $temp01;
    if (e['get_Action']() === $T4A().Reset) {
      this['UnselectAllItems']();
    }
    if (e['get_OldItems']() !== null) {
      var list = $T45()['ConvertToListOfObjectsOrNull'](e['get_OldItems']());

      for (var a$0 = list._items, i$0 = 0, l$0 = (list._size | 0); i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        this['SetItemVisualSelectionState'](current, false);
      }
    }
    if (e['get_NewItems']() !== null) {
      var list2 = $T45()['ConvertToListOfObjectsOrNull'](e['get_NewItems']());

      for (var a$1 = list2._items, i$1 = 0, l$1 = (list2._size | 0); i$1 < l$1; ($temp01 = i$1, 
          i$1 = ((i$1 + 1) | 0), 
          $temp01)) {
        current = a$1[i$1];
        this['SetItemVisualSelectionState'](current, true);
      }
    }
  };

  function DataGrid_RemoveAllChildren () {
    var $temp00;
    var enumerator = ((this._objectsToDisplay)['get_Values']())['GetEnumerator']();

    while ($T4B().prototype['MoveNext'].call(enumerator)) {
      var current = $T4B().prototype['get_Current'].call(enumerator);

      for (var a$0 = current._representationInRow.ElementsInRow._items, i$0 = 0, l$0 = (current._representationInRow.ElementsInRow._size | 0); i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current2 = a$0[i$0];
        ((this._grid)['get_Children']())['Remove'](current2);
      }
      ((this._grid)['get_RowDefinitions']())['Remove'](current._representationInRow.RowDefinition);
    }
    (this._objectsToDisplay)['Clear']();
  };

  function DataGrid_RemoveChild (childData) {
    var $temp00;
    var dataGridRow = (this._objectsToDisplay)['get_Item'](childData);

    for (var a$0 = dataGridRow._representationInRow.ElementsInRow._items, i$0 = 0, l$0 = (dataGridRow._representationInRow.ElementsInRow._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      ((this._grid)['get_Children']())['Remove'](current);
    }
    ((this._grid)['get_RowDefinitions']())['Remove'](dataGridRow._representationInRow.RowDefinition);
    (this._objectsToDisplay)['Remove'](childData);
  };

  function DataGrid_RemoveElementFromGrid (elementToRemove) {
    ((this._grid)['get_Children']())['Remove'](elementToRemove);
  };

  function DataGrid_RowHeaderTemplate_Changed (d, e) {
    var dataGrid = $thisType.$Cast(d);
    var activeRowHeaderTemplate = dataGrid['GetActiveRowHeaderTemplate']();
    var enumerator = ((dataGrid._objectsToDisplay)['get_Values']())['GetEnumerator']();

    while ($T4B().prototype['MoveNext'].call(enumerator)) {
      var current = $T4B().prototype['get_Current'].call(enumerator);
      current['set_HeaderTemplate'](activeRowHeaderTemplate);
    }
  };

  function DataGrid_SelectedItemBackground_Changed (d, e) {
  };

  function DataGrid_SelectedItemForeground_Changed (d, e) {
  };

  function DataGrid_SelectItem (item) {
    if (this['get_SelectionMode']() === $T06().Single) {
      $IM06().Call(this['get_SelectedItems'](), null, item);
    } else if (!$T47()['Contains'](this['get_SelectedItems'](), item)) {
      $IM06().Call(this['get_SelectedItems'](), null, item);
    }
  };

  function DataGrid_set_AutoGenerateColumns (value) {
    this['SetValue']($thisType.AutoGenerateColumnsProperty, value);
  };

  function DataGrid_set_ColumnHeaderStyle (value) {
    this['SetValue']($thisType.ColumnHeaderStyleProperty, value);
  };

  function DataGrid_set_Columns (value) {
    this['SetValue']($thisType.ColumnsProperty, value);
  };

  function DataGrid_set_HorizontalGridLinesBrush (value) {
    this['SetValue']($thisType.HorizontalGridLinesBrushProperty, value);
  };

  function DataGrid_set_IsReadOnly (value) {
    this['SetValue']($thisType.IsReadOnlyProperty, value);
  };

  function DataGrid_set_RowHeaderTemplate (value) {
    this['SetValue']($thisType.RowHeaderTemplateProperty, value);
  };

  function DataGrid_set_SelectedItemBackground (value) {
    this['SetValue']($thisType.SelectedItemBackgroundProperty, value);
  };

  function DataGrid_set_SelectedItemForeground (value) {
    this['SetValue']($thisType.SelectedItemForegroundProperty, value);
  };

  function DataGrid_set_SelectionMode (value) {
    this['SetValue']($thisType.SelectionModeProperty, value);
  };

  function DataGrid_set_UnselectedItemBackground (value) {
    this['SetValue']($thisType.UnselectedItemBackgroundProperty, value);
  };

  function DataGrid_set_UnselectedItemForeground (value) {
    this['SetValue']($thisType.UnselectedItemForegroundProperty, value);
  };

  function DataGrid_set_VerticalGridLinesBrush (value) {
    this['SetValue']($thisType.VerticalGridLinesBrushProperty, value);
  };

  function DataGrid_SetItemVisualSelectionState (item, newState) {
    var dataGridRow = (this._objectsToDisplay)['get_Item'](item);
    dataGridRow['set_IsSelected'](newState);
    dataGridRow['VisuallyRefreshItemSelection'](newState);
    if (newState) {
      this['set_SelectedItem'](item);
    }
  };

  function DataGrid_SetNewSelectedIndexInHtml (index) {
  };

  function DataGrid_SubscribeToDomSelectionChangedEvent (elementOnWhichToSubscribe) {
  };

  function DataGrid_UnselectAllItems () {
    var enumerator = ((this._objectsToDisplay)['get_Values']())['GetEnumerator']();

    while ($T4B().prototype['MoveNext'].call(enumerator)) {
      var current = $T4B().prototype['get_Current'].call(enumerator);
      current['set_IsSelected'](false);
      current['VisuallyRefreshItemSelection'](false);
    }
  };

  function DataGrid_UnselectedItemBackground_Changed (d, e) {
  };

  function DataGrid_UnselectedItemForeground_Changed (d, e) {
  };

  function DataGrid_UnselectItem (item) {
    if (this['get_SelectionMode']() === $T06().Single) {
      $T47()['Clear'](this['get_SelectedItems']());
    } else if ($T47()['Contains'](this['get_SelectedItems'](), item)) {
      $T47()['Remove'](this['get_SelectedItems'](), item);
    }
  };

  function DataGrid_UpdateChildrenInVisualTree (oldChildrenEnumerable, newChildrenEnumerable, forceUpdateAllChildren) {
    var $temp00, $temp01, $temp02;
    if (!(!$T25()['IsElementInVisualTree'](this) || (this._renderedItemsPanelTemplate === null))) {
      $T25()['DetachVisualChildIfNotNull'](this._grid, this);
      var list = $T45()['ConvertToListOfObjectsOrNull'](oldChildrenEnumerable);
      var list2 = $T45()['ConvertToListOfObjectsOrNull'](newChildrenEnumerable);
      if (!(this._areItemsInVisualTree || (list === null))) {
        list['Clear']();
      }
      if (forceUpdateAllChildren) {
        if (list !== null) {

          for (var a$0 = list._items, i$0 = 0, l$0 = (list._size | 0); i$0 < l$0; ($temp00 = i$0, 
              i$0 = ((i$0 + 1) | 0), 
              $temp00)) {
            var current = a$0[i$0];
            this['RemoveChild'](current);
          }
        }
        if (list2 !== null) {

          for (var a$1 = list2._items, i$1 = 0, l$1 = (list2._size | 0); i$1 < l$1; ($temp01 = i$1, 
              i$1 = ((i$1 + 1) | 0), 
              $temp01)) {
            var current2 = a$1[i$1];
            this['AddChild'](current2);
          }
        }
      } else {
        var i = 0;
        if (list2 !== null) {
          var num = 1;

          for (var a$2 = list2._items, i$2 = 0, l$2 = (list2._size | 0); i$2 < l$2; ($temp02 = i$2, 
              i$2 = ((i$2 + 1) | 0), 
              $temp02)) {
            current2 = a$2[i$2];
            if (list !== null) {

              for (; (i < (list['get_Count']() | 0)) && (current2 !== list['get_Item'](i)); i = ((i + 1) | 0)) {
                this['RemoveChild'](list['get_Item'](i));
              }
            }
            if (!((list === null) || (i >= (list['get_Count']() | 0)))) {
              var dataGridRow = (this._objectsToDisplay)['get_Item'](current2);
              dataGridRow['INTERNAL_SetRowIndex'](num);
              i = ((i + 1) | 0);
            } else {
              this['AddChild'](current2);
            }
            num = ((num + 1) | 0);
          }
        }
        if (list !== null) {

          for (; i < (list['get_Count']() | 0); i = ((i + 1) | 0)) {
            this['RemoveChild'](list['get_Item'](i));
          }
        }
      }
      this._areItemsInVisualTree = true;
      $T25()['AttachVisualChildIfNotAlreadyAttached'](this._grid, this);
    } else {
      this._areItemsInVisualTree = false;
    }
  };

  function DataGrid_UpdateItemsPanel (newTemplate) {
    this._renderedItemsPanelTemplate = new ($T4E())();
  };

  function DataGrid_UpdateUIStructure () {
    if (this._grid !== null) {
      if (this['get_Columns']() !== null) {
        var enumerator = (this['get_Columns']())['GetEnumerator']();
        try {

          while ($IM00().Call(enumerator, null)) {
            var current = $IM01().Call(enumerator, null);
            ((this._grid)['get_ColumnDefinitions']())['Remove'](current._gridColumn);
          }
        } finally {
          if (enumerator !== null) {
            $IM02().Call(enumerator, null);
          }
        }
        ((this._grid)['get_ColumnDefinitions']())['RemoveAt'](0);
        if (this['get_AutoGenerateColumns']()) {
          this['GenerateColumns']();
        }
        this['AddColumns'](this['get_Columns']());
      }
      return;
    }
    throw $S0A().Construct("Problem while changing DataGrid.ItemsSource, value cannot be null. Please report this issue to support@cshtml5.com.");
  };

  function DataGrid_VerticalGridLinesBrush_Changed (sender, e) {
    var dataGrid = $thisType.$Cast(sender);
    if ($T25()['IsElementInVisualTree'](dataGrid)) {
      dataGrid._grid.INTERNAL_StringToSetVerticalGridLinesInCss = dataGrid['GenerateStringForGridLines']($T07().$Cast(e['get_NewValue']()));
      $T41()['RefreshGridLines'](
        dataGrid._grid, 
        dataGrid._grid._currentCellsStructure, 
        (dataGrid._grid)['get_ColumnDefinitions'](), 
        (dataGrid._grid)['get_RowDefinitions']()
      );
    }
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.Primitives.MultiSelector"), 
      Name: "System.Windows.Controls.DataGrid", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      DataGrid__ctor
    );

    $.Method({Static:false, Public:false}, "AddChild", 
      JSIL.MethodSignature.Action($.Object), 
      DataGrid_AddChild
    );

    $.Method({Static:false, Public:false}, "AddColumns", 
      JSIL.MethodSignature.Action($asm01.TypeRef("System.Collections.ObjectModel.ObservableCollection`1", [$asm00.TypeRef("System.Windows.Controls.DataGridColumn")])), 
      DataGrid_AddColumns
    );

    $.Method({Static:false, Public:false}, "AddElementToGrid", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.UIElement")), 
      DataGrid_AddElementToGrid
    );

    $.Method({Static:false, Public:false}, "CellElement_Click", 
      new JSIL.MethodSignature(null, [$.Object, $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")]), 
      DataGrid_CellElement_Click
    );

    $.Method({Static:true , Public:false}, "ColumnHeaderStyle_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      DataGrid_ColumnHeaderStyle_Changed
    );

    $.Method({Static:true , Public:false}, "Columns_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      DataGrid_Columns_Changed
    );

    $.Method({Static:false, Public:false}, "CurrentEditionElement_LostFocus", 
      new JSIL.MethodSignature(null, [$.Object, $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")]), 
      DataGrid_CurrentEditionElement_LostFocus
    );

    $.Method({Static:false, Public:false, Virtual:true }, "DomSelectionChanged", 
      JSIL.MethodSignature.Action($.Object), 
      DataGrid_DomSelectionChanged
    )
      .Parameter(0, "element", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false}, "EnterCellEditionMode", 
      JSIL.MethodSignature.Action($asm00.TypeRef("System.Windows.Controls.DataGridCell")), 
      DataGrid_EnterCellEditionMode
    );

    $.Method({Static:false, Public:false}, "GenerateColumns", 
      JSIL.MethodSignature.Void, 
      DataGrid_GenerateColumns
    );

    $.Method({Static:false, Public:false}, "GenerateStringForGridLines", 
      new JSIL.MethodSignature($.String, [$asm00.TypeRef("Windows.UI.Xaml.Media.Brush")]), 
      DataGrid_GenerateStringForGridLines
    );

    $.Method({Static:false, Public:true }, "get_AutoGenerateColumns", 
      JSIL.MethodSignature.Return($.Boolean), 
      DataGrid_get_AutoGenerateColumns
    );

    $.Method({Static:false, Public:true }, "get_ColumnHeaderStyle", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Style")), 
      DataGrid_get_ColumnHeaderStyle
    );

    $.Method({Static:false, Public:true }, "get_Columns", 
      JSIL.MethodSignature.Return($asm01.TypeRef("System.Collections.ObjectModel.ObservableCollection`1", [$asm00.TypeRef("System.Windows.Controls.DataGridColumn")])), 
      DataGrid_get_Columns
    );

    $.Method({Static:false, Public:true }, "get_HorizontalGridLinesBrush", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      DataGrid_get_HorizontalGridLinesBrush
    );

    $.Method({Static:false, Public:true }, "get_IsReadOnly", 
      JSIL.MethodSignature.Return($.Boolean), 
      DataGrid_get_IsReadOnly
    );

    $.Method({Static:false, Public:true }, "get_RowHeaderTemplate", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.DataTemplate")), 
      DataGrid_get_RowHeaderTemplate
    );

    $.Method({Static:false, Public:true }, "get_SelectedItemBackground", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      DataGrid_get_SelectedItemBackground
    );

    $.Method({Static:false, Public:true }, "get_SelectedItemForeground", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      DataGrid_get_SelectedItemForeground
    );

    $.Method({Static:false, Public:true }, "get_SelectionMode", 
      JSIL.MethodSignature.Return($asm00.TypeRef("System.Windows.Controls.DataGridSelectionMode")), 
      DataGrid_get_SelectionMode
    );

    $.Method({Static:false, Public:true }, "get_UnselectedItemBackground", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      DataGrid_get_UnselectedItemBackground
    );

    $.Method({Static:false, Public:true }, "get_UnselectedItemForeground", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      DataGrid_get_UnselectedItemForeground
    );

    $.Method({Static:false, Public:true }, "get_VerticalGridLinesBrush", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      DataGrid_get_VerticalGridLinesBrush
    );

    $.Method({Static:false, Public:false}, "GetActiveRowHeaderTemplate", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.DataTemplate")), 
      DataGrid_GetActiveRowHeaderTemplate
    );

    $.Method({Static:true , Public:false}, "HorizontalGridLinesBrush_Changed", 
      new JSIL.MethodSignature(null, [$.Object, $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      DataGrid_HorizontalGridLinesBrush_Changed
    );

    $.Method({Static:false, Public:false, Virtual:true }, "INTERNAL_OnAttachedToVisualTree", 
      JSIL.MethodSignature.Void, 
      DataGrid_INTERNAL_OnAttachedToVisualTree
    );

    $.Method({Static:false, Public:false, Virtual:true }, "INTERNAL_OnDetachedFromVisualTree", 
      JSIL.MethodSignature.Void, 
      DataGrid_INTERNAL_OnDetachedFromVisualTree
    );

    $.Method({Static:true , Public:false}, "IsReadonly_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      DataGrid_IsReadonly_Changed
    );

    $.Method({Static:false, Public:false}, "LeaveCellEditionMode", 
      JSIL.MethodSignature.Void, 
      DataGrid_LeaveCellEditionMode
    );

    $.Method({Static:false, Public:false}, "MakeUIStructure", 
      JSIL.MethodSignature.Void, 
      DataGrid_MakeUIStructure
    );

    $.Method({Static:false, Public:false, Virtual:true }, "ManageCollectionChanged", 
      JSIL.MethodSignature.Action($asm01.TypeRef("System.Collections.Specialized.NotifyCollectionChangedEventArgs")), 
      DataGrid_ManageCollectionChanged
    );

    $.Method({Static:false, Public:false, Virtual:true }, "ManageSelectedIndex_Changed", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")), 
      DataGrid_ManageSelectedIndex_Changed
    );

    $.Method({Static:false, Public:false}, "OnCollectionChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm01.TypeRef("System.Collections.Specialized.NotifyCollectionChangedEventArgs")]), 
      DataGrid_OnCollectionChanged
    );

    $.Method({Static:false, Public:false, Virtual:true }, "OnItemsSourceChanged_BeforeVisualUpdate", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Collections.IEnumerable"), $asm06.TypeRef("System.Collections.IEnumerable")]), 
      DataGrid_OnItemsSourceChanged_BeforeVisualUpdate
    );

    $.Method({Static:false, Public:false, Virtual:true }, "RefreshSelectedItems", 
      JSIL.MethodSignature.Action($asm01.TypeRef("System.Collections.Specialized.NotifyCollectionChangedEventArgs")), 
      DataGrid_RefreshSelectedItems
    );

    $.Method({Static:false, Public:false}, "RemoveAllChildren", 
      JSIL.MethodSignature.Void, 
      DataGrid_RemoveAllChildren
    );

    $.Method({Static:false, Public:false}, "RemoveChild", 
      JSIL.MethodSignature.Action($.Object), 
      DataGrid_RemoveChild
    );

    $.Method({Static:false, Public:false}, "RemoveElementFromGrid", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.UIElement")), 
      DataGrid_RemoveElementFromGrid
    );

    $.Method({Static:true , Public:false}, "RowHeaderTemplate_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      DataGrid_RowHeaderTemplate_Changed
    );

    $.Method({Static:true , Public:false}, "SelectedItemBackground_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      DataGrid_SelectedItemBackground_Changed
    );

    $.Method({Static:true , Public:false}, "SelectedItemForeground_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      DataGrid_SelectedItemForeground_Changed
    );

    $.Method({Static:false, Public:false}, "SelectItem", 
      JSIL.MethodSignature.Action($.Object), 
      DataGrid_SelectItem
    );

    $.Method({Static:false, Public:true }, "set_AutoGenerateColumns", 
      JSIL.MethodSignature.Action($.Boolean), 
      DataGrid_set_AutoGenerateColumns
    );

    $.Method({Static:false, Public:true }, "set_ColumnHeaderStyle", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Style")), 
      DataGrid_set_ColumnHeaderStyle
    );

    $.Method({Static:false, Public:true }, "set_Columns", 
      JSIL.MethodSignature.Action($asm01.TypeRef("System.Collections.ObjectModel.ObservableCollection`1", [$asm00.TypeRef("System.Windows.Controls.DataGridColumn")])), 
      DataGrid_set_Columns
    );

    $.Method({Static:false, Public:true }, "set_HorizontalGridLinesBrush", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      DataGrid_set_HorizontalGridLinesBrush
    );

    $.Method({Static:false, Public:true }, "set_IsReadOnly", 
      JSIL.MethodSignature.Action($.Boolean), 
      DataGrid_set_IsReadOnly
    );

    $.Method({Static:false, Public:true }, "set_RowHeaderTemplate", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DataTemplate")), 
      DataGrid_set_RowHeaderTemplate
    );

    $.Method({Static:false, Public:true }, "set_SelectedItemBackground", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      DataGrid_set_SelectedItemBackground
    );

    $.Method({Static:false, Public:true }, "set_SelectedItemForeground", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      DataGrid_set_SelectedItemForeground
    );

    $.Method({Static:false, Public:true }, "set_SelectionMode", 
      JSIL.MethodSignature.Action($asm00.TypeRef("System.Windows.Controls.DataGridSelectionMode")), 
      DataGrid_set_SelectionMode
    );

    $.Method({Static:false, Public:true }, "set_UnselectedItemBackground", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      DataGrid_set_UnselectedItemBackground
    );

    $.Method({Static:false, Public:true }, "set_UnselectedItemForeground", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      DataGrid_set_UnselectedItemForeground
    );

    $.Method({Static:false, Public:true }, "set_VerticalGridLinesBrush", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      DataGrid_set_VerticalGridLinesBrush
    );

    $.Method({Static:false, Public:false}, "SetItemVisualSelectionState", 
      new JSIL.MethodSignature(null, [$.Object, $.Boolean]), 
      DataGrid_SetItemVisualSelectionState
    );

    $.Method({Static:false, Public:false, Virtual:true }, "SetNewSelectedIndexInHtml", 
      JSIL.MethodSignature.Action($.Int32), 
      DataGrid_SetNewSelectedIndexInHtml
    );

    $.Method({Static:false, Public:false, Virtual:true }, "SubscribeToDomSelectionChangedEvent", 
      JSIL.MethodSignature.Action($.Object), 
      DataGrid_SubscribeToDomSelectionChangedEvent
    )
      .Parameter(0, "elementOnWhichToSubscribe", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false}, "UnselectAllItems", 
      JSIL.MethodSignature.Void, 
      DataGrid_UnselectAllItems
    );

    $.Method({Static:true , Public:false}, "UnselectedItemBackground_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      DataGrid_UnselectedItemBackground_Changed
    );

    $.Method({Static:true , Public:false}, "UnselectedItemForeground_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      DataGrid_UnselectedItemForeground_Changed
    );

    $.Method({Static:false, Public:false}, "UnselectItem", 
      JSIL.MethodSignature.Action($.Object), 
      DataGrid_UnselectItem
    );

    $.Method({Static:false, Public:false, Virtual:true }, "UpdateChildrenInVisualTree", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.Collections.IEnumerable"), $asm06.TypeRef("System.Collections.IEnumerable"), 
          $.Boolean
        ]), 
      DataGrid_UpdateChildrenInVisualTree
    );

    $.Method({Static:false, Public:false, Virtual:true }, "UpdateItemsPanel", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Controls.ItemsPanelTemplate")), 
      DataGrid_UpdateItemsPanel
    );

    $.Method({Static:false, Public:false}, "UpdateUIStructure", 
      JSIL.MethodSignature.Void, 
      DataGrid_UpdateUIStructure
    );

    $.Method({Static:true , Public:false}, "VerticalGridLinesBrush_Changed", 
      new JSIL.MethodSignature(null, [$.Object, $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      DataGrid_VerticalGridLinesBrush_Changed
    );

    $['Field']({Static:false, Public:false}, "_objectsToDisplay", $asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$.Object, $asm00.TypeRef("System.Windows.Controls.DataGridRow")])); 
    $['Field']({Static:false, Public:false}, "_grid", $asm00.TypeRef("Windows.UI.Xaml.Controls.Grid")); 
    $['Field']({Static:false, Public:false}, "_areItemsInVisualTree", $.Boolean); 
    $['Field']({Static:false, Public:false}, "_currentEditionElement", $asm00.TypeRef("Windows.UI.Xaml.UIElement")); 
    $['Field']({Static:false, Public:false}, "_currentCell", $asm00.TypeRef("System.Windows.Controls.DataGridCell")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "AutoGenerateColumnsProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "ColumnHeaderStyleProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:false, Public:false}, "AutoGeneratedColumns", $asm01.TypeRef("System.Collections.ObjectModel.ObservableCollection`1", [$asm00.TypeRef("System.Windows.Controls.DataGridColumn")])); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "ColumnsProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "IsReadOnlyProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "SelectionModeProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "HorizontalGridLinesBrushProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "RowHeaderTemplateProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "VerticalGridLinesBrushProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "UnselectedItemBackgroundProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "UnselectedItemForegroundProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "SelectedItemBackgroundProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "SelectedItemForegroundProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function DataGrid__cctor () {
      $thisType.AutoGenerateColumnsProperty = $T00()['Register']("AutoGenerateColumns", $T01().__Type__, $thisType.__Type__, $S00().Construct(true));
      $thisType.ColumnHeaderStyleProperty = $T00()['Register']("ColumnHeaderStyle", $T03().__Type__, $thisType.__Type__, $S01().Construct(null, $T04()['New']($thisType, $thisType['ColumnHeaderStyle_Changed'], function () { return JSIL.GetMethodInfo($thisType, "ColumnHeaderStyle_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.ColumnsProperty = $T00()['Register']("Columns", $T05().__Type__, $thisType.__Type__, $S01().Construct(null, $T04()['New']($thisType, $thisType['Columns_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Columns_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.IsReadOnlyProperty = $T00()['Register']("IsReadOnly", $T01().__Type__, $thisType.__Type__, $S01().Construct(false, $T04()['New']($thisType, $thisType['IsReadonly_Changed'], function () { return JSIL.GetMethodInfo($thisType, "IsReadonly_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.SelectionModeProperty = $T00()['Register']("SelectionMode", $T06().__Type__, $thisType.__Type__, $S00().Construct($T06().Single));
      $thisType.HorizontalGridLinesBrushProperty = $T00()['Register']("HorizontalGridLinesBrush", $T07().__Type__, $thisType.__Type__, $S01().Construct($S02().Construct($T09()['get_Black']()['MemberwiseClone']()), $T04()['New']($thisType, $thisType['HorizontalGridLinesBrush_Changed'], function () { return JSIL.GetMethodInfo($thisType, "HorizontalGridLinesBrush_Changed", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.RowHeaderTemplateProperty = $T00()['Register']("RowHeaderTemplate", $T0A().__Type__, $thisType.__Type__, $S01().Construct(null, $T04()['New']($thisType, $thisType['RowHeaderTemplate_Changed'], function () { return JSIL.GetMethodInfo($thisType, "RowHeaderTemplate_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.VerticalGridLinesBrushProperty = $T00()['Register']("VerticalGridLinesBrush", $T07().__Type__, $thisType.__Type__, $S01().Construct($S02().Construct($T09()['get_Black']()['MemberwiseClone']()), $T04()['New']($thisType, $thisType['VerticalGridLinesBrush_Changed'], function () { return JSIL.GetMethodInfo($thisType, "VerticalGridLinesBrush_Changed", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.UnselectedItemBackgroundProperty = $T00()['Register']("UnselectedItemBackground", $T07().__Type__, $thisType.__Type__, $S01().Construct($S02().Construct($T09()['get_White']()['MemberwiseClone']()), $T04()['New']($thisType, $thisType['UnselectedItemBackground_Changed'], function () { return JSIL.GetMethodInfo($thisType, "UnselectedItemBackground_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.UnselectedItemForegroundProperty = $T00()['Register']("UnselectedItemForeGround", $T07().__Type__, $thisType.__Type__, $S01().Construct($S02().Construct($T09()['get_Black']()['MemberwiseClone']()), $T04()['New']($thisType, $thisType['UnselectedItemForeground_Changed'], function () { return JSIL.GetMethodInfo($thisType, "UnselectedItemForeground_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.SelectedItemBackgroundProperty = $T00()['Register']("SelectedItemBackground", $T07().__Type__, $thisType.__Type__, $S01().Construct($S02().Construct($T09()['get_Blue']()['MemberwiseClone']()), $T04()['New']($thisType, $thisType['SelectedItemBackground_Changed'], function () { return JSIL.GetMethodInfo($thisType, "SelectedItemBackground_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.SelectedItemForegroundProperty = $T00()['Register']("SelectedItemForeGround", $T07().__Type__, $thisType.__Type__, $S01().Construct($S02().Construct($T09()['get_White']()['MemberwiseClone']()), $T04()['New']($thisType, $thisType['SelectedItemForeground_Changed'], function () { return JSIL.GetMethodInfo($thisType, "SelectedItemForeground_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      DataGrid__cctor
    );

    $.Property({Static:false, Public:true }, "AutoGenerateColumns", $.Boolean);

    $.Property({Static:false, Public:true }, "ColumnHeaderStyle", $asm00.TypeRef("Windows.UI.Xaml.Style"));

    $.Property({Static:false, Public:true }, "Columns", $asm01.TypeRef("System.Collections.ObjectModel.ObservableCollection`1", [$asm00.TypeRef("System.Windows.Controls.DataGridColumn")]));

    $.Property({Static:false, Public:true }, "IsReadOnly", $.Boolean);

    $.Property({Static:false, Public:true }, "SelectionMode", $asm00.TypeRef("System.Windows.Controls.DataGridSelectionMode"));

    $.Property({Static:false, Public:true }, "HorizontalGridLinesBrush", $asm00.TypeRef("Windows.UI.Xaml.Media.Brush"));

    $.Property({Static:false, Public:true }, "RowHeaderTemplate", $asm00.TypeRef("Windows.UI.Xaml.DataTemplate"));

    $.Property({Static:false, Public:true }, "VerticalGridLinesBrush", $asm00.TypeRef("Windows.UI.Xaml.Media.Brush"));

    $.Property({Static:false, Public:true }, "UnselectedItemBackground", $asm00.TypeRef("Windows.UI.Xaml.Media.Brush"));

    $.Property({Static:false, Public:true }, "UnselectedItemForeground", $asm00.TypeRef("Windows.UI.Xaml.Media.Brush"));

    $.Property({Static:false, Public:true }, "SelectedItemBackground", $asm00.TypeRef("Windows.UI.Xaml.Media.Brush"));

    $.Property({Static:false, Public:true }, "SelectedItemForeground", $asm00.TypeRef("Windows.UI.Xaml.Media.Brush"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Windows.Controls.DataGridColumn */ 

(function DataGridColumn$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Style)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.DataTemplate)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.System.Windows.Controls.DataGridLength)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.System.Windows.Controls.DataGridCell)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.System.Windows.Controls.Primitives.DataGridColumnHeader)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.TextBlock)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ContentControl)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkTemplate)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm00.System.Windows.Controls.DataGrid)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm00.Windows.UI.Xaml.GridUnitType)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ColumnDefinition)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm00.Windows.UI.Xaml.GridLength)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.GridLength"), [$asm06.TypeRef("System.Double"), $asm00.TypeRef("Windows.UI.Xaml.GridUnitType")]))) ();
  };

  function DataGridColumn__ctor () {
    $T08().prototype['_ctor'].call(this);
  };

  function DataGridColumn_EnterEditionMode (dataGridCell) {
  };

  function DataGridColumn_get_Header () {
    return this['GetValue']($thisType.HeaderProperty);
  };

  function DataGridColumn_get_HeaderStyle () {
    return $T04().$Cast(this['GetValue']($thisType.HeaderStyleProperty));
  };

  function DataGridColumn_get_HeaderTemplate () {
    return $T05().$Cast(this['GetValue']($thisType.HeaderTemplateProperty));
  };

  function DataGridColumn_get_IsAutoGenerated () {
    return $T06().$Cast(this['GetValue']($thisType.IsAutoGeneratedProperty));
  };

  function DataGridColumn_get_IsReadOnly () {
    return $T06().$Cast(this['GetValue']($thisType.IsReadOnlyProperty));
  };

  function DataGridColumn_get_Width () {
    return $T07().$Cast(this['GetValue']($thisType.WidthProperty));
  };

  function DataGridColumn_GetHeader () {
    var dataGridColumnHeader = new ($T0A())();
    dataGridColumnHeader.DataGridColumnHeader$Column$value = this;
    if (!((this['get_HeaderTemplate']() !== null) || !$T0B().$Is(this['get_Header']()))) {
      var textBlock = new ($T0C())();
      textBlock['set_Text']($T0B().$Cast(this['get_Header']()));
      dataGridColumnHeader['set_Content'](textBlock);
    } else {
      dataGridColumnHeader['set_Content']((this['get_HeaderTemplate']())['INTERNAL_InstantiateFrameworkTemplate']());
    }
    this._header = dataGridColumnHeader;
    return dataGridColumnHeader;
  };

  function DataGridColumn_Header_Changed (d, e) {
  };

  function DataGridColumn_HeaderStyle_Changed (d, e) {
    if ($thisType.$Is(d)) {
      var dataGridColumn = $thisType.$Cast(d);
      if (dataGridColumn._header !== null) {
        ($thisType.$Cast(d)._header)['set_Style']($T04().$Cast(e['get_NewValue']()));
      }
    }
  };

  function DataGridColumn_HeaderTemplate_Changed (d, e) {
  };

  function DataGridColumn_LeaveEditionMode (dataGridCell) {
  };

  function DataGridColumn_set_Header (value) {
    this['SetValue']($thisType.HeaderProperty, value);
  };

  function DataGridColumn_set_HeaderStyle (value) {
    this['SetValue']($thisType.HeaderStyleProperty, value);
  };

  function DataGridColumn_set_HeaderTemplate (value) {
    this['SetValue']($thisType.HeaderTemplateProperty, value);
  };

  function DataGridColumn_set_IsAutoGenerated (value) {
    this['SetValue']($thisType.IsAutoGeneratedProperty, value);
  };

  function DataGridColumn_set_IsReadOnly (value) {
    this['SetValue']($thisType.IsReadOnlyProperty, value);
  };

  function DataGridColumn_set_Width (value) {
    this['SetValue']($thisType.WidthProperty, value);
  };

  function DataGridColumn_SetHeaderStyleIfColumnsStyleNotSet (style) {
    if (this['get_Header']() === null) {
      (this._header)['set_Style'](style);
    }
  };

  function DataGridColumn_UpdateGridColumnWidth (column) {
    var width = column['get_Width']()['MemberwiseClone']();
    if (!((column._parent === null) || !$T12()['IsElementInVisualTree'](column._parent))) {

      var $label0 = 0;
    $labelgroup0: 
      while (true) {
        switch ($label0) {
          case 0: /* $entry0 */ 
            switch ((width['get_UnitType']())['valueOf']()) {
              case 0: 
                var type = $T13().Auto;
                break $labelgroup0;

              case 1: 
                type = $T13().Pixel;
                break $labelgroup0;

              case 4: 
                type = $T13().Star;
                break $labelgroup0;

            }
            type = $T13().Auto;
            break $labelgroup0;

        }
      }
      /* Original label IL_5B */ 
      (column._gridColumn.Width = $S02().Construct(width['get_Value'](), type));
    }
  };

  function DataGridColumn_Width_Changed (d, e) {
    if ($thisType.$Is(d)) {
      var column = $thisType.$Cast(d);
      $thisType['UpdateGridColumnWidth'](column);
    }
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), 
      Name: "System.Windows.Controls.DataGridColumn", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void, 
      DataGridColumn__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "EnterEditionMode", 
      JSIL.MethodSignature.Action($asm00.TypeRef("System.Windows.Controls.DataGridCell")), 
      DataGridColumn_EnterEditionMode
    );

    $.Method({Static:false, Public:true }, "get_Header", 
      JSIL.MethodSignature.Return($.Object), 
      DataGridColumn_get_Header
    );

    $.Method({Static:false, Public:true }, "get_HeaderStyle", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Style")), 
      DataGridColumn_get_HeaderStyle
    );

    $.Method({Static:false, Public:true }, "get_HeaderTemplate", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.DataTemplate")), 
      DataGridColumn_get_HeaderTemplate
    );

    $.Method({Static:false, Public:true }, "get_IsAutoGenerated", 
      JSIL.MethodSignature.Return($.Boolean), 
      DataGridColumn_get_IsAutoGenerated
    );

    $.Method({Static:false, Public:true }, "get_IsReadOnly", 
      JSIL.MethodSignature.Return($.Boolean), 
      DataGridColumn_get_IsReadOnly
    );

    $.Method({Static:false, Public:true }, "get_Width", 
      JSIL.MethodSignature.Return($asm00.TypeRef("System.Windows.Controls.DataGridLength")), 
      DataGridColumn_get_Width
    );

    $.Method({Static:false, Public:false}, "GetHeader", 
      JSIL.MethodSignature.Return($asm00.TypeRef("System.Windows.Controls.Primitives.DataGridColumnHeader")), 
      DataGridColumn_GetHeader
    );

    $.Method({Static:true , Public:false}, "Header_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      DataGridColumn_Header_Changed
    );

    $.Method({Static:true , Public:false}, "HeaderStyle_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      DataGridColumn_HeaderStyle_Changed
    );

    $.Method({Static:true , Public:false}, "HeaderTemplate_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      DataGridColumn_HeaderTemplate_Changed
    );

    $.Method({Static:false, Public:false, Virtual:true }, "LeaveEditionMode", 
      JSIL.MethodSignature.Action($asm00.TypeRef("System.Windows.Controls.DataGridCell")), 
      DataGridColumn_LeaveEditionMode
    );

    $.Method({Static:false, Public:true }, "set_Header", 
      JSIL.MethodSignature.Action($.Object), 
      DataGridColumn_set_Header
    );

    $.Method({Static:false, Public:true }, "set_HeaderStyle", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Style")), 
      DataGridColumn_set_HeaderStyle
    );

    $.Method({Static:false, Public:true }, "set_HeaderTemplate", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DataTemplate")), 
      DataGridColumn_set_HeaderTemplate
    );

    $.Method({Static:false, Public:false}, "set_IsAutoGenerated", 
      JSIL.MethodSignature.Action($.Boolean), 
      DataGridColumn_set_IsAutoGenerated
    );

    $.Method({Static:false, Public:true }, "set_IsReadOnly", 
      JSIL.MethodSignature.Action($.Boolean), 
      DataGridColumn_set_IsReadOnly
    );

    $.Method({Static:false, Public:true }, "set_Width", 
      JSIL.MethodSignature.Action($asm00.TypeRef("System.Windows.Controls.DataGridLength")), 
      DataGridColumn_set_Width
    );

    $.Method({Static:false, Public:false}, "SetHeaderStyleIfColumnsStyleNotSet", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Style")), 
      DataGridColumn_SetHeaderStyleIfColumnsStyleNotSet
    );

    $.Method({Static:true , Public:false}, "UpdateGridColumnWidth", 
      JSIL.MethodSignature.Action($.Type), 
      DataGridColumn_UpdateGridColumnWidth
    );

    $.Method({Static:true , Public:false}, "Width_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      DataGridColumn_Width_Changed
    );

    $['Field']({Static:false, Public:false}, "_gridColumn", $asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinition")); 
    $['Field']({Static:false, Public:false}, "_header", $asm00.TypeRef("System.Windows.Controls.Primitives.DataGridColumnHeader")); 
    $['Field']({Static:false, Public:false}, "_parent", $asm00.TypeRef("System.Windows.Controls.DataGrid")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "HeaderProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "HeaderStyleProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "HeaderTemplateProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "IsAutoGeneratedProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "IsReadOnlyProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "WidthProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function DataGridColumn__cctor () {
      $thisType.HeaderProperty = $T00()['Register']("Header", $T01().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['Header_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Header_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.HeaderStyleProperty = $T00()['Register']("HeaderStyle", $T04().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['HeaderStyle_Changed'], function () { return JSIL.GetMethodInfo($thisType, "HeaderStyle_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.HeaderTemplateProperty = $T00()['Register']("HeaderTemplate", $T05().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['HeaderTemplate_Changed'], function () { return JSIL.GetMethodInfo($thisType, "HeaderTemplate_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.IsAutoGeneratedProperty = $T00()['Register']("IsAutoGenerated", $T06().__Type__, $thisType.__Type__, $S01().Construct(false));
      $thisType.IsReadOnlyProperty = $T00()['Register']("IsReadOnly", $T06().__Type__, $thisType.__Type__, $S01().Construct(false));
      $thisType.WidthProperty = $T00()['Register']("Width", $T07().__Type__, $thisType.__Type__, $S00().Construct($T07()['get_Auto']()['MemberwiseClone'](), $T03()['New']($thisType, $thisType['Width_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Width_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      DataGridColumn__cctor
    );

    $.Property({Static:false, Public:true }, "Header", $.Object);

    $.Property({Static:false, Public:true }, "HeaderStyle", $asm00.TypeRef("Windows.UI.Xaml.Style"));

    $.Property({Static:false, Public:true }, "HeaderTemplate", $asm00.TypeRef("Windows.UI.Xaml.DataTemplate"));

    $.Property({Static:false, Public:true }, "IsAutoGenerated", $.Boolean);

    $.Property({Static:false, Public:true }, "IsReadOnly", $.Boolean);

    $.Property({Static:false, Public:true }, "Width", $asm00.TypeRef("System.Windows.Controls.DataGridLength"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Windows.Controls.DataGridBoundColumn */ 

(function DataGridBoundColumn$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.BindingBase)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.System.Windows.Controls.DataGridColumn)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };

  function DataGridBoundColumn__ctor () {
    $T04().prototype['_ctor'].call(this);
  };

  function DataGridBoundColumn_Binding_Changed (d, e) {
  };

  function DataGridBoundColumn_get_Binding () {
    return $T01().$Cast(this['GetValue']($thisType.BindingProperty));
  };

  function DataGridBoundColumn_set_Binding (value) {
    this['SetValue']($thisType.BindingProperty, value);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("System.Windows.Controls.DataGridColumn"), 
      Name: "System.Windows.Controls.DataGridBoundColumn", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void, 
      DataGridBoundColumn__ctor
    );

    $.Method({Static:true , Public:false}, "Binding_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      DataGridBoundColumn_Binding_Changed
    );

    $.Method({Static:false, Public:true }, "get_Binding", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Data.BindingBase")), 
      DataGridBoundColumn_get_Binding
    );

    $.Method({Static:false, Public:true }, "set_Binding", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Data.BindingBase")), 
      DataGridBoundColumn_set_Binding
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "BindingProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function DataGridBoundColumn__cctor () {
      $thisType.BindingProperty = $T00()['Register']("Binding", $T01().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['Binding_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Binding_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      DataGridBoundColumn__cctor
    );

    $.Property({Static:false, Public:true }, "Binding", $asm00.TypeRef("Windows.UI.Xaml.Data.BindingBase"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.Button */ 

(function Button$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Primitives.ButtonBase)) ();
  };

  function Button__ctor () {
    $T00().prototype['_ctor'].call(this);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.Primitives.ButtonBase"), 
      Name: "Windows.UI.Xaml.Controls.Button", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Button__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Windows.Controls.DataGridCell */ 

(function DataGridCell$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.System.Windows.Controls.DataGridColumn)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Button)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ContentControl)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Control)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.System.Windows.Controls.DataGrid)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };

  function DataGridCell__ctor () {
    $T05().prototype['_ctor'].call(this);
  };

  function DataGridCell_get_Column () {
    return $T01().$Cast(this['GetValue']($thisType.ColumnProperty));
  };

  function DataGridCell_get_IsEditing () {
    return $T03().$Cast(this['GetValue']($thisType.IsEditingProperty));
  };

  function DataGridCell_get_IsSelected () {
    return $T03().$Cast(this['GetValue']($thisType.IsSelectedProperty));
  };

  function DataGridCell_get_Item () {
    return this.DataGridCell$Item$value;
  };

  function DataGridCell_IsEditing_Changed (d, e) {
    var dataGridCell = $thisType.$Cast(d);
    ($T08().$Cast(dataGridCell['get_Content']()))['set_IsEnabled']($T03().$Cast(e['get_NewValue']()));
    dataGridCell['ManageIsEditingChange'](e);
  };

  function DataGridCell_IsSelected_Changed (d, e) {
    var dataGridCell = $thisType.$Cast(d);
    if ($T0A()['IsElementInVisualTree'](dataGridCell)) {
      var flag = $T03().$Cast(e['get_NewValue']());
      if (flag !== $T03().$Cast(e['get_OldValue']())) {
        if (flag) {
          dataGridCell['set_Background']((dataGridCell['get_Column']()._parent)['get_SelectedItemBackground']());
          dataGridCell['set_Foreground']((dataGridCell['get_Column']()._parent)['get_SelectedItemForeground']());
        } else {
          dataGridCell['set_Background'](JSIL.Coalesce((dataGridCell['get_Column']()._parent)['get_UnselectedItemBackground'](), (dataGridCell['get_Column']()._parent)['get_Background']()));
          dataGridCell['set_Foreground'](JSIL.Coalesce((dataGridCell['get_Column']()._parent)['get_UnselectedItemForeground'](), (dataGridCell['get_Column']()._parent)['get_Foreground']()));
        }
      }
    }
  };

  function DataGridCell_ManageIsEditingChange (e) {
    if ($T03().$Cast(e['get_NewValue']())) {
      (this['get_Column']())['EnterEditionMode'](this);
    } else {
      (this['get_Column']())['LeaveEditionMode'](this);
    }
  };

  function DataGridCell_set_Column (value) {
    this['SetValue']($thisType.ColumnProperty, value);
  };

  function DataGridCell_set_IsEditing (value) {
    this['SetValue']($thisType.IsEditingProperty, value);
  };

  function DataGridCell_set_IsSelected (value) {
    this['SetValue']($thisType.IsSelectedProperty, value);
  };

  function DataGridCell_set_Item (value) {
    this.DataGridCell$Item$value = value;
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.Button"), 
      Name: "System.Windows.Controls.DataGridCell", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      DataGridCell__ctor
    );

    $.Method({Static:false, Public:true }, "get_Column", 
      JSIL.MethodSignature.Return($asm00.TypeRef("System.Windows.Controls.DataGridColumn")), 
      DataGridCell_get_Column
    );

    $.Method({Static:false, Public:true }, "get_IsEditing", 
      JSIL.MethodSignature.Return($.Boolean), 
      DataGridCell_get_IsEditing
    );

    $.Method({Static:false, Public:true }, "get_IsSelected", 
      JSIL.MethodSignature.Return($.Boolean), 
      DataGridCell_get_IsSelected
    );

    $.Method({Static:false, Public:false}, "get_Item", 
      JSIL.MethodSignature.Return($.Object), 
      DataGridCell_get_Item
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "IsEditing_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      DataGridCell_IsEditing_Changed
    );

    $.Method({Static:true , Public:false}, "IsSelected_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      DataGridCell_IsSelected_Changed
    );

    $.Method({Static:false, Public:false}, "ManageIsEditingChange", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")), 
      DataGridCell_ManageIsEditingChange
    );

    $.Method({Static:false, Public:false}, "set_Column", 
      JSIL.MethodSignature.Action($asm00.TypeRef("System.Windows.Controls.DataGridColumn")), 
      DataGridCell_set_Column
    );

    $.Method({Static:false, Public:true }, "set_IsEditing", 
      JSIL.MethodSignature.Action($.Boolean), 
      DataGridCell_set_IsEditing
    );

    $.Method({Static:false, Public:true }, "set_IsSelected", 
      JSIL.MethodSignature.Action($.Boolean), 
      DataGridCell_set_IsSelected
    );

    $.Method({Static:false, Public:false}, "set_Item", 
      JSIL.MethodSignature.Action($.Object), 
      DataGridCell_set_Item
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $['Field']({Static:true , Public:true , ReadOnly:true }, "ColumnProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "IsEditingProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "IsSelectedProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:false, Public:false}, "DataGridCell$Item$value", $.Object)
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    function DataGridCell__cctor () {
      $thisType.ColumnProperty = $T00()['Register']("Column", $T01().__Type__, $thisType.__Type__, $S00().Construct(false));
      $thisType.IsEditingProperty = $T00()['Register']("IsEditing", $T03().__Type__, $thisType.__Type__, $S01().Construct(false, $T04()['New']($thisType, $thisType['IsEditing_Changed'], function () { return JSIL.GetMethodInfo($thisType, "IsEditing_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.IsSelectedProperty = $T00()['Register']("IsSelected", $T03().__Type__, $thisType.__Type__, $S01().Construct(false, $T04()['New']($thisType, $thisType['IsSelected_Changed'], function () { return JSIL.GetMethodInfo($thisType, "IsSelected_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      DataGridCell__cctor
    );

    $.Property({Static:false, Public:true }, "Column", $asm00.TypeRef("System.Windows.Controls.DataGridColumn"));

    $.Property({Static:false, Public:true }, "IsEditing", $.Boolean);

    $.Property({Static:false, Public:true }, "IsSelected", $.Boolean);

    $.Property({Static:false, Public:false}, "Item", $.Object);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Windows.Controls.DataGridCheckBoxColumn */ 

(function DataGridCheckBoxColumn$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.System.Windows.Controls.DataGridBoundColumn)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.System.Windows.Controls.DataGridCell)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.CheckBox)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.Binding)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Primitives.ToggleButton)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.Boolean)) ();
  };

  function DataGridCheckBoxColumn__ctor () {
    $T00().prototype['_ctor'].call(this);
  };

  function DataGridCheckBoxColumn_EnterEditionMode (dataGridCell) {
  };

  function DataGridCheckBoxColumn_GenerateEditingElement (cell, childData) {
    return null;
  };

  function DataGridCheckBoxColumn_GenerateElement (childData) {
    var checkBox = new ($T03())();
    checkBox['set_DataContext'](childData);
    var binding = this['INTERNAL_GetBinding']($T00().BindingProperty);
    if (binding !== null) {
      checkBox['SetBinding']($T07().IsCheckedProperty, binding);
    } else if ($T08().$Is(childData)) {
      (checkBox.IsChecked = $T08().$Cast(childData));
    }
    return checkBox;
  };

  function DataGridCheckBoxColumn_LeaveEditionMode (dataGridCell) {
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("System.Windows.Controls.DataGridBoundColumn"), 
      Name: "System.Windows.Controls.DataGridCheckBoxColumn", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      DataGridCheckBoxColumn__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "EnterEditionMode", 
      JSIL.MethodSignature.Action($asm00.TypeRef("System.Windows.Controls.DataGridCell")), 
      DataGridCheckBoxColumn_EnterEditionMode
    );

    $.Method({Static:false, Public:false, Virtual:true }, "GenerateEditingElement", 
      new JSIL.MethodSignature($asm00.TypeRef("Windows.UI.Xaml.FrameworkElement"), [$asm00.TypeRef("System.Windows.Controls.DataGridCell"), $.Object]), 
      DataGridCheckBoxColumn_GenerateEditingElement
    );

    $.Method({Static:false, Public:false, Virtual:true }, "GenerateElement", 
      new JSIL.MethodSignature($asm00.TypeRef("Windows.UI.Xaml.FrameworkElement"), [$.Object]), 
      DataGridCheckBoxColumn_GenerateElement
    );

    $.Method({Static:false, Public:false, Virtual:true }, "LeaveEditionMode", 
      JSIL.MethodSignature.Action($asm00.TypeRef("System.Windows.Controls.DataGridCell")), 
      DataGridCheckBoxColumn_LeaveEditionMode
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Windows.Controls.DataGridComboBoxColumn */ 

(function DataGridComboBoxColumn$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.System.Windows.Controls.DataGridBoundColumn)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.System.Windows.Controls.DataGridCell)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.Binding)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.BindingMode)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyPath)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Enum)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.NotImplementedException)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Array)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ComboBox)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ItemsControl)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Primitives.Selector)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.TextBlock)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize(System.Array.Of($asm06.System.String))) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm06.System.Char)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize(System.Array.Of($asm06.System.Char))) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize(System.Array.Of($asm06.System.Reflection.MemberInfo))) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm06.System.Type)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm06.System.Reflection.FieldInfo)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm06.System.Reflection.PropertyInfo)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.NotImplementedException"), [$asm06.TypeRef("System.String")]))) ();
  };

  function DataGridComboBoxColumn__ctor () {
    $T00().prototype['_ctor'].call(this);
  };

  function DataGridComboBoxColumn_GenerateEditingElement (cell, childData) {
    var binding = this['INTERNAL_GetBinding']($T00().BindingProperty);
    if (binding['get_Mode']() === $T05().OneWay) {
      if (!binding['INTERNAL_WasModeSetByUserRatherThanDefaultValue']()) {
        binding['set_Mode']($T05().TwoWay);
      }
    }
    var value = this['GetValue'](childData, (binding['get_Path']())['get_Path']());
    if (!$T07().$Is(value)) {
      throw $S00().Construct("DataGridComboBoxColumns currently only works with Enum types");
    }
    var values = $T07()['GetValues'](JSIL['GetType'](value));
    var comboBox = new ($T0A())();
    comboBox['set_DataContext'](childData);
    if (!((values === null) || ((values.length | 0) <= 0))) {
      comboBox['set_ItemsSource'](values);
      comboBox['SetBinding']($T0D().SelectedItemProperty, binding);
    }
    return comboBox;
  };

  function DataGridComboBoxColumn_GenerateElement (childData) {
    var textBlock = new ($T0E())();
    var binding = this['INTERNAL_GetBinding']($T00().BindingProperty);
    if (binding !== null) {
      textBlock['SetBinding']($T0E().TextProperty, binding);
    } else if ($T0F().$Is(childData)) {
      textBlock['set_Text']($T0F().$Cast(childData));
    }
    return textBlock;
  };

  function DataGridComboBoxColumn_GetValue$00 (context, path) {
    if (!$T0F()['IsNullOrWhiteSpace'](path)) {
      var array = (JSIL.SplitString(path, JSIL.Array.New($T11(), ["."])));
      var obj = context;

      for (var i = 0; i < (array.length | 0); i = ((i + 1) | 0)) {
        var member = (JSIL['GetType'](obj))['GetMember'](array[i]);
        if ((member === null) || ((member.length | 0) <= 0)) {
          var result = "";
          return result;
        }
        if ($T16().$Is(member[0])) {
          var fieldInfo = $T16().$Cast(member[0]);
          obj = fieldInfo['GetValue'](obj);
        } else {
          if (!$T17().$Is(member[0])) {
            result = "";
            return result;
          }
          var propertyInfo = $T17().$Cast(member[0]);
          obj = propertyInfo['GetValue'](obj);
        }
      }
      result = obj;
    } else {
      result = context;
    }
    return result;
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("System.Windows.Controls.DataGridBoundColumn"), 
      Name: "System.Windows.Controls.DataGridComboBoxColumn", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      DataGridComboBoxColumn__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "GenerateEditingElement", 
      new JSIL.MethodSignature($asm00.TypeRef("Windows.UI.Xaml.FrameworkElement"), [$asm00.TypeRef("System.Windows.Controls.DataGridCell"), $.Object]), 
      DataGridComboBoxColumn_GenerateEditingElement
    );

    $.Method({Static:false, Public:false, Virtual:true }, "GenerateElement", 
      new JSIL.MethodSignature($asm00.TypeRef("Windows.UI.Xaml.FrameworkElement"), [$.Object]), 
      DataGridComboBoxColumn_GenerateElement
    );

    $.Method({Static:false, Public:false}, "GetValue", 
      new JSIL.MethodSignature($.Object, [$.Object, $.String]), 
      DataGridComboBoxColumn_GetValue$00
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Windows.Controls.DataGridHyperlinkColumn */ 

(function DataGridHyperlinkColumn$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.System.Windows.Controls.DataGridBoundColumn)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.System.Windows.Controls.DataGridCell)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.TextBox)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.Binding)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.HyperlinkButton)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Control)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.SolidColorBrush)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Windows.UI.Colors)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ContentControl)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm01.System.Uri)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.Media.SolidColorBrush"), [$asm00.TypeRef("Windows.UI.Color")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Uri"), [$asm06.TypeRef("System.String")]))) ();
  };

  function DataGridHyperlinkColumn__ctor () {
    $T00().prototype['_ctor'].call(this);
  };

  function DataGridHyperlinkColumn_GenerateEditingElement (cell, childData) {
    var textBox = new ($T03())();
    textBox['set_DataContext'](childData);
    var binding = this['INTERNAL_GetBinding']($T00().BindingProperty);
    if (binding !== null) {
      textBox['SetBinding']($T03().TextProperty, binding);
    } else if ($T07().$Is(childData)) {
      textBox['set_Text']($T07().$Cast(childData));
    }
    return textBox;
  };

  function DataGridHyperlinkColumn_GenerateElement (childData) {
    var hyperlinkButton = new ($T08())();
    hyperlinkButton['set_Foreground']($S00().Construct($T0B()['get_DarkBlue']()['MemberwiseClone']()));
    hyperlinkButton['set_DataContext'](childData);
    var binding = this['INTERNAL_GetBinding']($T00().BindingProperty);
    if (binding !== null) {
      hyperlinkButton['SetBinding']($T08().NavigateUriProperty, binding);
      hyperlinkButton['SetBinding']($T0C().ContentProperty, binding['Clone']());
    } else if ($T07().$Is(childData)) {
      hyperlinkButton['set_NavigateUri']($S01().Construct($T07().$Cast(childData)));
      hyperlinkButton['set_Content']($T07().$Cast(childData));
    }
    return hyperlinkButton;
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("System.Windows.Controls.DataGridBoundColumn"), 
      Name: "System.Windows.Controls.DataGridHyperlinkColumn", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      DataGridHyperlinkColumn__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "GenerateEditingElement", 
      new JSIL.MethodSignature($asm00.TypeRef("Windows.UI.Xaml.FrameworkElement"), [$asm00.TypeRef("System.Windows.Controls.DataGridCell"), $.Object]), 
      DataGridHyperlinkColumn_GenerateEditingElement
    );

    $.Method({Static:false, Public:false, Virtual:true }, "GenerateElement", 
      new JSIL.MethodSignature($asm00.TypeRef("Windows.UI.Xaml.FrameworkElement"), [$.Object]), 
      DataGridHyperlinkColumn_GenerateElement
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct System.Windows.Controls.DataGridLength */ 

(function DataGridLength$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.DotNetForHtml5.Core.TypeFromStringConverters)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Func$b2.Of($asm06.System.String, $asm06.System.Object))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.System.Windows.Controls.DataGridLengthUnitType)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("System.Windows.Controls.DataGridLength"), [$asm06.TypeRef("System.Double"), $asm00.TypeRef("System.Windows.Controls.DataGridLengthUnitType")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Exception"), [$asm06.TypeRef("System.String")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("System.Windows.Controls.DataGridLength"), [$asm06.TypeRef("System.Double")]))) ();
  };

  function DataGridLength__ctor$00 (pixels) {
    this._value = +pixels;
    this._type = $T03().Pixel;
  };

  function DataGridLength__ctor$01 (value, type) {
    this._value = +(
      ((type['valueOf']() | 0) === 0)
         ? 0
         : value)
    ;
    this._type = type;
  };

  function DataGridLength_Equals$02 (other) {
    return $thisType['op_Equality'](this, other);
  };

  function DataGridLength_Object_Equals (obj) {
    return ($thisType.$Is(obj) && $thisType['op_Equality'](this, $thisType.$Cast(obj)));
  };

  function DataGridLength_get_Auto () {
    return $S00().Construct(1, $T03().Auto);
  };

  function DataGridLength_get_IsAbsolute () {
    return (this._type === $T03().Pixel);
  };

  function DataGridLength_get_IsAuto () {
    return (this._type === $T03().Auto);
  };

  function DataGridLength_get_IsStar () {
    return (this._type === $T03().Star);
  };

  function DataGridLength_get_UnitType () {
    return this._type;
  };

  function DataGridLength_get_Value () {
    return this._value;
  };

  function DataGridLength_GetHashCode () {
    return ($asm00.System.Windows.Controls.DataGridLengthUnitType.$Cast(Math.imul(((this._value) | 0), 7) + this._type))['valueOf']();
  };

  function DataGridLength_INTERNAL_ConvertFromString (gridLengthAsString) {
    var value = new JSIL.BoxedVariable(0);
    var text = (gridLengthAsString.trim().toLowerCase());
    if (System.String.EndsWith(text, "*")) {
      var text2 = (text.substr(0, (((text.length | 0) - 1) | 0)));
      if (text2 == "") {
        var result = $S00().Construct(1, $T03().Star);
      } else {
        if (!$T02()['TryParse'](text2, /* ref */ value)) {
          throw $S01().Construct(JSIL.ConcatString("Invalid GridLength: ", gridLengthAsString));
        }
        result = $S00().Construct(value.get(), $T03().Star);
      }
    } else if (text == "auto") {
      result = $S00().Construct(1, $T03().Auto);
    } else if (text == "sizetocells") {
      result = $S00().Construct(1, $T03().Auto);
    } else if (text == "sizetoheader") {
      result = $S00().Construct(1, $T03().Auto);
    } else {
      if (!$T02()['TryParse'](text, /* ref */ value)) {
        throw $S01().Construct(JSIL.ConcatString("Invalid GridLength: ", gridLengthAsString));
      }
      result = $S00().Construct(value.get(), $T03().Pixel);
    }
    return result;
  };

  function DataGridLength_op_Equality (gl1, gl2) {
    return ((gl1['get_UnitType']() === gl2['get_UnitType']()) && (+gl1['get_Value']() === +gl2['get_Value']()));
  };

  function DataGridLength_op_Implicit (value) {
    return $S02().Construct(value);
  };

  function DataGridLength_op_Inequality (gl1, gl2) {
    return ((gl1['get_UnitType']() !== gl2['get_UnitType']()) || (+gl1['get_Value']() !== +gl2['get_Value']()));
  };

  function DataGridLength_toString () {
    if (this._type === $T03().Auto) {
      var result = "Auto";
    } else if (this._type === $T03().Star) {
      result = (
        (+this._value === 1)
           ? "*"
           : JSIL.ConcatString((this._value).toString(), "*"))
      ;
    } else {
      result = ((this._value).toString());
    }
    return result;
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "System.Windows.Controls.DataGridLength", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 2, 
      SequentialLayout: true, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Double), 
      DataGridLength__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Double, $asm00.TypeRef("System.Windows.Controls.DataGridLengthUnitType")]), 
      DataGridLength__ctor$01
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Type]), 
      DataGridLength_Equals$02
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object]), 
      DataGridLength_Object_Equals
    );

    $.Method({Static:true , Public:true }, "get_Auto", 
      JSIL.MethodSignature.Return($.Type), 
      DataGridLength_get_Auto
    );

    $.Method({Static:false, Public:true }, "get_IsAbsolute", 
      JSIL.MethodSignature.Return($.Boolean), 
      DataGridLength_get_IsAbsolute
    );

    $.Method({Static:false, Public:true }, "get_IsAuto", 
      JSIL.MethodSignature.Return($.Boolean), 
      DataGridLength_get_IsAuto
    );

    $.Method({Static:false, Public:true }, "get_IsStar", 
      JSIL.MethodSignature.Return($.Boolean), 
      DataGridLength_get_IsStar
    );

    $.Method({Static:false, Public:true }, "get_UnitType", 
      JSIL.MethodSignature.Return($asm00.TypeRef("System.Windows.Controls.DataGridLengthUnitType")), 
      DataGridLength_get_UnitType
    );

    $.Method({Static:false, Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($.Double), 
      DataGridLength_get_Value
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32), 
      DataGridLength_GetHashCode
    );

    $.Method({Static:true , Public:false}, "INTERNAL_ConvertFromString", 
      new JSIL.MethodSignature($.Object, [$.String]), 
      DataGridLength_INTERNAL_ConvertFromString
    );

    $.Method({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      DataGridLength_op_Equality
    );

    $.Method({Static:true , Public:true }, "op_Implicit", 
      new JSIL.MethodSignature($.Type, [$.Double]), 
      DataGridLength_op_Implicit
    );

    $.Method({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      DataGridLength_op_Inequality
    );

    $.Method({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String), 
      DataGridLength_toString
    );

    $['Field']({Static:false, Public:false}, "_value", $.Double); 
    $['Field']({Static:false, Public:false}, "_type", $asm00.TypeRef("System.Windows.Controls.DataGridLengthUnitType")); 
    function DataGridLength__cctor () {
      $T00()['RegisterConverter']($thisType.__Type__, $T01()['New']($thisType, $thisType['INTERNAL_ConvertFromString'], function () { return JSIL.GetMethodInfo($thisType, "INTERNAL_ConvertFromString", new JSIL.MethodSignature($asm06.System.Object, [$asm06.System.String]), true); }));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      DataGridLength__cctor
    );

    $.Property({Static:true , Public:true }, "Auto", $.Type);

    $.Property({Static:false, Public:true }, "IsAbsolute", $.Boolean);

    $.Property({Static:false, Public:true }, "IsAuto", $.Boolean);

    $.Property({Static:false, Public:true }, "IsStar", $.Boolean);

    $.Property({Static:false, Public:true }, "UnitType", $asm00.TypeRef("System.Windows.Controls.DataGridLengthUnitType"));

    $.Property({Static:false, Public:true }, "Value", $.Double);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IEquatable`1", [$.Type])
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Windows.Controls.DataGridLengthUnitType */ 

JSIL.MakeEnum(
  {
    FullName: "System.Windows.Controls.DataGridLengthUnitType", 
    BaseType: $asm06.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Auto: 0, 
    Pixel: 1, 
    Star: 4, 
  }
);

/* class System.Windows.Controls.DataGridRow */ 

(function DataGridRow$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DataTemplate)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Func$b1.Of($asm00.Windows.UI.Xaml.FrameworkElement))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.System.Windows.Controls.DataGridRow_ObjectRepresentationInRow)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Border)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Windows.UI.Xaml.HorizontalAlignment)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Windows.UI.Xaml.VerticalAlignment)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.SolidColorBrush)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm00.Windows.UI.Colors)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.CheckBox)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.Binding)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.BindingMode)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Primitives.ToggleButton)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm00.System.Windows.Controls.DataGrid)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkTemplate)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Grid)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm00.System.Windows.Controls.DataGridCell))) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm00.System.Windows.Controls.DataGridCell)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.Media.SolidColorBrush"), [$asm00.TypeRef("Windows.UI.Color")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.Data.Binding"), [$asm06.TypeRef("System.String")]))) ();
  };

  function DataGridRow__ctor () {
    this._representationInRow = new ($T06())();
    $T07().prototype['_ctor'].call(this);
  };

  function DataGridRow_GenerateDefaultHeaderTemplateForExtendedSelectionMode () {
    var border = new ($T08())();
    border['set_HorizontalAlignment']($T0A().Stretch);
    border['set_VerticalAlignment']($T0B().Stretch);
    border['set_Background']($S01().Construct($T0D()['get_Gray']()['MemberwiseClone']()));
    var checkBox = new ($T0E())();
    checkBox['set_HorizontalAlignment']($T0A().Center);
    checkBox['set_VerticalAlignment']($T0B().Center);
    var binding = $S02().Construct("IsSelected");
    binding['set_Mode']($T10().TwoWay);
    checkBox['SetBinding']($T11().IsCheckedProperty, binding);
    border['set_Child'](checkBox);
    return border;
  };

  function DataGridRow_get_HeaderTemplate () {
    return $T00().$Cast(this['GetValue']($thisType.HeaderTemplateProperty));
  };

  function DataGridRow_get_IsSelected () {
    return $T05().$Cast(this['GetValue']($thisType.IsSelectedProperty));
  };

  function DataGridRow_HeaderTemplate_Changed (d, e) {
    var dataGridRow = $thisType.$Cast(d);
    if (dataGridRow !== null) {
      if ($T13()['IsElementInVisualTree'](dataGridRow._datagrid)) {
        if (e['get_NewValue']() !== e['get_OldValue']()) {
          if (!((dataGridRow._headerUIElement === null) || !$T13()['IsElementInVisualTree'](dataGridRow._headerUIElement))) {
            (dataGridRow._datagrid)['RemoveElementFromGrid'](dataGridRow._headerUIElement);
          }
          var dataTemplate = $T00().$Cast(e['get_NewValue']());
          if (dataTemplate !== null) {
            dataGridRow._headerUIElement = dataTemplate['INTERNAL_InstantiateFrameworkTemplate']();
            $T17()['SetRow'](dataGridRow._headerUIElement, dataGridRow._rowIndex);
            $T17()['SetColumn'](dataGridRow._headerUIElement, 0);
            if ($T09().$Is(dataGridRow._headerUIElement)) {
              ($T09().$Cast(dataGridRow._headerUIElement))['set_DataContext'](dataGridRow);
            }
            (dataGridRow._datagrid)['AddElementToGrid'](dataGridRow._headerUIElement);
          }
        }
      }
    }
  };

  function DataGridRow_INTERNAL_SetRowIndex (rowIndex) {
    var $temp00;
    this._rowIndex = (rowIndex | 0);
    if (this._headerUIElement !== null) {
      $T17()['SetRow'](this._headerUIElement, rowIndex);
    }

    for (var a$0 = this._representationInRow.ElementsInRow._items, i$0 = 0, l$0 = (this._representationInRow.ElementsInRow._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      $T17()['SetRow'](current, rowIndex);
    }
  };

  function DataGridRow_IsSelected_Changed (d, e) {
    var dataGridRow = $thisType.$Cast(d);
    if (!((dataGridRow._representationInRow === null) || 
        (dataGridRow._representationInRow.ElementsInRow === null) || (((dataGridRow._representationInRow.ElementsInRow)['get_Count']() | 0) <= 0))) {
      var flag = $T05().$Cast(e['get_NewValue']());
      if (flag !== $T05().$Cast(e['get_OldValue']())) {
        if (flag) {
          (dataGridRow._datagrid)['SelectItem']((dataGridRow._representationInRow.ElementsInRow)['get_Item'](0).DataGridCell$Item$value);
        } else {
          (dataGridRow._datagrid)['UnselectItem']((dataGridRow._representationInRow.ElementsInRow)['get_Item'](0).DataGridCell$Item$value);
        }
      }
    }
  };

  function DataGridRow_set_HeaderTemplate (value) {
    this['SetValue']($thisType.HeaderTemplateProperty, value);
  };

  function DataGridRow_set_IsSelected (value) {
    this['SetValue']($thisType.IsSelectedProperty, value);
  };

  function DataGridRow_VisuallyRefreshItemSelection (newSelectionState) {
    var $temp00;

    for (var a$0 = this._representationInRow.ElementsInRow._items, i$0 = 0, l$0 = (this._representationInRow.ElementsInRow._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      current['set_IsSelected'](newSelectionState);
    }
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), 
      Name: "System.Windows.Controls.DataGridRow", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      DataGridRow__ctor
    );

    $.Method({Static:true , Public:false}, "GenerateDefaultHeaderTemplateForExtendedSelectionMode", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.FrameworkElement")), 
      DataGridRow_GenerateDefaultHeaderTemplateForExtendedSelectionMode
    );

    $.Method({Static:false, Public:true }, "get_HeaderTemplate", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.DataTemplate")), 
      DataGridRow_get_HeaderTemplate
    );

    $.Method({Static:false, Public:true }, "get_IsSelected", 
      JSIL.MethodSignature.Return($.Boolean), 
      DataGridRow_get_IsSelected
    );

    $.Method({Static:true , Public:false}, "HeaderTemplate_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      DataGridRow_HeaderTemplate_Changed
    );

    $.Method({Static:false, Public:false}, "INTERNAL_SetRowIndex", 
      JSIL.MethodSignature.Action($.Int32), 
      DataGridRow_INTERNAL_SetRowIndex
    );

    $.Method({Static:true , Public:false}, "IsSelected_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      DataGridRow_IsSelected_Changed
    );

    $.Method({Static:false, Public:true }, "set_HeaderTemplate", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DataTemplate")), 
      DataGridRow_set_HeaderTemplate
    );

    $.Method({Static:false, Public:true }, "set_IsSelected", 
      JSIL.MethodSignature.Action($.Boolean), 
      DataGridRow_set_IsSelected
    );

    $.Method({Static:false, Public:false}, "VisuallyRefreshItemSelection", 
      JSIL.MethodSignature.Action($.Boolean), 
      DataGridRow_VisuallyRefreshItemSelection
    );

    $['Field']({Static:false, Public:false}, "_headerUIElement", $asm00.TypeRef("Windows.UI.Xaml.UIElement")); 
    $['Field']({Static:false, Public:false}, "_representationInRow", $asm00.TypeRef("System.Windows.Controls.DataGridRow+ObjectRepresentationInRow")); 
    $['Field']({Static:false, Public:false}, "_datagrid", $asm00.TypeRef("System.Windows.Controls.DataGrid")); 
    $['Field']({Static:false, Public:false}, "_rowIndex", $.Int32); 
    $['Field']({Static:true , Public:false}, "DefaultTemplateForExtendedSelectionMode", $asm00.TypeRef("Windows.UI.Xaml.DataTemplate")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "HeaderTemplateProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "IsSelectedProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function DataGridRow__cctor () {
      var dataTemplate = new ($T00())();
      dataTemplate._methodToInstantiateFrameworkTemplate = $T01()['New']($thisType, $thisType['GenerateDefaultHeaderTemplateForExtendedSelectionMode'], function () { return JSIL.GetMethodInfo($thisType, "GenerateDefaultHeaderTemplateForExtendedSelectionMode", JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.FrameworkElement")), true); });
      $thisType.DefaultTemplateForExtendedSelectionMode = dataTemplate;
      $thisType.HeaderTemplateProperty = $T02()['Register']("HeaderTemplate", $T00().__Type__, $thisType.__Type__, $S00().Construct(null, $T04()['New']($thisType, $thisType['HeaderTemplate_Changed'], function () { return JSIL.GetMethodInfo($thisType, "HeaderTemplate_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.IsSelectedProperty = $T02()['Register']("IsSelected", $T05().__Type__, $thisType.__Type__, $S00().Construct(false, $T04()['New']($thisType, $thisType['IsSelected_Changed'], function () { return JSIL.GetMethodInfo($thisType, "IsSelected_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      DataGridRow__cctor
    );

    $.Property({Static:false, Public:true }, "HeaderTemplate", $asm00.TypeRef("Windows.UI.Xaml.DataTemplate"));

    $.Property({Static:false, Public:true }, "IsSelected", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Windows.Controls.DataGridRow+ObjectRepresentationInRow */ 

(function ObjectRepresentationInRow$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm00.System.Windows.Controls.DataGridCell))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("System.Windows.Controls.DataGridCell")]), null))) ();
  };

  function ObjectRepresentationInRow__ctor () {
    this.ElementsInRow = $S00().Construct();
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Windows.Controls.DataGridRow+ObjectRepresentationInRow", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ObjectRepresentationInRow__ctor
    );

    $['Field']({Static:false, Public:false}, "ElementsInRow", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("System.Windows.Controls.DataGridCell")])); 
    $['Field']({Static:false, Public:false}, "RowDefinition", $asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinition")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Windows.Controls.DataGridSelectionMode */ 

JSIL.MakeEnum(
  {
    FullName: "System.Windows.Controls.DataGridSelectionMode", 
    BaseType: $asm06.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Single: 0, 
    Extended: 1, 
  }
);

/* class System.Windows.Controls.DataGridTemplateColumn */ 

(function DataGridTemplateColumn$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.DataTemplate)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.System.Windows.Controls.DataGridBoundColumn)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.System.Windows.Controls.DataGridCell)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkTemplate)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.Binding)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.System.Windows.Controls.DataGridColumn)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.TextBlock)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };

  function DataGridTemplateColumn__ctor () {
    $T04().prototype['_ctor'].call(this);
  };

  function DataGridTemplateColumn_CellEditingTemplateProperty_Changed (d, e) {
  };

  function DataGridTemplateColumn_CellTemplateProperty_Changed (d, e) {
  };

  function DataGridTemplateColumn_GenerateEditingElement (cell, childData) {
    if (this['get_CellEditingTemplate']() !== null) {
      var frameworkElement = (this['get_CellEditingTemplate']())['INTERNAL_InstantiateFrameworkTemplate']();
      frameworkElement['set_DataContext'](childData);
      var binding = this['INTERNAL_GetBinding']($T04().BindingProperty);
      if (binding !== null) {
        frameworkElement['SetBinding']($T09().DataContextProperty, binding);
      }
      var result = frameworkElement;
    } else {
      result = this['GenerateElement'](childData);
    }
    return result;
  };

  function DataGridTemplateColumn_GenerateElement (childData) {
    if (this['get_CellTemplate']() !== null) {
      var frameworkElement = (this['get_CellTemplate']())['INTERNAL_InstantiateFrameworkTemplate']();
      frameworkElement['set_DataContext'](childData);
      var binding = this['INTERNAL_GetBinding']($T04().BindingProperty);
      if (binding !== null) {
        frameworkElement['SetBinding']($T09().DataContextProperty, binding);
      }
      var result = frameworkElement;
    } else {
      var textBlock = new ($T0D())();
      textBlock['set_DataContext'](childData);
      binding = this['INTERNAL_GetBinding']($T04().BindingProperty);
      if (binding !== null) {
        textBlock['SetBinding']($T0D().TextProperty, binding);
      } else {
        textBlock['set_Text'](childData['toString']());
      }
      result = textBlock;
    }
    return result;
  };

  function DataGridTemplateColumn_get_CellEditingTemplate () {
    return $T01().$Cast(this['GetValue']($thisType.CellEditingTemplateProperty));
  };

  function DataGridTemplateColumn_get_CellTemplate () {
    return $T01().$Cast(this['GetValue']($thisType.CellTemplateProperty));
  };

  function DataGridTemplateColumn_set_CellEditingTemplate (value) {
    this['SetValue']($thisType.CellEditingTemplateProperty, value);
  };

  function DataGridTemplateColumn_set_CellTemplate (value) {
    this['SetValue']($thisType.CellTemplateProperty, value);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("System.Windows.Controls.DataGridBoundColumn"), 
      Name: "System.Windows.Controls.DataGridTemplateColumn", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      DataGridTemplateColumn__ctor
    );

    $.Method({Static:true , Public:false}, "CellEditingTemplateProperty_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      DataGridTemplateColumn_CellEditingTemplateProperty_Changed
    );

    $.Method({Static:true , Public:false}, "CellTemplateProperty_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      DataGridTemplateColumn_CellTemplateProperty_Changed
    );

    $.Method({Static:false, Public:false, Virtual:true }, "GenerateEditingElement", 
      new JSIL.MethodSignature($asm00.TypeRef("Windows.UI.Xaml.FrameworkElement"), [$asm00.TypeRef("System.Windows.Controls.DataGridCell"), $.Object]), 
      DataGridTemplateColumn_GenerateEditingElement
    );

    $.Method({Static:false, Public:false, Virtual:true }, "GenerateElement", 
      new JSIL.MethodSignature($asm00.TypeRef("Windows.UI.Xaml.FrameworkElement"), [$.Object]), 
      DataGridTemplateColumn_GenerateElement
    );

    $.Method({Static:false, Public:true }, "get_CellEditingTemplate", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.DataTemplate")), 
      DataGridTemplateColumn_get_CellEditingTemplate
    );

    $.Method({Static:false, Public:true }, "get_CellTemplate", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.DataTemplate")), 
      DataGridTemplateColumn_get_CellTemplate
    );

    $.Method({Static:false, Public:true }, "set_CellEditingTemplate", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DataTemplate")), 
      DataGridTemplateColumn_set_CellEditingTemplate
    );

    $.Method({Static:false, Public:true }, "set_CellTemplate", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DataTemplate")), 
      DataGridTemplateColumn_set_CellTemplate
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "CellTemplateProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "CellEditingTemplateProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function DataGridTemplateColumn__cctor () {
      $thisType.CellTemplateProperty = $T00()['Register']("CellTemplate", $T01().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['CellTemplateProperty_Changed'], function () { return JSIL.GetMethodInfo($thisType, "CellTemplateProperty_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.CellEditingTemplateProperty = $T00()['Register']("CellEditingTemplate", $T01().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['CellEditingTemplateProperty_Changed'], function () { return JSIL.GetMethodInfo($thisType, "CellEditingTemplateProperty_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      DataGridTemplateColumn__cctor
    );

    $.Property({Static:false, Public:true }, "CellTemplate", $asm00.TypeRef("Windows.UI.Xaml.DataTemplate"));

    $.Property({Static:false, Public:true }, "CellEditingTemplate", $asm00.TypeRef("Windows.UI.Xaml.DataTemplate"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Windows.Controls.DataGridTextColumn */ 

(function DataGridTextColumn$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.System.Windows.Controls.DataGridBoundColumn)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.System.Windows.Controls.DataGridCell)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.TextBox)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.Binding)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.BindingMode)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.TextBlock)) ();
  };

  function DataGridTextColumn__ctor () {
    $T00().prototype['_ctor'].call(this);
  };

  function DataGridTextColumn_GenerateEditingElement (cell, childData) {
    var textBox = new ($T03())();
    textBox['set_DataContext'](childData);
    var binding = this['INTERNAL_GetBinding']($T00().BindingProperty);
    if (binding !== null) {
      if (binding['get_Mode']() === $T07().OneWay) {
        if (!binding['INTERNAL_WasModeSetByUserRatherThanDefaultValue']()) {
          binding['set_Mode']($T07().TwoWay);
        }
      }
      textBox['SetBinding']($T03().TextProperty, binding);
    } else if ($T08().$Is(childData)) {
      textBox['set_Text']($T08().$Cast(childData));
    }
    return textBox;
  };

  function DataGridTextColumn_GenerateElement (childData) {
    var textBlock = new ($T09())();
    var binding = this['INTERNAL_GetBinding']($T00().BindingProperty);
    if (binding !== null) {
      textBlock['SetBinding']($T09().TextProperty, binding);
    } else if ($T08().$Is(childData)) {
      textBlock['set_Text']($T08().$Cast(childData));
    }
    return textBlock;
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("System.Windows.Controls.DataGridBoundColumn"), 
      Name: "System.Windows.Controls.DataGridTextColumn", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      DataGridTextColumn__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "GenerateEditingElement", 
      new JSIL.MethodSignature($asm00.TypeRef("Windows.UI.Xaml.FrameworkElement"), [$asm00.TypeRef("System.Windows.Controls.DataGridCell"), $.Object]), 
      DataGridTextColumn_GenerateEditingElement
    );

    $.Method({Static:false, Public:false, Virtual:true }, "GenerateElement", 
      new JSIL.MethodSignature($asm00.TypeRef("Windows.UI.Xaml.FrameworkElement"), [$.Object]), 
      DataGridTextColumn_GenerateElement
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Windows.Input");
/* class System.Windows.Input.Cursor */ 

(function Cursor$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.DotNetForHtml5.Core.TypeFromStringConverters)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Func$b2.Of($asm06.System.String, $asm06.System.Object))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.System.Windows.Input.Cursors)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.System.Windows.Input.Cursors_INTERNAL_CursorsEnum)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Enum)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm00.System.Windows.Input.Cursors_INTERNAL_CursorsEnum, $asm06.System.String))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Exception"), [$asm06.TypeRef("System.String"), $asm06.TypeRef("System.Exception")]))) ();
  };

  function Cursor__ctor () {
    this._isCustom = false;
  };

  function Cursor_Dispose () {
  };

  function Cursor_INTERNAL_ConvertFromString (cursorTypeString, $exception) {
    try {
      var key = $T05().$Cast($T06()['Parse']($T05().__Type__, cursorTypeString));
      var cursor = new $thisType();
      cursor._cursorHtmlString = $T02().INTERNAL_cursorEnumToCursorString['get_Item'](key);
    } catch ($exception) {
      throw $S00().Construct(JSIL.ConcatString("Invalid cursor: ", cursorTypeString), $exception);
    }
    return cursor;
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "System.Windows.Input.Cursor", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void, 
      Cursor__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Dispose", 
      JSIL.MethodSignature.Void, 
      Cursor_Dispose
    );

    $.Method({Static:true , Public:false}, "INTERNAL_ConvertFromString", 
      new JSIL.MethodSignature($.Object, [$.String]), 
      Cursor_INTERNAL_ConvertFromString
    );

    $['Field']({Static:false, Public:false}, "_isCustom", $.Boolean); 
    $['Field']({Static:false, Public:false}, "_cursorHtmlString", $.String); 
    function Cursor__cctor () {
      $T00()['RegisterConverter']($thisType.__Type__, $T01()['New']($thisType, $thisType['INTERNAL_ConvertFromString'], function () { return JSIL.GetMethodInfo($thisType, "INTERNAL_ConvertFromString", new JSIL.MethodSignature($asm06.System.Object, [$asm06.System.String]), true); }));
      $T02()['FillCursorTypeToStringDictionary']();
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Cursor__cctor
    );

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Windows.Input.Cursors */ 

(function Cursors$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm00.System.Windows.Input.Cursors_INTERNAL_CursorsEnum, $asm06.System.String))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.System.Windows.Input.Cursors_INTERNAL_CursorsEnum)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.System.Windows.Input.Cursor)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm00.TypeRef("System.Windows.Input.Cursors+INTERNAL_CursorsEnum"), $asm06.TypeRef("System.String")]), null))) ();
  };

  function Cursors_FillCursorTypeToStringDictionary () {
    if ($thisType.INTERNAL_cursorEnumToCursorString === null) {
      $thisType.INTERNAL_cursorEnumToCursorString = $S00().Construct();
    }
    $thisType.INTERNAL_cursorEnumToCursorString['Add']($T01().AppStarting, "progress");
    $thisType.INTERNAL_cursorEnumToCursorString['Add']($T01().Arrow, "default");
    $thisType.INTERNAL_cursorEnumToCursorString['Add']($T01().Cross, "crosshair");
    $thisType.INTERNAL_cursorEnumToCursorString['Add']($T01().Hand, "pointer");
    $thisType.INTERNAL_cursorEnumToCursorString['Add']($T01().Help, "help");
    $thisType.INTERNAL_cursorEnumToCursorString['Add']($T01().IBeam, "text");
    $thisType.INTERNAL_cursorEnumToCursorString['Add']($T01().No, "not-allowed");
    $thisType.INTERNAL_cursorEnumToCursorString['Add']($T01().None, "none");
    $thisType.INTERNAL_cursorEnumToCursorString['Add']($T01().SizeAll, "move");
    $thisType.INTERNAL_cursorEnumToCursorString['Add']($T01().SizeNESW, "nesw-resize");
    $thisType.INTERNAL_cursorEnumToCursorString['Add']($T01().SizeNS, "ns-resize");
    $thisType.INTERNAL_cursorEnumToCursorString['Add']($T01().SizeNWSE, "nwse-resize");
    $thisType.INTERNAL_cursorEnumToCursorString['Add']($T01().SizeWE, "ew-resize");
    $thisType.INTERNAL_cursorEnumToCursorString['Add']($T01().Wait, "wait");
  };

  function Cursors_get_AppStarting () {
    var cursor = new ($T02())();
    cursor._cursorHtmlString = $thisType.INTERNAL_cursorEnumToCursorString['get_Item']($T01().AppStarting);
    return cursor;
  };

  function Cursors_get_Arrow () {
    var cursor = new ($T02())();
    cursor._cursorHtmlString = $thisType.INTERNAL_cursorEnumToCursorString['get_Item']($T01().Arrow);
    return cursor;
  };

  function Cursors_get_Cross () {
    var cursor = new ($T02())();
    cursor._cursorHtmlString = $thisType.INTERNAL_cursorEnumToCursorString['get_Item']($T01().Cross);
    return cursor;
  };

  function Cursors_get_Hand () {
    var cursor = new ($T02())();
    cursor._cursorHtmlString = $thisType.INTERNAL_cursorEnumToCursorString['get_Item']($T01().Hand);
    return cursor;
  };

  function Cursors_get_Help () {
    var cursor = new ($T02())();
    cursor._cursorHtmlString = $thisType.INTERNAL_cursorEnumToCursorString['get_Item']($T01().Help);
    return cursor;
  };

  function Cursors_get_IBeam () {
    var cursor = new ($T02())();
    cursor._cursorHtmlString = $thisType.INTERNAL_cursorEnumToCursorString['get_Item']($T01().IBeam);
    return cursor;
  };

  function Cursors_get_No () {
    var cursor = new ($T02())();
    cursor._cursorHtmlString = $thisType.INTERNAL_cursorEnumToCursorString['get_Item']($T01().No);
    return cursor;
  };

  function Cursors_get_None () {
    var cursor = new ($T02())();
    cursor._cursorHtmlString = $thisType.INTERNAL_cursorEnumToCursorString['get_Item']($T01().None);
    return cursor;
  };

  function Cursors_get_SizeAll () {
    var cursor = new ($T02())();
    cursor._cursorHtmlString = $thisType.INTERNAL_cursorEnumToCursorString['get_Item']($T01().SizeAll);
    return cursor;
  };

  function Cursors_get_SizeNESW () {
    var cursor = new ($T02())();
    cursor._cursorHtmlString = $thisType.INTERNAL_cursorEnumToCursorString['get_Item']($T01().SizeNESW);
    return cursor;
  };

  function Cursors_get_SizeNS () {
    var cursor = new ($T02())();
    cursor._cursorHtmlString = $thisType.INTERNAL_cursorEnumToCursorString['get_Item']($T01().SizeNS);
    return cursor;
  };

  function Cursors_get_SizeNWSE () {
    var cursor = new ($T02())();
    cursor._cursorHtmlString = $thisType.INTERNAL_cursorEnumToCursorString['get_Item']($T01().SizeNWSE);
    return cursor;
  };

  function Cursors_get_SizeWE () {
    var cursor = new ($T02())();
    cursor._cursorHtmlString = $thisType.INTERNAL_cursorEnumToCursorString['get_Item']($T01().SizeWE);
    return cursor;
  };

  function Cursors_get_Wait () {
    var cursor = new ($T02())();
    cursor._cursorHtmlString = $thisType.INTERNAL_cursorEnumToCursorString['get_Item']($T01().Wait);
    return cursor;
  };

  JSIL.MakeStaticClass("System.Windows.Input.Cursors", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:false}, "FillCursorTypeToStringDictionary", 
      JSIL.MethodSignature.Void, 
      Cursors_FillCursorTypeToStringDictionary
    );

    $.Method({Static:true , Public:true }, "get_AppStarting", 
      JSIL.MethodSignature.Return($asm00.TypeRef("System.Windows.Input.Cursor")), 
      Cursors_get_AppStarting
    );

    $.Method({Static:true , Public:true }, "get_Arrow", 
      JSIL.MethodSignature.Return($asm00.TypeRef("System.Windows.Input.Cursor")), 
      Cursors_get_Arrow
    );

    $.Method({Static:true , Public:true }, "get_Cross", 
      JSIL.MethodSignature.Return($asm00.TypeRef("System.Windows.Input.Cursor")), 
      Cursors_get_Cross
    );

    $.Method({Static:true , Public:true }, "get_Hand", 
      JSIL.MethodSignature.Return($asm00.TypeRef("System.Windows.Input.Cursor")), 
      Cursors_get_Hand
    );

    $.Method({Static:true , Public:true }, "get_Help", 
      JSIL.MethodSignature.Return($asm00.TypeRef("System.Windows.Input.Cursor")), 
      Cursors_get_Help
    );

    $.Method({Static:true , Public:true }, "get_IBeam", 
      JSIL.MethodSignature.Return($asm00.TypeRef("System.Windows.Input.Cursor")), 
      Cursors_get_IBeam
    );

    $.Method({Static:true , Public:true }, "get_No", 
      JSIL.MethodSignature.Return($asm00.TypeRef("System.Windows.Input.Cursor")), 
      Cursors_get_No
    );

    $.Method({Static:true , Public:true }, "get_None", 
      JSIL.MethodSignature.Return($asm00.TypeRef("System.Windows.Input.Cursor")), 
      Cursors_get_None
    );

    $.Method({Static:true , Public:true }, "get_SizeAll", 
      JSIL.MethodSignature.Return($asm00.TypeRef("System.Windows.Input.Cursor")), 
      Cursors_get_SizeAll
    );

    $.Method({Static:true , Public:true }, "get_SizeNESW", 
      JSIL.MethodSignature.Return($asm00.TypeRef("System.Windows.Input.Cursor")), 
      Cursors_get_SizeNESW
    );

    $.Method({Static:true , Public:true }, "get_SizeNS", 
      JSIL.MethodSignature.Return($asm00.TypeRef("System.Windows.Input.Cursor")), 
      Cursors_get_SizeNS
    );

    $.Method({Static:true , Public:true }, "get_SizeNWSE", 
      JSIL.MethodSignature.Return($asm00.TypeRef("System.Windows.Input.Cursor")), 
      Cursors_get_SizeNWSE
    );

    $.Method({Static:true , Public:true }, "get_SizeWE", 
      JSIL.MethodSignature.Return($asm00.TypeRef("System.Windows.Input.Cursor")), 
      Cursors_get_SizeWE
    );

    $.Method({Static:true , Public:true }, "get_Wait", 
      JSIL.MethodSignature.Return($asm00.TypeRef("System.Windows.Input.Cursor")), 
      Cursors_get_Wait
    );

    $['Field']({Static:true , Public:false}, "INTERNAL_cursorEnumToCursorString", $asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm00.TypeRef("System.Windows.Input.Cursors+INTERNAL_CursorsEnum"), $.String])); 
    $.Property({Static:true , Public:true }, "AppStarting", $asm00.TypeRef("System.Windows.Input.Cursor"));

    $.Property({Static:true , Public:true }, "Arrow", $asm00.TypeRef("System.Windows.Input.Cursor"));

    $.Property({Static:true , Public:true }, "Cross", $asm00.TypeRef("System.Windows.Input.Cursor"));

    $.Property({Static:true , Public:true }, "Hand", $asm00.TypeRef("System.Windows.Input.Cursor"));

    $.Property({Static:true , Public:true }, "Help", $asm00.TypeRef("System.Windows.Input.Cursor"));

    $.Property({Static:true , Public:true }, "IBeam", $asm00.TypeRef("System.Windows.Input.Cursor"));

    $.Property({Static:true , Public:true }, "No", $asm00.TypeRef("System.Windows.Input.Cursor"));

    $.Property({Static:true , Public:true }, "None", $asm00.TypeRef("System.Windows.Input.Cursor"));

    $.Property({Static:true , Public:true }, "SizeAll", $asm00.TypeRef("System.Windows.Input.Cursor"));

    $.Property({Static:true , Public:true }, "SizeNESW", $asm00.TypeRef("System.Windows.Input.Cursor"));

    $.Property({Static:true , Public:true }, "SizeNS", $asm00.TypeRef("System.Windows.Input.Cursor"));

    $.Property({Static:true , Public:true }, "SizeNWSE", $asm00.TypeRef("System.Windows.Input.Cursor"));

    $.Property({Static:true , Public:true }, "SizeWE", $asm00.TypeRef("System.Windows.Input.Cursor"));

    $.Property({Static:true , Public:true }, "Wait", $asm00.TypeRef("System.Windows.Input.Cursor"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum System.Windows.Input.Cursors+INTERNAL_CursorsEnum */ 

JSIL.MakeEnum(
  {
    FullName: "System.Windows.Input.Cursors+INTERNAL_CursorsEnum", 
    BaseType: $asm06.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    AppStarting: 0, 
    Arrow: 1, 
    Cross: 2, 
    Hand: 3, 
    Help: 4, 
    IBeam: 5, 
    No: 6, 
    None: 7, 
    SizeAll: 8, 
    SizeNESW: 9, 
    SizeNS: 10, 
    SizeNWSE: 11, 
    SizeWE: 12, 
    Wait: 13, 
  }
);

/* class System.Windows.Markup.StaticResource */ 

(function StaticResource$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm03.System.Windows.Markup.MarkupExtension)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.IServiceProvider)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.System.ServiceProvider)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.ResourceDictionary)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.Application)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.System.Windows.Markup.XamlParseException)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.SystemException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("System.Windows.Markup.XamlParseException"), [$asm06.TypeRef("System.String")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.SystemException"), [$asm06.TypeRef("System.String")]))) ();
  };

  function StaticResource__ctor$00 () {
    $T00().prototype['_ctor'].call(this);
  };

  function StaticResource__ctor$01 (resourceKey) {
    $T00().prototype['_ctor'].call(this);
    this.StaticResource$ResourceKey$value = resourceKey;
  };

  function StaticResource_get_ResourceKey () {
    return this.StaticResource$ResourceKey$value;
  };

  function StaticResource_ProvideValue (serviceProvider) {
    var $temp00;
    if ($T03().$Is(serviceProvider)) {
      var serviceProvider2 = $T03().$Cast(serviceProvider);

      for (var a$0 = serviceProvider2['get_Parents']()._items, i$0 = 0, l$0 = (serviceProvider2['get_Parents']()._size | 0); i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        if ($T05().$Is(current)) {
          var resources = ($T05().$Cast(current))['get_Resources']();
          if (!((resources === null) || !resources['ContainsKey'](this.StaticResource$ResourceKey$value))) {
            var result = resources['get_Item'](this.StaticResource$ResourceKey$value);
            return result;
          }
        }
      }
      if (($T07().Application$Current$value.Application$Resources$value === null) || !$T07().Application$Current$value.Application$Resources$value['ContainsKey'](this.StaticResource$ResourceKey$value)) {
        throw $S00().Construct($T01()['Format']("StaticResource resolve failed: cannot find resource named '{0}' (Note: resource names are case sensitive)", this.StaticResource$ResourceKey$value));
      }
      result = $T07().Application$Current$value.Application$Resources$value['get_Item'](this.StaticResource$ResourceKey$value);
      return result;
    }
    throw $S01().Construct("StaticResource.ProvideValue failed: the service provider is not of the expected type. Please contact support.");
  };

  function StaticResource_set_ResourceKey (value) {
    this.StaticResource$ResourceKey$value = value;
  };

  JSIL.MakeType({
      BaseType: $asm03.TypeRef("System.Windows.Markup.MarkupExtension"), 
      Name: "System.Windows.Markup.StaticResource", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      StaticResource__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String), 
      StaticResource__ctor$01
    );

    $.Method({Static:false, Public:true }, "get_ResourceKey", 
      JSIL.MethodSignature.Return($.String), 
      StaticResource_get_ResourceKey
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "ProvideValue", 
      new JSIL.MethodSignature($.Object, [$asm06.TypeRef("System.IServiceProvider")]), 
      StaticResource_ProvideValue
    );

    $.Method({Static:false, Public:true }, "set_ResourceKey", 
      JSIL.MethodSignature.Action($.String), 
      StaticResource_set_ResourceKey
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $['Field']({Static:false, Public:false}, "StaticResource$ResourceKey$value", $.String)
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true }, "ResourceKey", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm03.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["ResourceKey"]; });

})();

/* class System.Windows.Markup.XamlParseException */ 

(function XamlParseException$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.SystemException)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm06.TypeRef("System.String"), $asm06.TypeRef("System.Exception")]))) ();
  };

  function XamlParseException__ctor$00 () {
    $T00().prototype['_ctor'].call(this);
  };

  function XamlParseException__ctor$01 (message) {
    $T00().prototype['_ctor'].call(this, message);
  };

  function XamlParseException__ctor$02 (message, innerException) {
    $S00().Call($T00().prototype, "_ctor", null, this, message, innerException);
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.SystemException"), 
      Name: "System.Windows.Markup.XamlParseException", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      XamlParseException__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String), 
      XamlParseException__ctor$01
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $asm06.TypeRef("System.Exception")]), 
      XamlParseException__ctor$02
    );

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("System.Windows.Media");
JSIL.DeclareNamespace("System.Windows.Media.Effects");
/* class System.Windows.Media.Effects.Effect */ 

(function Effect$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };

  function Effect__ctor () {
    $T00().prototype['_ctor'].call(this);
  };

  function Effect_SetParentUIElement (newParent) {
    this._parentUIElement = newParent;
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), 
      Name: "System.Windows.Media.Effects.Effect", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void, 
      Effect__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "SetParentUIElement", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.UIElement")), 
      Effect_SetParentUIElement
    );

    $['Field']({Static:false, Public:false}, "_parentUIElement", $asm00.TypeRef("Windows.UI.Xaml.UIElement")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Windows.Media.Effects.DropShadowEffect */ 

(function DropShadowEffect$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Color)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Colors)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.System.Windows.Media.Effects.Effect)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.Math)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.TextBlock)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm06.System.Convert)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize(System.Array.Of($asm06.System.String))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("System.Byte"), [$asm06.TypeRef("System.Double")]))) ();
  };

  function DropShadowEffect__ctor () {
    $T06().prototype['_ctor'].call(this);
  };

  function DropShadowEffect_get_BlurRadius () {
    return $T01().$Cast(this['GetValue']($thisType.BlurRadiusProperty));
  };

  function DropShadowEffect_get_Color () {
    return $T04().$Cast(this['GetValue']($thisType.ColorProperty));
  };

  function DropShadowEffect_get_Direction () {
    return $T01().$Cast(this['GetValue']($thisType.DirectionProperty));
  };

  function DropShadowEffect_get_Opacity () {
    return $T01().$Cast(this['GetValue']($thisType.OpacityProperty));
  };

  function DropShadowEffect_get_ShadowDepth () {
    return $T01().$Cast(this['GetValue']($thisType.ShadowDepthProperty));
  };

  function DropShadowEffect_GetXYPositionFromDirectionAndDepth (/* ref */ x, /* ref */ y) {
    x.set((Math.cos(+(((+this['get_Direction']() * 3.1415926535897931) / 180)))) * +this['get_ShadowDepth']());
    y.set(-((Math.sin(+(((+this['get_Direction']() * 3.1415926535897931) / 180)))) * +this['get_ShadowDepth']()));
  };

  function DropShadowEffect_ManageChange (d, e) {
    var dropShadowEffect = $thisType.$Cast(d);
    if (!((dropShadowEffect._parentUIElement === null) || !$T0B()['IsElementInVisualTree'](dropShadowEffect._parentUIElement))) {
      dropShadowEffect['RefreshEffect']();
    }
  };

  function DropShadowEffect_RefreshEffect () {
    var num = new JSIL.BoxedVariable(0);
    var num2 = new JSIL.BoxedVariable(0);
    if (!((this._parentUIElement === null) || !$T0B()['IsElementInVisualTree'](this._parentUIElement))) {
      var frameworkElementOuterStyleForModification = $T0D()['GetFrameworkElementOuterStyleForModification'](this._parentUIElement);
      this['GetXYPositionFromDirectionAndDepth'](/* ref */ num, /* ref */ num2);
      if ($T0E().$Is(this._parentUIElement)) {
        frameworkElementOuterStyleForModification.textShadow = (JSIL.ConcatString.apply(null, JSIL.Array.New($T0F(), [(num.get()).toString(), "px ", (num2.get()).toString(), "px ", (this['get_BlurRadius']()).toString(), "px ", ($T04()['FromArgb'](
                $S01().CallStatic($T10(), "ToByte", null, +this['get_Opacity']() * 255), 
                this['get_Color']().Color$R$value, 
                this['get_Color']().Color$G$value, 
                this['get_Color']().Color$B$value
              )['MemberwiseClone']())['INTERNAL_ToHtmlString']()])));
      } else {
        frameworkElementOuterStyleForModification.boxShadow = (JSIL.ConcatString.apply(null, JSIL.Array.New($T0F(), [(num.get()).toString(), "px ", (num2.get()).toString(), "px ", (this['get_BlurRadius']()).toString(), "px ", ($T04()['FromArgb'](
                $S01().CallStatic($T10(), "ToByte", null, +this['get_Opacity']() * 255), 
                this['get_Color']().Color$R$value, 
                this['get_Color']().Color$G$value, 
                this['get_Color']().Color$B$value
              )['MemberwiseClone']())['INTERNAL_ToHtmlString']()])));
      }
    }
  };

  function DropShadowEffect_set_BlurRadius (value) {
    this['SetValue']($thisType.BlurRadiusProperty, value);
  };

  function DropShadowEffect_set_Color (value) {
    this['SetValue']($thisType.ColorProperty, value);
  };

  function DropShadowEffect_set_Direction (value) {
    this['SetValue']($thisType.DirectionProperty, value);
  };

  function DropShadowEffect_set_Opacity (value) {
    this['SetValue']($thisType.OpacityProperty, value);
  };

  function DropShadowEffect_set_ShadowDepth (value) {
    this['SetValue']($thisType.ShadowDepthProperty, value);
  };

  function DropShadowEffect_SetParentUIElement (newParent) {
    $T06().prototype['SetParentUIElement'].call(this, newParent);
    this['RefreshEffect']();
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("System.Windows.Media.Effects.Effect"), 
      Name: "System.Windows.Media.Effects.DropShadowEffect", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      DropShadowEffect__ctor
    );

    $.Method({Static:false, Public:true }, "get_BlurRadius", 
      JSIL.MethodSignature.Return($.Double), 
      DropShadowEffect_get_BlurRadius
    );

    $.Method({Static:false, Public:true }, "get_Color", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      DropShadowEffect_get_Color
    );

    $.Method({Static:false, Public:true }, "get_Direction", 
      JSIL.MethodSignature.Return($.Double), 
      DropShadowEffect_get_Direction
    );

    $.Method({Static:false, Public:true }, "get_Opacity", 
      JSIL.MethodSignature.Return($.Double), 
      DropShadowEffect_get_Opacity
    );

    $.Method({Static:false, Public:true }, "get_ShadowDepth", 
      JSIL.MethodSignature.Return($.Double), 
      DropShadowEffect_get_ShadowDepth
    );

    $.Method({Static:false, Public:false}, "GetXYPositionFromDirectionAndDepth", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("JSIL.Reference", [$.Double]), $jsilcore.TypeRef("JSIL.Reference", [$.Double])]), 
      DropShadowEffect_GetXYPositionFromDirectionAndDepth
    );

    $.Method({Static:true , Public:false}, "ManageChange", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      DropShadowEffect_ManageChange
    );

    $.Method({Static:false, Public:false}, "RefreshEffect", 
      JSIL.MethodSignature.Void, 
      DropShadowEffect_RefreshEffect
    );

    $.Method({Static:false, Public:true }, "set_BlurRadius", 
      JSIL.MethodSignature.Action($.Double), 
      DropShadowEffect_set_BlurRadius
    );

    $.Method({Static:false, Public:true }, "set_Color", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Color")), 
      DropShadowEffect_set_Color
    );

    $.Method({Static:false, Public:true }, "set_Direction", 
      JSIL.MethodSignature.Action($.Double), 
      DropShadowEffect_set_Direction
    );

    $.Method({Static:false, Public:true }, "set_Opacity", 
      JSIL.MethodSignature.Action($.Double), 
      DropShadowEffect_set_Opacity
    );

    $.Method({Static:false, Public:true }, "set_ShadowDepth", 
      JSIL.MethodSignature.Action($.Double), 
      DropShadowEffect_set_ShadowDepth
    );

    $.Method({Static:false, Public:false, Virtual:true }, "SetParentUIElement", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.UIElement")), 
      DropShadowEffect_SetParentUIElement
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "BlurRadiusProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "ColorProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "DirectionProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "OpacityProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "ShadowDepthProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function DropShadowEffect__cctor () {
      $thisType.BlurRadiusProperty = $T00()['Register']("BlurRadius", $T01().__Type__, $thisType.__Type__, $S00().Construct(5, $T03()['New']($thisType, $thisType['ManageChange'], function () { return JSIL.GetMethodInfo($thisType, "ManageChange", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.ColorProperty = $T00()['Register']("Color", $T04().__Type__, $thisType.__Type__, $S00().Construct($T05()['get_Black']()['MemberwiseClone'](), $T03()['New']($thisType, $thisType['ManageChange'], function () { return JSIL.GetMethodInfo($thisType, "ManageChange", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.DirectionProperty = $T00()['Register']("Direction", $T01().__Type__, $thisType.__Type__, $S00().Construct(315, $T03()['New']($thisType, $thisType['ManageChange'], function () { return JSIL.GetMethodInfo($thisType, "ManageChange", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.OpacityProperty = $T00()['Register']("Opacity", $T01().__Type__, $thisType.__Type__, $S00().Construct(1, $T03()['New']($thisType, $thisType['ManageChange'], function () { return JSIL.GetMethodInfo($thisType, "ManageChange", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.ShadowDepthProperty = $T00()['Register']("ShadowDepth", $T01().__Type__, $thisType.__Type__, $S00().Construct(5, $T03()['New']($thisType, $thisType['ManageChange'], function () { return JSIL.GetMethodInfo($thisType, "ManageChange", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      DropShadowEffect__cctor
    );

    $.Property({Static:false, Public:true }, "BlurRadius", $.Double);

    $.Property({Static:false, Public:true }, "Color", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:false, Public:true }, "Direction", $.Double);

    $.Property({Static:false, Public:true }, "Opacity", $.Double);

    $.Property({Static:false, Public:true }, "ShadowDepth", $.Double);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("Windows.System");
/* enum Windows.System.VirtualKey */ 

JSIL.MakeEnum(
  {
    FullName: "Windows.System.VirtualKey", 
    BaseType: $asm06.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    None: 0, 
    LeftButton: 1, 
    RightButton: 2, 
    Cancel: 3, 
    MiddleButton: 4, 
    XButton1: 5, 
    XButton2: 6, 
    Back: 8, 
    Tab: 9, 
    Clear: 12, 
    Enter: 13, 
    Shift: 16, 
    Control: 17, 
    Menu: 18, 
    Pause: 19, 
    CapitalLock: 20, 
    Hangul: 21, 
    Kana: 21, 
    Junja: 23, 
    Final: 24, 
    Hanja: 25, 
    Kanji: 25, 
    Escape: 27, 
    Convert: 28, 
    NonConvert: 29, 
    Accept: 30, 
    ModeChange: 31, 
    Space: 32, 
    PageUp: 33, 
    PageDown: 34, 
    End: 35, 
    Home: 36, 
    Left: 37, 
    Up: 38, 
    Right: 39, 
    Down: 40, 
    Select: 41, 
    Print: 42, 
    Execute: 43, 
    Snapshot: 44, 
    Insert: 45, 
    Delete: 46, 
    Help: 47, 
    Number0: 48, 
    Number1: 49, 
    Number2: 50, 
    Number3: 51, 
    Number4: 52, 
    Number5: 53, 
    Number6: 54, 
    Number7: 55, 
    Number8: 56, 
    Number9: 57, 
    A: 65, 
    B: 66, 
    C: 67, 
    D: 68, 
    E: 69, 
    F: 70, 
    G: 71, 
    H: 72, 
    I: 73, 
    J: 74, 
    K: 75, 
    L: 76, 
    M: 77, 
    N: 78, 
    O: 79, 
    P: 80, 
    Q: 81, 
    R: 82, 
    S: 83, 
    T: 84, 
    U: 85, 
    V: 86, 
    W: 87, 
    X: 88, 
    Y: 89, 
    Z: 90, 
    LeftWindows: 91, 
    RightWindows: 92, 
    Application: 93, 
    Sleep: 95, 
    NumberPad0: 96, 
    NumberPad1: 97, 
    NumberPad2: 98, 
    NumberPad3: 99, 
    NumberPad4: 100, 
    NumberPad5: 101, 
    NumberPad6: 102, 
    NumberPad7: 103, 
    NumberPad8: 104, 
    NumberPad9: 105, 
    Multiply: 106, 
    Add: 107, 
    Separator: 108, 
    Subtract: 109, 
    Decimal: 110, 
    Divide: 111, 
    F1: 112, 
    F2: 113, 
    F3: 114, 
    F4: 115, 
    F5: 116, 
    F6: 117, 
    F7: 118, 
    F8: 119, 
    F9: 120, 
    F10: 121, 
    F11: 122, 
    F12: 123, 
    F13: 124, 
    F14: 125, 
    F15: 126, 
    F16: 127, 
    F17: 128, 
    F18: 129, 
    F19: 130, 
    F20: 131, 
    F21: 132, 
    F22: 133, 
    F23: 134, 
    F24: 135, 
    NumberKeyLock: 144, 
    Scroll: 145, 
    LeftShift: 160, 
    RightShift: 161, 
    LeftControl: 162, 
    RightControl: 163, 
    LeftMenu: 164, 
    RightMenu: 165, 
  }
);

/* class Windows.UI.Core.CoreDispatcher */ 

(function CoreDispatcher$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Action)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.ArgumentNullException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.ArgumentNullException"), [$asm06.TypeRef("System.String")]))) ();
  };

  function CoreDispatcher__ctor () {
  };

  function CoreDispatcher_BeginInvoke (method) {
    if (method === null) {
      throw $S00().Construct("method");
    }
    setTimeout(method,1);
  };

  function CoreDispatcher_INTERNAL_GetCurrentDispatcher () {
    if ($thisType._currentDispatcher === null) {
      $thisType._currentDispatcher = new $thisType();
    }
    return $thisType._currentDispatcher;
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Core.CoreDispatcher", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      CoreDispatcher__ctor
    );

    $.Method({Static:false, Public:true }, "BeginInvoke", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Action")), 
      CoreDispatcher_BeginInvoke
    );

    $.Method({Static:true , Public:false}, "INTERNAL_GetCurrentDispatcher", 
      JSIL.MethodSignature.Return($.Type), 
      CoreDispatcher_INTERNAL_GetCurrentDispatcher
    );

    $['Field']({Static:true , Public:false}, "_currentDispatcher", $.Type); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Core.CoreDispatcher+<>c__DisplayClass5 */ 

(function $l$gc__DisplayClass5$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_Simulator)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Action)) ();
  };

  function $l$gc__DisplayClass5__ctor () {
  };

  function $l$gc__DisplayClass5_$lBeginInvokeInternal$gb__3 (state) {
    $T01()['get_WebControl']().Dispatcher['BeginInvoke']($T02()['New'](this, $thisType.prototype['$lBeginInvokeInternal$gb__4'], function () { return JSIL.GetMethodInfo($thisType, "$lBeginInvokeInternal$gb__4", JSIL.MethodSignature.Void, false); }));
  };

  function $l$gc__DisplayClass5_$lBeginInvokeInternal$gb__4 () {
    this.method();
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Core.CoreDispatcher+<>c__DisplayClass5", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClass5__ctor
    );

    $.Method({Static:false, Public:true }, "$lBeginInvokeInternal$gb__3", 
      JSIL.MethodSignature.Action($.Object), 
      $l$gc__DisplayClass5_$lBeginInvokeInternal$gb__3
    );

    $.Method({Static:false, Public:true }, "$lBeginInvokeInternal$gb__4", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClass5_$lBeginInvokeInternal$gb__4
    );

    $['Field']({Static:false, Public:true }, "method", $asm06.TypeRef("System.Action")); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* struct Windows.UI.Text.FontWeight */ 

(function FontWeight$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.DotNetForHtml5.Core.TypeFromStringConverters)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Func$b2.Of($asm06.System.String, $asm06.System.Object))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.UInt16)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Text.FontWeights_INTERNAL_FontweightsEnum)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Enum)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Exception"), [$asm06.TypeRef("System.String"), $asm06.TypeRef("System.Exception")]))) ();
  };

  function FontWeight_INTERNAL_ConvertFromString (fontCode, $exception) {
    var fontWeightAsUshort = new JSIL.BoxedVariable(0);
    try {
      if (!$T04()['TryParse'](fontCode, /* ref */ fontWeightAsUshort)) {
        var iNTERNAL_FontweightsEnum = $T05().$Cast($T06()['Parse']($T05().__Type__, fontCode));
        fontWeightAsUshort.set(iNTERNAL_FontweightsEnum['valueOf']());
      }
      var result = $thisType['INTERNAL_ConvertFromUshort'](fontWeightAsUshort.get())['MemberwiseClone']();
    } catch ($exception) {
      throw $S00().Construct(JSIL.ConcatString("Invalid font: ", fontCode), $exception);
    }
    return result;
  };

  function FontWeight_INTERNAL_ConvertFromUshort (fontWeightAsUshort) {
    var result = new $thisType();
    result.Weight = (fontWeightAsUshort | 0);
    return result;
  };

  function FontWeight_INTERNAL_ToHtmlString () {
    return (this.Weight).toString();
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "Windows.UI.Text.FontWeight", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:false}, "INTERNAL_ConvertFromString", 
      new JSIL.MethodSignature($.Object, [$.String]), 
      FontWeight_INTERNAL_ConvertFromString
    );

    $.Method({Static:true , Public:false}, "INTERNAL_ConvertFromUshort", 
      new JSIL.MethodSignature($.Type, [$.UInt16]), 
      FontWeight_INTERNAL_ConvertFromUshort
    );

    $.Method({Static:false, Public:false}, "INTERNAL_ToHtmlString", 
      JSIL.MethodSignature.Return($.String), 
      FontWeight_INTERNAL_ToHtmlString
    );

    $['Field']({Static:false, Public:true }, "Weight", $.UInt16); 
    function FontWeight__cctor () {
      $T00()['RegisterConverter']($thisType.__Type__, $T01()['New']($thisType, $thisType['INTERNAL_ConvertFromString'], function () { return JSIL.GetMethodInfo($thisType, "INTERNAL_ConvertFromString", new JSIL.MethodSignature($asm06.System.Object, [$asm06.System.String]), true); }));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      FontWeight__cctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum Windows.Devices.Input.PointerDeviceType */ 

JSIL.MakeEnum(
  {
    FullName: "Windows.Devices.Input.PointerDeviceType", 
    BaseType: $asm06.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Touch: 0, 
    Pen: 1, 
    Mouse: 2, 
  }
);

/* struct Windows.Foundation.Point */ 

(function Point$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.String)) ();
  };

  function Point__ctor (x, y) {
    this._x = 0;
    this._y = 0;
    this['set_X'](x);
    this['set_Y'](y);
  };

  function Point_Object_Equals (o) {
    return ($thisType.$Is(o) && $thisType['op_Equality']($thisType.$Cast(o), this));
  };

  function Point_Equals$00 (value) {
    return $thisType['op_Equality'](value, this);
  };

  function Point_get_X () {
    return this._x;
  };

  function Point_get_Y () {
    return this._y;
  };

  function Point_GetHashCode () {
    return (((this['get_X']())['GetHashCode']() | 0) ^ ((this['get_Y']())['GetHashCode']() | 0));
  };

  function Point_op_Equality (point1, point2) {
    return ((+point1['get_X']() === +point2['get_X']()) && (+point1['get_Y']() === +point2['get_Y']()));
  };

  function Point_op_Inequality (point1, point2) {
    return ((+point1['get_X']() !== +point2['get_X']()) || (+point1['get_Y']() !== +point2['get_Y']()));
  };

  function Point_set_X (value) {
    this._x = +value;
  };

  function Point_set_Y (value) {
    this._y = +value;
  };

  function Point_toString () {
    return JSIL.ConcatString(this['get_X'](), ",", this['get_Y']());
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "Windows.Foundation.Point", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 2, 
      SequentialLayout: true, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Double, $.Double]), 
      Point__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object]), 
      Point_Object_Equals
    );

    $.Method({Static:false, Public:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Type]), 
      Point_Equals$00
    );

    $.Method({Static:false, Public:true }, "get_X", 
      JSIL.MethodSignature.Return($.Double), 
      Point_get_X
    );

    $.Method({Static:false, Public:true }, "get_Y", 
      JSIL.MethodSignature.Return($.Double), 
      Point_get_Y
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32), 
      Point_GetHashCode
    );

    $.Method({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      Point_op_Equality
    );

    $.Method({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      Point_op_Inequality
    );

    $.Method({Static:false, Public:true }, "set_X", 
      JSIL.MethodSignature.Action($.Double), 
      Point_set_X
    );

    $.Method({Static:false, Public:true }, "set_Y", 
      JSIL.MethodSignature.Action($.Double), 
      Point_set_Y
    );

    $.Method({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String), 
      Point_toString
    );

    $['Field']({Static:false, Public:false}, "_x", $.Double); 
    $['Field']({Static:false, Public:false}, "_y", $.Double); 
    $.Property({Static:false, Public:true }, "X", $.Double);

    $.Property({Static:false, Public:true }, "Y", $.Double);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct Windows.Foundation.Rect */ 

(function Rect$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.Foundation.Point)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.Foundation.Size)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.ArgumentException)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize(System.Array.Of($asm06.System.Object))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.ArgumentException"), [$asm06.TypeRef("System.String")]))) ();
  };

  function Rect__ctor$00 (point1, point2) {
    this._x = 0;
    this._y = 0;
    this._width = 0;
    this._height = 0;
    var arg_5E_0 = +(
      (+point1['get_X']() < +point2['get_X']())
         ? point1['get_X']()
         : point2['get_X']())
    ;
    var arg_80_0 = +(
      (+point1['get_X']() >= +point2['get_X']())
         ? point1['get_X']()
         : point2['get_X']())
    ;
    this['set_X'](point1['get_X']());
    this['set_Width'](+point2['get_X']() - +point1['get_X']());
    var arg_C6_0 = +(
      (+point1['get_Y']() < +point2['get_Y']())
         ? point1['get_Y']()
         : point2['get_Y']())
    ;
    var arg_E8_0 = +(
      (+point1['get_Y']() >= +point2['get_Y']())
         ? point1['get_Y']()
         : point2['get_Y']())
    ;
    this['set_Y'](point1['get_Y']());
    this['set_Height'](+point2['get_Y']() - +point1['get_Y']());
  };

  function Rect__ctor$01 (location, size) {
    this._x = 0;
    this._y = 0;
    this._width = 0;
    this._height = 0;
    this['set_X'](location['get_X']());
    this['set_Y'](location['get_Y']());
    this['set_Width'](size['get_Width']());
    this['set_Height'](size['get_Height']());
  };

  function Rect__ctor$02 (x, y, width, height) {
    this._x = 0;
    this._y = 0;
    this._width = 0;
    this._height = 0;
    this['set_X'](x);
    this['set_Y'](y);
    this['set_Width'](width);
    this['set_Height'](height);
  };

  function Rect_Contains (point) {
    var flag = (+this['get_X']() <= +point['get_X']()) && 
    ((+this['get_X']() + +this['get_Width']()) >= +point['get_X']());
    return (!(!flag || 
        (+this['get_Y']() > +point['get_Y']())) && ((+this['get_Y']() + +this['get_Width']()) >= +point['get_Y']()));
  };

  function Rect_Object_Equals (o) {
    return ($thisType.$Is(o) && $thisType['op_Equality']($thisType.$Cast(o), this));
  };

  function Rect_Equals$03 (value) {
    return $thisType['op_Equality'](value, this);
  };

  function Rect_get_Bottom () {
    if (this['get_IsEmpty']()) {
      var result = -Infinity;
    } else {
      result = +this['get_Y']() + +this['get_Height']();
    }
    return result;
  };

  function Rect_get_Empty () {
    var result = new $thisType();
    result['set_Width'](-Infinity);
    result['set_Height'](-Infinity);
    result['set_X'](Infinity);
    result['set_Y'](Infinity);
    return result;
  };

  function Rect_get_Height () {
    return this._height;
  };

  function Rect_get_IsEmpty () {
    return ((+this['get_Width']() < 0) && (+this['get_Height']() < 0));
  };

  function Rect_get_Left () {
    if (this['get_IsEmpty']()) {
      var result = -Infinity;
    } else {
      result = +this['get_X']();
    }
    return result;
  };

  function Rect_get_Right () {
    if (this['get_IsEmpty']()) {
      var result = -Infinity;
    } else {
      result = +this['get_X']() + +this['get_Width']();
    }
    return result;
  };

  function Rect_get_Top () {
    if (this['get_IsEmpty']()) {
      var result = -Infinity;
    } else {
      result = +this['get_Y']();
    }
    return result;
  };

  function Rect_get_Width () {
    return this._width;
  };

  function Rect_get_X () {
    return this._x;
  };

  function Rect_get_Y () {
    return this._y;
  };

  function Rect_GetHashCode () {
    return (((((this['get_X']())['GetHashCode']() | 0) ^ ((this['get_Y']())['GetHashCode']() | 0)) ^ ((this['get_Width']())['GetHashCode']() | 0)) ^ ((this['get_Height']())['GetHashCode']() | 0));
  };

  function Rect_op_Equality (rect1, rect2) {
    return (!((+rect1['get_X']() !== +rect2['get_X']()) || 
        (+rect1['get_Y']() !== +rect2['get_Y']()) || 
        (+rect1['get_Width']() !== +rect2['get_Width']())) && (+rect1['get_Height']() === +rect2['get_Height']()));
  };

  function Rect_op_Inequality (rect1, rect2) {
    return ((+rect1['get_X']() !== +rect2['get_X']()) || 
      (+rect1['get_Y']() !== +rect2['get_Y']()) || 
      (+rect1['get_Width']() !== +rect2['get_Width']()) || (+rect1['get_Height']() !== +rect2['get_Height']()));
  };

  function Rect_set_Height (value) {
    if (!(this['get_IsEmpty']() || (+value >= 0))) {
      throw $S00().Construct("Height cannot be lower than 0");
    }
    this._height = +value;
  };

  function Rect_set_Width (value) {
    if (!(this['get_IsEmpty']() || (+value >= 0))) {
      throw $S00().Construct("Width cannot be lower than 0");
    }
    this._width = +value;
  };

  function Rect_set_X (value) {
    this._x = +value;
  };

  function Rect_set_Y (value) {
    this._y = +value;
  };

  function Rect_toString () {
    return JSIL.ConcatString.apply(null, JSIL.Array.New($T04(), [this['get_X'](), ",", this['get_Y'](), ",", this['get_Width'](), ",", this['get_Height']()]));
  };

  function Rect_Union$04 (point) {
    if (+point['get_X']() < +this['get_X']()) {
      this['set_Width']((+this['get_Width']() + +this['get_X']()) - +point['get_X']());
      this['set_X'](point['get_X']());
    } else if (+point['get_X']() > (+this['get_X']() + +this['get_Width']())) {
      this['set_Width']((+this['get_Width']() + +point['get_X']()) - +this['get_X']());
    }
    if (+point['get_Y']() < +this['get_Y']()) {
      this['set_Height']((+this['get_Height']() + +this['get_Y']()) - +point['get_Y']());
      this['set_Y'](point['get_Y']());
    } else if (+point['get_Y']() > (+this['get_Y']() + +this['get_Height']())) {
      this['set_Height']((+this['get_Height']() + +point['get_Y']()) - +this['get_Y']());
    }
  };

  function Rect_Union$05 (rect) {
    if (+rect['get_X']() < +this['get_X']()) {
      this['set_Width']((+this['get_Width']() + +this['get_X']()) - +rect['get_X']());
      this['set_X'](rect['get_X']());
    } else if ((+rect['get_X']() + +rect['get_Width']()) > (+this['get_X']() + +this['get_Width']())) {
      this['set_Width'](((+this['get_Width']() + +rect['get_X']()) + +rect['get_Width']()) - +this['get_X']());
    }
    if (+rect['get_Y']() < +this['get_Y']()) {
      this['set_Height']((+this['get_Height']() + +this['get_Y']()) - +rect['get_Y']());
      this['set_Y'](rect['get_Y']());
    } else if ((+rect['get_Y']() + +rect['get_Height']()) > (+this['get_Y']() + +this['get_Height']())) {
      this['set_Height'](((+this['get_Height']() + +rect['get_Y']()) + +rect['get_Height']()) - +this['get_Y']());
    }
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "Windows.Foundation.Rect", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 4, 
      SequentialLayout: true, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.Foundation.Point"), $asm00.TypeRef("Windows.Foundation.Point")]), 
      Rect__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.Foundation.Point"), $asm00.TypeRef("Windows.Foundation.Size")]), 
      Rect__ctor$01
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Double, $.Double, 
          $.Double, $.Double
        ]), 
      Rect__ctor$02
    );

    $.Method({Static:false, Public:true }, "Contains", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Windows.Foundation.Point")]), 
      Rect_Contains
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object]), 
      Rect_Object_Equals
    );

    $.Method({Static:false, Public:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Type]), 
      Rect_Equals$03
    );

    $.Method({Static:false, Public:true }, "get_Bottom", 
      JSIL.MethodSignature.Return($.Double), 
      Rect_get_Bottom
    );

    $.Method({Static:true , Public:true }, "get_Empty", 
      JSIL.MethodSignature.Return($.Type), 
      Rect_get_Empty
    );

    $.Method({Static:false, Public:true }, "get_Height", 
      JSIL.MethodSignature.Return($.Double), 
      Rect_get_Height
    );

    $.Method({Static:false, Public:true }, "get_IsEmpty", 
      JSIL.MethodSignature.Return($.Boolean), 
      Rect_get_IsEmpty
    );

    $.Method({Static:false, Public:true }, "get_Left", 
      JSIL.MethodSignature.Return($.Double), 
      Rect_get_Left
    );

    $.Method({Static:false, Public:true }, "get_Right", 
      JSIL.MethodSignature.Return($.Double), 
      Rect_get_Right
    );

    $.Method({Static:false, Public:true }, "get_Top", 
      JSIL.MethodSignature.Return($.Double), 
      Rect_get_Top
    );

    $.Method({Static:false, Public:true }, "get_Width", 
      JSIL.MethodSignature.Return($.Double), 
      Rect_get_Width
    );

    $.Method({Static:false, Public:true }, "get_X", 
      JSIL.MethodSignature.Return($.Double), 
      Rect_get_X
    );

    $.Method({Static:false, Public:true }, "get_Y", 
      JSIL.MethodSignature.Return($.Double), 
      Rect_get_Y
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32), 
      Rect_GetHashCode
    );

    $.Method({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      Rect_op_Equality
    );

    $.Method({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      Rect_op_Inequality
    );

    $.Method({Static:false, Public:true }, "set_Height", 
      JSIL.MethodSignature.Action($.Double), 
      Rect_set_Height
    );

    $.Method({Static:false, Public:true }, "set_Width", 
      JSIL.MethodSignature.Action($.Double), 
      Rect_set_Width
    );

    $.Method({Static:false, Public:true }, "set_X", 
      JSIL.MethodSignature.Action($.Double), 
      Rect_set_X
    );

    $.Method({Static:false, Public:true }, "set_Y", 
      JSIL.MethodSignature.Action($.Double), 
      Rect_set_Y
    );

    $.Method({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String), 
      Rect_toString
    );

    $.Method({Static:false, Public:true }, "Union", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.Foundation.Point")), 
      Rect_Union$04
    );

    $.Method({Static:false, Public:true }, "Union", 
      JSIL.MethodSignature.Action($.Type), 
      Rect_Union$05
    );

    $['Field']({Static:false, Public:false}, "_x", $.Double); 
    $['Field']({Static:false, Public:false}, "_y", $.Double); 
    $['Field']({Static:false, Public:false}, "_width", $.Double); 
    $['Field']({Static:false, Public:false}, "_height", $.Double); 
    $.Property({Static:false, Public:true }, "Bottom", $.Double);

    $.Property({Static:true , Public:true }, "Empty", $.Type);

    $.Property({Static:false, Public:true }, "Height", $.Double);

    $.Property({Static:false, Public:true }, "IsEmpty", $.Boolean);

    $.Property({Static:false, Public:true }, "Left", $.Double);

    $.Property({Static:false, Public:true }, "Right", $.Double);

    $.Property({Static:false, Public:true }, "Top", $.Double);

    $.Property({Static:false, Public:true }, "Width", $.Double);

    $.Property({Static:false, Public:true }, "X", $.Double);

    $.Property({Static:false, Public:true }, "Y", $.Double);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct Windows.Foundation.Size */ 

(function Size$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.NotImplementedException)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.ArgumentException)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.NotImplementedException"), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.ArgumentException"), [$asm06.TypeRef("System.String")]))) ();
  };

  function Size__ctor (width, height) {
    this._width = 0;
    this._height = 0;
    this._isEmpty = false;
    this['set_Width'](width);
    this['set_Height'](height);
  };

  function Size_Object_Equals (o) {
    return ($thisType.$Is(o) && $thisType['op_Equality']($thisType.$Cast(o), this));
  };

  function Size_Equals$00 (value) {
    return $thisType['op_Equality'](value, this);
  };

  function Size_get_Empty () {
    var result = new $thisType();
    result['set_IsEmpty'](true);
    result['set_Width'](-Infinity);
    result['set_Height'](-Infinity);
    return result;
  };

  function Size_get_Height () {
    return this._height;
  };

  function Size_get_IsEmpty () {
    return this._isEmpty;
  };

  function Size_get_Width () {
    return this._width;
  };

  function Size_GetHashCode () {
    throw $S00().Construct();
  };

  function Size_op_Equality (size1, size2) {
    return ((+size1['get_Height']() === +size2['get_Height']()) && (+size1['get_Width']() === +size2['get_Width']()));
  };

  function Size_op_Inequality (size1, size2) {
    return ((+size1['get_Height']() !== +size2['get_Height']()) || (+size1['get_Width']() !== +size2['get_Width']()));
  };

  function Size_set_Height (value) {
    if (!(this['get_IsEmpty']() || (+value >= 0))) {
      throw $S01().Construct("Height cannot be lower than 0");
    }
    this._height = +value;
  };

  function Size_set_IsEmpty (value) {
    this._isEmpty = value;
  };

  function Size_set_Width (value) {
    if (!(this['get_IsEmpty']() || (+value >= 0))) {
      throw $S01().Construct("Width cannot be lower than 0");
    }
    this._width = +value;
  };

  function Size_toString () {
    return JSIL.ConcatString(this['get_Width'](), ",", this['get_Height']());
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "Windows.Foundation.Size", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 2, 
      SequentialLayout: true, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Double, $.Double]), 
      Size__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object]), 
      Size_Object_Equals
    );

    $.Method({Static:false, Public:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Type]), 
      Size_Equals$00
    );

    $.Method({Static:true , Public:true }, "get_Empty", 
      JSIL.MethodSignature.Return($.Type), 
      Size_get_Empty
    );

    $.Method({Static:false, Public:true }, "get_Height", 
      JSIL.MethodSignature.Return($.Double), 
      Size_get_Height
    );

    $.Method({Static:false, Public:true }, "get_IsEmpty", 
      JSIL.MethodSignature.Return($.Boolean), 
      Size_get_IsEmpty
    );

    $.Method({Static:false, Public:true }, "get_Width", 
      JSIL.MethodSignature.Return($.Double), 
      Size_get_Width
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32), 
      Size_GetHashCode
    );

    $.Method({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      Size_op_Equality
    );

    $.Method({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      Size_op_Inequality
    );

    $.Method({Static:false, Public:true }, "set_Height", 
      JSIL.MethodSignature.Action($.Double), 
      Size_set_Height
    );

    $.Method({Static:false, Public:false}, "set_IsEmpty", 
      JSIL.MethodSignature.Action($.Boolean), 
      Size_set_IsEmpty
    );

    $.Method({Static:false, Public:true }, "set_Width", 
      JSIL.MethodSignature.Action($.Double), 
      Size_set_Width
    );

    $.Method({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String), 
      Size_toString
    );

    $['Field']({Static:false, Public:false}, "_width", $.Double); 
    $['Field']({Static:false, Public:false}, "_height", $.Double); 
    $['Field']({Static:false, Public:false}, "_isEmpty", $.Boolean); 
    $.Property({Static:true , Public:true }, "Empty", $.Type);

    $.Property({Static:false, Public:true }, "Height", $.Double);

    $.Property({Static:false, Public:true }, "IsEmpty", $.Boolean);

    $.Property({Static:false, Public:true }, "Width", $.Double);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum Windows.System.VirtualKeyModifiers */ 

JSIL.MakeEnum(
  {
    FullName: "Windows.System.VirtualKeyModifiers", 
    BaseType: $asm06.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: true, 
  }, 
  {
    None: 0, 
    Control: 1, 
    Menu: 2, 
    Shift: 4, 
  }
);

/* class Windows.UI.Core.WindowSizeChangedEventArgs */ 

(function WindowSizeChangedEventArgs$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.Foundation.Size)) ();
  };

  function WindowSizeChangedEventArgs__ctor () {
  };

  function WindowSizeChangedEventArgs_get_Handled () {
    return this.WindowSizeChangedEventArgs$Handled$value;
  };

  function WindowSizeChangedEventArgs_get_Size () {
    return this.WindowSizeChangedEventArgs$Size$value;
  };

  function WindowSizeChangedEventArgs_set_Handled (value) {
    this.WindowSizeChangedEventArgs$Handled$value = value;
  };

  function WindowSizeChangedEventArgs_set_Size (value) {
    this.WindowSizeChangedEventArgs$Size$value = value['MemberwiseClone']();
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Core.WindowSizeChangedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      WindowSizeChangedEventArgs__ctor
    );

    $.Method({Static:false, Public:true }, "get_Handled", 
      JSIL.MethodSignature.Return($.Boolean), 
      WindowSizeChangedEventArgs_get_Handled
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Size", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.Foundation.Size")), 
      WindowSizeChangedEventArgs_get_Size
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Handled", 
      JSIL.MethodSignature.Action($.Boolean), 
      WindowSizeChangedEventArgs_set_Handled
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Size", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.Foundation.Size")), 
      WindowSizeChangedEventArgs_set_Size
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $['Field']({Static:false, Public:false}, "WindowSizeChangedEventArgs$Handled$value", $.Boolean)
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "WindowSizeChangedEventArgs$Size$value", $asm00.TypeRef("Windows.Foundation.Size"))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true }, "Handled", $.Boolean);

    $.Property({Static:false, Public:true }, "Size", $asm00.TypeRef("Windows.Foundation.Size"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Text.FontWeights */ 

(function FontWeights$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Text.FontWeight)) ();
  };

  function FontWeights__ctor () {
  };

  function FontWeights_get_Black () {
    return $T00()['INTERNAL_ConvertFromUshort'](900);
  };

  function FontWeights_get_Bold () {
    return $T00()['INTERNAL_ConvertFromUshort'](700);
  };

  function FontWeights_get_DemiBold () {
    return $T00()['INTERNAL_ConvertFromUshort'](600);
  };

  function FontWeights_get_ExtraBlack () {
    return $T00()['INTERNAL_ConvertFromUshort'](900);
  };

  function FontWeights_get_ExtraBold () {
    return $T00()['INTERNAL_ConvertFromUshort'](800);
  };

  function FontWeights_get_ExtraLight () {
    return $T00()['INTERNAL_ConvertFromUshort'](200);
  };

  function FontWeights_get_Heavy () {
    return $T00()['INTERNAL_ConvertFromUshort'](900);
  };

  function FontWeights_get_Light () {
    return $T00()['INTERNAL_ConvertFromUshort'](300);
  };

  function FontWeights_get_Medium () {
    return $T00()['INTERNAL_ConvertFromUshort'](500);
  };

  function FontWeights_get_Normal () {
    return $T00()['INTERNAL_ConvertFromUshort'](400);
  };

  function FontWeights_get_Regular () {
    return $T00()['INTERNAL_ConvertFromUshort'](400);
  };

  function FontWeights_get_SemiBold () {
    return $T00()['INTERNAL_ConvertFromUshort'](600);
  };

  function FontWeights_get_SemiLight () {
    return $T00()['INTERNAL_ConvertFromUshort'](300);
  };

  function FontWeights_get_Thin () {
    return $T00()['INTERNAL_ConvertFromUshort'](100);
  };

  function FontWeights_get_UltraBlack () {
    return $T00()['INTERNAL_ConvertFromUshort'](900);
  };

  function FontWeights_get_UltraBold () {
    return $T00()['INTERNAL_ConvertFromUshort'](800);
  };

  function FontWeights_get_UltraLight () {
    return $T00()['INTERNAL_ConvertFromUshort'](200);
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Text.FontWeights", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      FontWeights__ctor
    );

    $.Method({Static:true , Public:true }, "get_Black", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Text.FontWeight")), 
      FontWeights_get_Black
    );

    $.Method({Static:true , Public:true }, "get_Bold", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Text.FontWeight")), 
      FontWeights_get_Bold
    );

    $.Method({Static:true , Public:true }, "get_DemiBold", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Text.FontWeight")), 
      FontWeights_get_DemiBold
    );

    $.Method({Static:true , Public:true }, "get_ExtraBlack", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Text.FontWeight")), 
      FontWeights_get_ExtraBlack
    );

    $.Method({Static:true , Public:true }, "get_ExtraBold", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Text.FontWeight")), 
      FontWeights_get_ExtraBold
    );

    $.Method({Static:true , Public:true }, "get_ExtraLight", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Text.FontWeight")), 
      FontWeights_get_ExtraLight
    );

    $.Method({Static:true , Public:true }, "get_Heavy", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Text.FontWeight")), 
      FontWeights_get_Heavy
    );

    $.Method({Static:true , Public:true }, "get_Light", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Text.FontWeight")), 
      FontWeights_get_Light
    );

    $.Method({Static:true , Public:true }, "get_Medium", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Text.FontWeight")), 
      FontWeights_get_Medium
    );

    $.Method({Static:true , Public:true }, "get_Normal", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Text.FontWeight")), 
      FontWeights_get_Normal
    );

    $.Method({Static:true , Public:true }, "get_Regular", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Text.FontWeight")), 
      FontWeights_get_Regular
    );

    $.Method({Static:true , Public:true }, "get_SemiBold", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Text.FontWeight")), 
      FontWeights_get_SemiBold
    );

    $.Method({Static:true , Public:true }, "get_SemiLight", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Text.FontWeight")), 
      FontWeights_get_SemiLight
    );

    $.Method({Static:true , Public:true }, "get_Thin", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Text.FontWeight")), 
      FontWeights_get_Thin
    );

    $.Method({Static:true , Public:true }, "get_UltraBlack", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Text.FontWeight")), 
      FontWeights_get_UltraBlack
    );

    $.Method({Static:true , Public:true }, "get_UltraBold", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Text.FontWeight")), 
      FontWeights_get_UltraBold
    );

    $.Method({Static:true , Public:true }, "get_UltraLight", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Text.FontWeight")), 
      FontWeights_get_UltraLight
    );

    $.Property({Static:true , Public:true }, "Black", $asm00.TypeRef("Windows.UI.Text.FontWeight"));

    $.Property({Static:true , Public:true }, "Bold", $asm00.TypeRef("Windows.UI.Text.FontWeight"));

    $.Property({Static:true , Public:true }, "DemiBold", $asm00.TypeRef("Windows.UI.Text.FontWeight"));

    $.Property({Static:true , Public:true }, "ExtraBlack", $asm00.TypeRef("Windows.UI.Text.FontWeight"));

    $.Property({Static:true , Public:true }, "ExtraBold", $asm00.TypeRef("Windows.UI.Text.FontWeight"));

    $.Property({Static:true , Public:true }, "ExtraLight", $asm00.TypeRef("Windows.UI.Text.FontWeight"));

    $.Property({Static:true , Public:true }, "Heavy", $asm00.TypeRef("Windows.UI.Text.FontWeight"));

    $.Property({Static:true , Public:true }, "Light", $asm00.TypeRef("Windows.UI.Text.FontWeight"));

    $.Property({Static:true , Public:true }, "Medium", $asm00.TypeRef("Windows.UI.Text.FontWeight"));

    $.Property({Static:true , Public:true }, "Normal", $asm00.TypeRef("Windows.UI.Text.FontWeight"));

    $.Property({Static:true , Public:true }, "Regular", $asm00.TypeRef("Windows.UI.Text.FontWeight"));

    $.Property({Static:true , Public:true }, "SemiBold", $asm00.TypeRef("Windows.UI.Text.FontWeight"));

    $.Property({Static:true , Public:true }, "SemiLight", $asm00.TypeRef("Windows.UI.Text.FontWeight"));

    $.Property({Static:true , Public:true }, "Thin", $asm00.TypeRef("Windows.UI.Text.FontWeight"));

    $.Property({Static:true , Public:true }, "UltraBlack", $asm00.TypeRef("Windows.UI.Text.FontWeight"));

    $.Property({Static:true , Public:true }, "UltraBold", $asm00.TypeRef("Windows.UI.Text.FontWeight"));

    $.Property({Static:true , Public:true }, "UltraLight", $asm00.TypeRef("Windows.UI.Text.FontWeight"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum Windows.UI.Text.FontWeights+INTERNAL_FontweightsEnum */ 

JSIL.MakeEnum(
  {
    FullName: "Windows.UI.Text.FontWeights+INTERNAL_FontweightsEnum", 
    BaseType: $asm06.TypeRef("System.UInt16"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Thin: 100, 
    UltraLight: 200, 
    ExtraLight: 200, 
    Light: 300, 
    SemiLight: 300, 
    Normal: 400, 
    Regular: 400, 
    Medium: 500, 
    SemiBold: 600, 
    DemiBold: 600, 
    Bold: 700, 
    UltraBold: 800, 
    ExtraBold: 800, 
    Black: 900, 
    UltraBlack: 900, 
    Heavy: 900, 
    ExtraBlack: 900, 
  }
);

/* enum Windows.UI.Text.TextDecorations */ 

JSIL.MakeEnum(
  {
    FullName: "Windows.UI.Text.TextDecorations", 
    BaseType: $asm06.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    None: 0, 
    OverLine: 2, 
    Strikethrough: 3, 
    Underline: 4, 
  }
);

/* class Windows.UI.Xaml.Controls.Primitives.ToggleButton */ 

(function ToggleButton$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Nullable$b1.Of($asm06.System.Boolean))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Primitives.ButtonBase)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventHandler)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Delegate)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Threading.Interlocked)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventArgs)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };

  function ToggleButton__ctor () {
    this.INTERNAL_IsCodeProgrammaticallyChangingIsChecked = false;
    this.INTERNAL_InnerDomElement = null;
    $T04().prototype['_ctor'].call(this);
    this._forceClickEventToBeTheLastEventRaised = true;
  };

  function ToggleButton_add_Checked (value) {
    var routedEventHandler = this.Checked;

    do {
      var routedEventHandler2 = routedEventHandler;
      var value2 = $T06()['Combine'](routedEventHandler2, value);
      routedEventHandler = $T07()['CompareExchange$b1']($T05())(/* ref */ new JSIL['MemberReference'](this, "Checked"), value2, routedEventHandler2);
    } while (routedEventHandler !== routedEventHandler2);
  };

  function ToggleButton_add_Indeterminate (value) {
    var routedEventHandler = this.Indeterminate;

    do {
      var routedEventHandler2 = routedEventHandler;
      var value2 = $T06()['Combine'](routedEventHandler2, value);
      routedEventHandler = $T07()['CompareExchange$b1']($T05())(/* ref */ new JSIL['MemberReference'](this, "Indeterminate"), value2, routedEventHandler2);
    } while (routedEventHandler !== routedEventHandler2);
  };

  function ToggleButton_add_Unchecked (value) {
    var routedEventHandler = this.Unchecked;

    do {
      var routedEventHandler2 = routedEventHandler;
      var value2 = $T06()['Combine'](routedEventHandler2, value);
      routedEventHandler = $T07()['CompareExchange$b1']($T05())(/* ref */ new JSIL['MemberReference'](this, "Unchecked"), value2, routedEventHandler2);
    } while (routedEventHandler !== routedEventHandler2);
  };

  function ToggleButton_get_IsChecked () {
    return $T01().$Cast(this['GetValue']($thisType.IsCheckedProperty));
  };

  function ToggleButton_IsChecked_Changed (d, e) {
    var toggleButton = $thisType.$Cast(d);
    var flag = $T01().$Cast(e['get_NewValue']());
    if ($T0A()['IsElementInVisualTree'](toggleButton)) {
      toggleButton['UpdateDomBasedOnCheckedState'](flag);
    }
    if (e['get_NewValue']() !== e['get_OldValue']()) {
      if (flag === null) {
        toggleButton['OnIndeterminate']();
      } else if (flag === true) {
        toggleButton['OnChecked']();
      } else {
        toggleButton['OnUnchecked']();
      }
    }
  };

  function ToggleButton_OnChecked () {
    if (this.Checked !== null) {
      var routedEventArgs = new ($T0B())();
      routedEventArgs['set_OriginalSource'](this);
      this.Checked(this, routedEventArgs);
    }
  };

  function ToggleButton_OnIndeterminate () {
    if (this.Indeterminate !== null) {
      var routedEventArgs = new ($T0B())();
      routedEventArgs['set_OriginalSource'](this);
      this.Indeterminate(this, routedEventArgs);
    }
  };

  function ToggleButton_OnUnchecked () {
    if (this.Unchecked !== null) {
      var routedEventArgs = new ($T0B())();
      routedEventArgs['set_OriginalSource'](this);
      this.Unchecked(this, routedEventArgs);
    }
  };

  function ToggleButton_remove_Checked (value) {
    var routedEventHandler = this.Checked;

    do {
      var routedEventHandler2 = routedEventHandler;
      var value2 = $T06()['Remove'](routedEventHandler2, value);
      routedEventHandler = $T07()['CompareExchange$b1']($T05())(/* ref */ new JSIL['MemberReference'](this, "Checked"), value2, routedEventHandler2);
    } while (routedEventHandler !== routedEventHandler2);
  };

  function ToggleButton_remove_Indeterminate (value) {
    var routedEventHandler = this.Indeterminate;

    do {
      var routedEventHandler2 = routedEventHandler;
      var value2 = $T06()['Remove'](routedEventHandler2, value);
      routedEventHandler = $T07()['CompareExchange$b1']($T05())(/* ref */ new JSIL['MemberReference'](this, "Indeterminate"), value2, routedEventHandler2);
    } while (routedEventHandler !== routedEventHandler2);
  };

  function ToggleButton_remove_Unchecked (value) {
    var routedEventHandler = this.Unchecked;

    do {
      var routedEventHandler2 = routedEventHandler;
      var value2 = $T06()['Remove'](routedEventHandler2, value);
      routedEventHandler = $T07()['CompareExchange$b1']($T05())(/* ref */ new JSIL['MemberReference'](this, "Unchecked"), value2, routedEventHandler2);
    } while (routedEventHandler !== routedEventHandler2);
  };

  function ToggleButton_set_IsChecked (value) {
    this['SetValue']($thisType.IsCheckedProperty, value);
  };

  function ToggleButton_SubscribeToClickEventForChildContainerDiv (divWhereToPlaceChild, toggleDomElement) {
  };

  function ToggleButton_UpdateDomBasedOnCheckedState (isChecked) {
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.Primitives.ButtonBase"), 
      Name: "Windows.UI.Xaml.Controls.Primitives.ToggleButton", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ToggleButton__ctor
    );

    $.Method({Static:false, Public:true }, "add_Checked", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")), 
      ToggleButton_add_Checked
    );

    $.Method({Static:false, Public:true }, "add_Indeterminate", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")), 
      ToggleButton_add_Indeterminate
    );

    $.Method({Static:false, Public:true }, "add_Unchecked", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")), 
      ToggleButton_add_Unchecked
    );

    $.Method({Static:false, Public:true }, "get_IsChecked", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Nullable`1", [$.Boolean])), 
      ToggleButton_get_IsChecked
    );

    $.Method({Static:true , Public:false}, "IsChecked_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      ToggleButton_IsChecked_Changed
    );

    $.Method({Static:false, Public:false}, "OnChecked", 
      JSIL.MethodSignature.Void, 
      ToggleButton_OnChecked
    );

    $.Method({Static:false, Public:false}, "OnIndeterminate", 
      JSIL.MethodSignature.Void, 
      ToggleButton_OnIndeterminate
    );

    $.Method({Static:false, Public:false}, "OnUnchecked", 
      JSIL.MethodSignature.Void, 
      ToggleButton_OnUnchecked
    );

    $.Method({Static:false, Public:true }, "remove_Checked", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")), 
      ToggleButton_remove_Checked
    );

    $.Method({Static:false, Public:true }, "remove_Indeterminate", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")), 
      ToggleButton_remove_Indeterminate
    );

    $.Method({Static:false, Public:true }, "remove_Unchecked", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")), 
      ToggleButton_remove_Unchecked
    );

    $.Method({Static:false, Public:true }, "set_IsChecked", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Nullable`1", [$.Boolean])), 
      ToggleButton_set_IsChecked
    );

    $.Method({Static:false, Public:false, Virtual:true }, "SubscribeToClickEventForChildContainerDiv", 
      new JSIL.MethodSignature(null, [$.Object, $.Object]), 
      ToggleButton_SubscribeToClickEventForChildContainerDiv
    )
      .Parameter(0, "divWhereToPlaceChild", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        })
      .Parameter(1, "toggleDomElement", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false, Virtual:true }, "UpdateDomBasedOnCheckedState", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Nullable`1", [$.Boolean])), 
      ToggleButton_UpdateDomBasedOnCheckedState
    );

    $['Field']({Static:false, Public:false}, "INTERNAL_IsCodeProgrammaticallyChangingIsChecked", $.Boolean); 
    $['Field']({Static:false, Public:false}, "INTERNAL_InnerDomElement", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "IsCheckedProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:false, Public:false}, "Checked", $asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")); 
    $['Field']({Static:false, Public:false}, "Indeterminate", $asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")); 
    $['Field']({Static:false, Public:false}, "Unchecked", $asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")); 
    function ToggleButton__cctor () {
      $thisType.IsCheckedProperty = $T00()['Register']("IsChecked", $T01().__Type__, $thisType.__Type__, $S00().Construct(false, $T03()['New']($thisType, $thisType['IsChecked_Changed'], function () { return JSIL.GetMethodInfo($thisType, "IsChecked_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      ToggleButton__cctor
    );

    $.Property({Static:false, Public:true }, "IsChecked", $asm06.TypeRef("System.Nullable`1", [$.Boolean]));

    $.Event({Static:false, Public:true }, "Checked", $asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler"));

    $.Event({Static:false, Public:true }, "Indeterminate", $asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler"));

    $.Event({Static:false, Public:true }, "Unchecked", $asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.INTERNAL_CheckBoxAndRadioButtonHelpers */ 

(function INTERNAL_CheckBoxAndRadioButtonHelpers$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Primitives.ToggleButton)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.INTERNAL_CheckBoxAndRadioButtonHelpers_$l$gc__DisplayClass8)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_EventsHelper)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Action$b1.Of($asm06.System.Object))) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };

  function INTERNAL_CheckBoxAndRadioButtonHelpers_CreateDomElement (checkBoxOrRadioButton, domInputType, parentRef, /* ref */ domElementWhereToPlaceChildren) {
    var obj2 = new JSIL.BoxedVariable(null);
    var parentRef2 = new JSIL.BoxedVariable(null);
    var obj5 = new JSIL.BoxedVariable(null);
    var obj7 = new JSIL.BoxedVariable(null);
    var $closure0 = new ($T03())();
    $closure0.checkBoxOrRadioButton = checkBoxOrRadioButton;
    var obj = $T04()['CreateDomElementAppendItAndGetStyle']("div", parentRef, $closure0.checkBoxOrRadioButton, /* ref */ obj2);
    var obj3 = $T04()['CreateDomElementAppendItAndGetStyle']("div", obj2.get(), $closure0.checkBoxOrRadioButton, /* ref */ parentRef2);
    var obj4 = $T04()['CreateDomElementAppendItAndGetStyle']("input", parentRef2.get(), $closure0.checkBoxOrRadioButton, /* ref */ obj5);
    $T04()['SetDomElementAttribute'](obj5.get(), "type", domInputType, true);
    obj3.position = "relative";
    obj3.display = "table-cell";
    obj3.height = "100%";
    $closure0.checkBoxOrRadioButton.UIElement$INTERNAL_OptionalSpecifyDomElementConcernedByFocus$value = obj5.get();
    $T06()['AttachToDomEvents']("change", obj5.get(), $T07()['New']($closure0, $T03().prototype['$lCreateDomElement$gb__7'], function () { return JSIL.GetMethodInfo($asm00.Windows.UI.Xaml.Controls.INTERNAL_CheckBoxAndRadioButtonHelpers_$l$gc__DisplayClass8, "$lCreateDomElement$gb__7", JSIL.MethodSignature.Action($.Object), false); }));
    var obj6 = $T04()['CreateDomElementAppendItAndGetStyle']("div", obj2.get(), $closure0.checkBoxOrRadioButton, /* ref */ obj7);
    obj6.position = "relative";
    obj6.display = "table-cell";
    obj6.height = "100%";
    ($closure0.checkBoxOrRadioButton)['SubscribeToClickEventForChildContainerDiv'](obj7.get(), obj5.get());
    domElementWhereToPlaceChildren.set(obj7.get());
    return obj2.get();
  };

  function INTERNAL_CheckBoxAndRadioButtonHelpers_IsCheckedValueChanged (checkBoxOrRadioButton) {
    if (!checkBoxOrRadioButton.INTERNAL_IsCodeProgrammaticallyChangingIsChecked) {
      if ($T08()['IsElementInVisualTree'](checkBoxOrRadioButton)) {
        var flag = $T04()['GetDomElementAttribute'](checkBoxOrRadioButton.UIElement$INTERNAL_OptionalSpecifyDomElementConcernedByFocus$value, "checked") === true;
        checkBoxOrRadioButton.INTERNAL_IsCodeProgrammaticallyChangingIsChecked = true;
        checkBoxOrRadioButton['SetLocalValue']($T00().IsCheckedProperty, flag);
        checkBoxOrRadioButton.INTERNAL_IsCodeProgrammaticallyChangingIsChecked = false;
      }
    }
  };

  function INTERNAL_CheckBoxAndRadioButtonHelpers_ManageIsEnabled (checkBoxOrRadioButton, e) {
    if ($T08()['IsElementInVisualTree'](checkBoxOrRadioButton)) {
      var flag = $T09().$Cast(e['get_NewValue']());
      if (flag) {
        $T04()['RemoveDomElementAttribute'](checkBoxOrRadioButton.UIElement$INTERNAL_OptionalSpecifyDomElementConcernedByFocus$value, "disabled", true);
      } else {
        $T04()['SetDomElementAttribute'](checkBoxOrRadioButton.UIElement$INTERNAL_OptionalSpecifyDomElementConcernedByFocus$value, "disabled", true, true);
      }
    }
  };

  function INTERNAL_CheckBoxAndRadioButtonHelpers_UpdateDomBasedOnCheckedState (checkBoxOrRadioButton, isChecked) {
    if (!((isChecked !== null) && (isChecked !== false))) {
      $T04()['RemoveDomElementAttribute'](checkBoxOrRadioButton.UIElement$INTERNAL_OptionalSpecifyDomElementConcernedByFocus$value, "checked", true);
    } else {
      $T04()['SetDomElementProperty'](checkBoxOrRadioButton.UIElement$INTERNAL_OptionalSpecifyDomElementConcernedByFocus$value, "checked", true, true);
    }
  };

  JSIL.MakeStaticClass("Windows.UI.Xaml.Controls.INTERNAL_CheckBoxAndRadioButtonHelpers", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:false}, "CreateDomElement", 
      new JSIL.MethodSignature($.Object, [
          $asm00.TypeRef("Windows.UI.Xaml.Controls.Primitives.ToggleButton"), $.String, 
          $.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])
        ]), 
      INTERNAL_CheckBoxAndRadioButtonHelpers_CreateDomElement
    );

    $.Method({Static:true , Public:false}, "IsCheckedValueChanged", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Controls.Primitives.ToggleButton")), 
      INTERNAL_CheckBoxAndRadioButtonHelpers_IsCheckedValueChanged
    );

    $.Method({Static:true , Public:false}, "ManageIsEnabled", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.Controls.Primitives.ToggleButton"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      INTERNAL_CheckBoxAndRadioButtonHelpers_ManageIsEnabled
    );

    $.Method({Static:true , Public:false}, "UpdateDomBasedOnCheckedState", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.Controls.Primitives.ToggleButton"), $asm06.TypeRef("System.Nullable`1", [$.Boolean])]), 
      INTERNAL_CheckBoxAndRadioButtonHelpers_UpdateDomBasedOnCheckedState
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.INTERNAL_CheckBoxAndRadioButtonHelpers+<>c__DisplayClass8 */ 

(function $l$gc__DisplayClass8$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.INTERNAL_CheckBoxAndRadioButtonHelpers)) ();
  };

  function $l$gc__DisplayClass8__ctor () {
  };

  function $l$gc__DisplayClass8_$lCreateDomElement$gb__7 (e) {
    $T01()['IsCheckedValueChanged'](this.checkBoxOrRadioButton);
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.Controls.INTERNAL_CheckBoxAndRadioButtonHelpers+<>c__DisplayClass8", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClass8__ctor
    );

    $.Method({Static:false, Public:true }, "$lCreateDomElement$gb__7", 
      JSIL.MethodSignature.Action($.Object), 
      $l$gc__DisplayClass8_$lCreateDomElement$gb__7
    );

    $['Field']({Static:false, Public:true }, "checkBoxOrRadioButton", $asm00.TypeRef("Windows.UI.Xaml.Controls.Primitives.ToggleButton")); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Windows.UI.Xaml.Controls.ComboBox */ 

(function ComboBox$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Primitives.Selector)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ItemsControl)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.NotImplementedException)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Collections.IEnumerable)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm06.System.Object))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Collections.IEnumerator)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.IDisposable)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.NotImplementedException"), [$asm06.TypeRef("System.String")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("System.Object")]), null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm06.System.Collections.IEnumerable.GetEnumerator)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm06.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm06.System.Collections.IEnumerator.get_Current)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm06.System.IDisposable.Dispose)) ();
  };

  function ComboBox__ctor () {
    this._areItemsDisplayed = false;
    $T00().prototype['_ctor'].call(this);
  };

  function ComboBox_AddChildItemToVisualTree (newItem) {
    var obj = this['AccessValueByApplyingPropertyPathIfAny'](newItem, this['get_DisplayMemberPath']());
    if (obj !== null) {
      if (this['get_ItemTemplate']() !== null) {
        throw $S00().Construct("ItemTemplate is not supported yet in ComboBox");
      }
      if (this._nativeComboBoxDomElement !== null) {
        $T04()['AddToSelectDomElement'](this._nativeComboBoxDomElement, obj['toString']());
      }
    }
  };

  function ComboBox_ConvertToListOfObjectsOrNull (enumerable) {
    var list = null;
    if (enumerable !== null) {
      list = $S01().Construct();
      var enumerator = $IM00().Call(enumerable, null);
      try {

        while ($IM01().Call(enumerator, null)) {
          var current = $IM02().Call(enumerator, null);
          list['Add'](current);
        }
      } finally {
        var disposable = $T08().$As(enumerator);
        if (disposable !== null) {
          $IM03().Call(disposable, null);
        }
      }
    }
    return list;
  };

  function ComboBox_CreateDomElement (parentRef, /* ref */ domElementWhereToPlaceChildren) {
    var obj = $T04()['CreateDomElementAndAppendIt']("select", parentRef, this);
    domElementWhereToPlaceChildren.set(obj);
    this._nativeComboBoxDomElement = obj;
    this['SubscribeToDomSelectionChangedEvent'](obj);
    return obj;
  };

  function ComboBox_GetListOfNewlySelectedItems (e) {
    var list = $S01().Construct();
    list['Add']($T04()['GetDomElementAttribute'](this._nativeComboBoxDomElement, "selectedIndex"));
    return list;
  };

  function ComboBox_GetSelectedIndex (e) {
    if (this._areItemsDisplayedInNativeComboBox) {
      var result = $T09().$Cast($T04()['GetDomElementAttribute'](this._nativeComboBoxDomElement, "selectedIndex"));
    } else {
      result = -1;
    }
    return result;
  };

  function ComboBox_RemoveChildItemFromVisualTree$00 (item, index, coll) {
    if (coll === null) {
      coll = $thisType['ConvertToListOfObjectsOrNull'](this['get_Items']());
    }
    if (coll !== null) {

    $loop0: 
      for (var i = (index | 0); i < (coll['get_Count']() | 0); i = ((i + 1) | 0)) {
        var obj = coll['get_Item'](i);
        if (obj === item) {
          this['RemoveChildItemFromVisualTree'](i, this._areItemsDisplayedInNativeComboBox);
          break $loop0;
        }
        i = ((i + 1) | 0);
      }
    }
  };

  function ComboBox_RemoveChildItemFromVisualTree$01 (index, wasItemInNativeComboBox) {
    if ((index | 0) !== -1) {
      if (!wasItemInNativeComboBox) {
        throw $S00().Construct("ItemTemplate not implemented yet in ComboBox");
      }
      if (this._nativeComboBoxDomElement !== null) {
        $T04()['RemoveFromSelectDomElement'](this._nativeComboBoxDomElement, index);
      }
    }
  };

  function ComboBox_SetNewSelectedIndexInHtml (index) {
    if ($T0B()['IsElementInVisualTree'](this)) {
      if (this._areItemsDisplayedInNativeComboBox) {
        $T04()['SetDomElementProperty'](this._nativeComboBoxDomElement, "selectedIndex", index, true);
      }
    }
  };

  function ComboBox_UpdateChildrenInVisualTree (oldChildrenEnumerable, newChildrenEnumerable, forceUpdateAllChildren) {
    var $temp00, $temp01;
    if (!((this._areItemsDisplayed && 
          (oldChildrenEnumerable === newChildrenEnumerable)) || !$T0B()['IsElementInVisualTree'](this))) {
      var list = $thisType['ConvertToListOfObjectsOrNull'](oldChildrenEnumerable);
      var list2 = $thisType['ConvertToListOfObjectsOrNull'](newChildrenEnumerable);
      if (list !== null) {
        if (!this._areItemsDisplayed) {
          list['Clear']();
        }
        if (forceUpdateAllChildren) {

          for (var i = (((list['get_Count']() | 0) - 1) | 0); i >= 0; i = ((i - 1) | 0)) {
            this['RemoveChildItemFromVisualTree'](i, this._areItemsDisplayedInNativeComboBox);
          }
          list['Clear']();
        }
        var j = 0;
        if (list2 !== null) {

          for (var a$0 = list2._items, i$0 = 0, l$0 = (list2._size | 0); i$0 < l$0; ($temp00 = i$0, 
              i$0 = ((i$0 + 1) | 0), 
              $temp00)) {
            var current = a$0[i$0];
            var obj = null;
            if (j < (list['get_Count']() | 0)) {
              obj = list['get_Item'](j);
            }

            while ((obj !== null) && (obj !== current)) {
              this['RemoveChildItemFromVisualTree'](j, this._areItemsDisplayedInNativeComboBox);
              j = ((j + 1) | 0);
              if (j < (list['get_Count']() | 0)) {
                obj = list['get_Item'](j);
              } else {
                obj = null;
              }
            }
            if (j >= (list['get_Count']() | 0)) {
              this['AddChildItemToVisualTree'](current);
            }
            j = ((j + 1) | 0);
          }
        }

        for (; j < (list['get_Count']() | 0); j = ((j + 1) | 0)) {
          this['RemoveChildItemFromVisualTree'](j, this._areItemsDisplayedInNativeComboBox);
        }
      } else {

        for (var a$1 = list2._items, i$1 = 0, l$1 = (list2._size | 0); i$1 < l$1; ($temp01 = i$1, 
            i$1 = ((i$1 + 1) | 0), 
            $temp01)) {
          current = a$1[i$1];
          this['AddChildItemToVisualTree'](current);
        }
      }
      this._areItemsDisplayedInNativeComboBox = this['get_ItemTemplate']() === null;
      this._areItemsDisplayed = true;
      this['SetNewSelectedIndexInHtml'](this['get_SelectedIndex']());
    }
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.Primitives.Selector"), 
      Name: "Windows.UI.Xaml.Controls.ComboBox", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ComboBox__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "AddChildItemToVisualTree", 
      JSIL.MethodSignature.Action($.Object), 
      ComboBox_AddChildItemToVisualTree
    );

    $.Method({Static:true , Public:false}, "ConvertToListOfObjectsOrNull", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$.Object]), [$asm06.TypeRef("System.Collections.IEnumerable")]), 
      ComboBox_ConvertToListOfObjectsOrNull
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CreateDomElement", 
      new JSIL.MethodSignature($.Object, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]), 
      ComboBox_CreateDomElement
    );

    $.Method({Static:false, Public:false, Virtual:true }, "GetListOfNewlySelectedItems", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.IList`1", [$.Object]), [$.Object]), 
      ComboBox_GetListOfNewlySelectedItems
    )
      .Parameter(0, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false, Virtual:true }, "GetSelectedIndex", 
      new JSIL.MethodSignature($.Int32, [$.Object]), 
      ComboBox_GetSelectedIndex
    )
      .Parameter(0, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false, Virtual:true }, "RemoveChildItemFromVisualTree", 
      new JSIL.MethodSignature(null, [
          $.Object, $.Int32, 
          $asm06.TypeRef("System.Collections.Generic.List`1", [$.Object])
        ]), 
      ComboBox_RemoveChildItemFromVisualTree$00
    );

    $.Method({Static:false, Public:false}, "RemoveChildItemFromVisualTree", 
      new JSIL.MethodSignature(null, [$.Int32, $.Boolean]), 
      ComboBox_RemoveChildItemFromVisualTree$01
    );

    $.Method({Static:false, Public:false, Virtual:true }, "SetNewSelectedIndexInHtml", 
      JSIL.MethodSignature.Action($.Int32), 
      ComboBox_SetNewSelectedIndexInHtml
    );

    $.Method({Static:false, Public:false, Virtual:true }, "UpdateChildrenInVisualTree", 
      new JSIL.MethodSignature(null, [
          $asm06.TypeRef("System.Collections.IEnumerable"), $asm06.TypeRef("System.Collections.IEnumerable"), 
          $.Boolean
        ]), 
      ComboBox_UpdateChildrenInVisualTree
    );

    $['Field']({Static:false, Public:false}, "_areItemsDisplayedInNativeComboBox", $.Boolean); 
    $['Field']({Static:false, Public:false}, "_nativeComboBoxDomElement", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute")); 
    $['Field']({Static:false, Public:false}, "_areItemsDisplayed", $.Boolean); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.HyperlinkButton */ 

(function HyperlinkButton$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.System.Uri)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Primitives.ButtonBase)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventHandler)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventArgs)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object")]))) ();
  };

  function HyperlinkButton__ctor () {
    $T03().prototype['_ctor'].call(this);
    this['add_Click']($T04()['New'](this, $thisType.prototype['HyperlinkButton_Click'], function () { return JSIL.GetMethodInfo($thisType, "HyperlinkButton_Click", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm00.Windows.UI.Xaml.RoutedEventArgs]), false); }));
  };

  function HyperlinkButton_get_NavigateUri () {
    return $T01().$Cast(this['GetValue']($thisType.NavigateUriProperty));
  };

  function HyperlinkButton_HyperlinkButton_Click (sender, e) {
    if (this['get_NavigateUri']() !== null) {
      window.open(this['get_NavigateUri']().OriginalString);
    }
  };

  function HyperlinkButton_set_NavigateUri (value) {
    this['SetValue']($thisType.NavigateUriProperty, value);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.Primitives.ButtonBase"), 
      Name: "Windows.UI.Xaml.Controls.HyperlinkButton", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      HyperlinkButton__ctor
    );

    $.Method({Static:false, Public:true }, "get_NavigateUri", 
      JSIL.MethodSignature.Return($asm01.TypeRef("System.Uri")), 
      HyperlinkButton_get_NavigateUri
    );

    $.Method({Static:false, Public:false}, "HyperlinkButton_Click", 
      new JSIL.MethodSignature(null, [$.Object, $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")]), 
      HyperlinkButton_HyperlinkButton_Click
    );

    $.Method({Static:false, Public:true }, "set_NavigateUri", 
      JSIL.MethodSignature.Action($asm01.TypeRef("System.Uri")), 
      HyperlinkButton_set_NavigateUri
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "NavigateUriProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function HyperlinkButton__cctor () {
      $thisType.NavigateUriProperty = $T00()['Register']("NavigateUri", $T01().__Type__, $thisType.__Type__, $S00().Construct(null));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      HyperlinkButton__cctor
    );

    $.Property({Static:false, Public:true }, "NavigateUri", $asm01.TypeRef("System.Uri"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.ItemCollection */ 

(function ItemCollection$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.System.Collections.ObjectModel.ObservableCollection$b1.Of($asm06.System.Object))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm06.System.Object))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerable$b1.Of($asm06.System.Object))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm01.System.Collections.Specialized.NotifyCollectionChangedAction)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("System.Object")])]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("System.Object")])]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("System.Object")]), [$asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("System.Object")])]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Specialized.NotifyCollectionChangedEventArgs"), [$asm01.TypeRef("System.Collections.Specialized.NotifyCollectionChangedAction"), $asm06.TypeRef("System.Collections.IList")]))) ();
  };

  function ItemCollection__ctor$00 () {
    $T00().prototype['_ctor'].call(this);
  };

  function ItemCollection__ctor$01 (list) {
    $S00().Call($T00().prototype, "_ctor", null, this, list);
  };

  function ItemCollection__ctor$02 (enumerable) {
    $S01().Call($T00().prototype, "_ctor", null, this, enumerable);
  };

  function ItemCollection_ClearItems () {
    this._suppressCollectionChanged = true;
    var changedItems = $S02().Construct(this);
    $T00().prototype['ClearItems'].call(this);
    $T00().prototype['OnCollectionChanged'].call(this, $S03().Construct($T04().Remove, changedItems));
  };

  function ItemCollection_OnCollectionChanged (e) {
    if (!this._suppressCollectionChanged) {
      $T00().prototype['OnCollectionChanged'].call(this, e);
    }
    this._suppressCollectionChanged = false;
  };

  JSIL.MakeType({
      BaseType: $asm01.TypeRef("System.Collections.ObjectModel.ObservableCollection`1", [$asm06.TypeRef("System.Object")]), 
      Name: "Windows.UI.Xaml.Controls.ItemCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ItemCollection__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Collections.Generic.List`1", [$.Object])), 
      ItemCollection__ctor$01
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$.Object])), 
      ItemCollection__ctor$02
    );

    $.Method({Static:false, Public:false, Virtual:true }, "ClearItems", 
      JSIL.MethodSignature.Void, 
      ItemCollection_ClearItems
    );

    $.Method({Static:false, Public:false, Virtual:true }, "OnCollectionChanged", 
      JSIL.MethodSignature.Action($asm01.TypeRef("System.Collections.Specialized.NotifyCollectionChangedEventArgs")), 
      ItemCollection_OnCollectionChanged
    );

    $['Field']({Static:false, Public:false}, "_suppressCollectionChanged", $.Boolean); 
    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.ListBox */ 

(function ListBox$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.Brush)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.SolidColorBrush)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Colors)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.SelectionMode)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Primitives.MultiSelector)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Primitives.Selector)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ItemsControl)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkTemplate)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.TextBlock)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ListBoxItem)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Primitives.ButtonBase)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventHandler)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm06.System.Object, $asm00.Windows.UI.Xaml.FrameworkElement))) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize(System.Array.Of($asm06.System.String))) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm06.System.Char)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize(System.Array.Of($asm06.System.Char))) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize(System.Array.Of($asm06.System.Reflection.MemberInfo))) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm06.System.Type)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm06.System.Reflection.FieldInfo)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm06.System.Reflection.PropertyInfo)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventArgs)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm06.System.Collections.IList)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_WorkaroundObservableCollectionBugWithJSIL)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm06.System.Convert)) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm06.System.Collections.ObjectModel.Collection$b1.Of($asm06.System.Object))) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs)) ();
  };
  var $T24 = function () {
    return ($T24 = JSIL.Memoize($asm01.System.Collections.Specialized.NotifyCollectionChangedAction)) ();
  };
  var $T25 = function () {
    return ($T25 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm06.System.Object))) ();
  };
  var $T26 = function () {
    return ($T26 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_ListsHelper)) ();
  };
  var $T27 = function () {
    return ($T27 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T28 = function () {
    return ($T28 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2_ValueCollection_Enumerator.Of($asm06.System.Object, $asm00.Windows.UI.Xaml.FrameworkElement))) ();
  };
  var $T29 = function () {
    return ($T29 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2_ValueCollection.Of($asm06.System.Object, $asm00.Windows.UI.Xaml.FrameworkElement))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.Media.SolidColorBrush"), [$asm00.TypeRef("Windows.UI.Color")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [$asm06.TypeRef("System.Object")]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm06.System.Collections.IList.Add)) ();
  };

  function ListBox__ctor () {
    $T06().prototype['_ctor'].call(this);
  };

  function ListBox_AddChildItemToVisualTree (item) {
    var frameworkElement = null;
    if ($T09().$Is(item)) {
      frameworkElement = $T08().$Cast(item);
    } else if (!((this._renderedItemsPanelTemplate === null) || !$T0A()['IsElementInVisualTree'](this._renderedItemsPanelTemplate))) {
      var value = this['GetValue'](item, this['get_DisplayMemberPath']());
      if (this['get_ItemTemplate']() !== null) {
        frameworkElement = (this['get_ItemTemplate']())['INTERNAL_InstantiateFrameworkTemplate']();
        frameworkElement['set_DataContext'](value);
      } else {
        var textBlock = new ($T0E())();
        textBlock['set_Text'](value['toString']());
        frameworkElement = textBlock;
      }
    }
    if (!((this._renderedItemsPanelTemplate === null) || !$T0A()['IsElementInVisualTree'](this._renderedItemsPanelTemplate))) {
      if (frameworkElement !== null) {
        if ($T0F().$Is(frameworkElement)) {
          var listBoxItem = $T0F().$Cast(frameworkElement);
        } else {
          listBoxItem = new ($T0F())();
        }
        listBoxItem['add_Click']($T11()['New'](this, $thisType.prototype['listBoxItem_Click'], function () { return JSIL.GetMethodInfo($thisType, "listBoxItem_Click", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm00.Windows.UI.Xaml.RoutedEventArgs]), false); }));
        listBoxItem.ParentListBox = this;
        listBoxItem.Item = item;
        (this._itemsToDataTemplatedRenderedElement)['set_Item'](item, listBoxItem);
        $T0A()['AttachVisualChildIfNotAlreadyAttached'](listBoxItem, this._renderedItemsPanelTemplate);
        if (frameworkElement !== listBoxItem) {
          $T0A()['AttachVisualChildIfNotAlreadyAttached'](frameworkElement, listBoxItem);
        }
      }
    }
  };

  function ListBox_DomSelectionChanged (element) {
  };

  function ListBox_get_SelectedItemBackgroundBrush () {
    return $T01().$Cast(this['GetValue']($thisType.SelectedItemBackgroundBrushProperty));
  };

  function ListBox_get_SelectedItemForegroundBrush () {
    return $T01().$Cast(this['GetValue']($thisType.SelectedItemForegroundBrushProperty));
  };

  function ListBox_get_SelectionMode () {
    return $T05().$Cast(this['GetValue']($thisType.SelectionModeProperty));
  };

  function ListBox_get_UnselectedItemBackgroundBrush () {
    return $T01().$Cast(this['GetValue']($thisType.UnselectedItemBackgroundBrushProperty));
  };

  function ListBox_get_UnselectedItemForegroundBrush () {
    return $T01().$Cast(this['GetValue']($thisType.UnselectedItemForegroundBrushProperty));
  };

  function ListBox_GetValue$00 (context, path) {
    if (!$T14()['IsNullOrWhiteSpace'](path)) {
      var array = (JSIL.SplitString(path, JSIL.Array.New($T16(), ["."])));
      var obj = context;

      for (var i = 0; i < (array.length | 0); i = ((i + 1) | 0)) {
        var member = (JSIL['GetType'](obj))['GetMember'](array[i]);
        if ((member === null) || ((member.length | 0) <= 0)) {
          var result = "";
          return result;
        }
        if ($T1B().$Is(member[0])) {
          var fieldInfo = $T1B().$Cast(member[0]);
          obj = fieldInfo['GetValue'](obj);
        } else {
          if (!$T1C().$Is(member[0])) {
            result = "";
            return result;
          }
          var propertyInfo = $T1C().$Cast(member[0]);
          obj = propertyInfo['GetValue'](obj);
        }
      }
      result = obj;
    } else {
      result = context;
    }
    return result;
  };

  function ListBox_listBoxItem_Click (sender, e) {
    var listBoxItem = $T0F().$Cast(sender);
    if (!((((this['get_SelectionMode']())['valueOf']() | 0) !== 0) || 
        (this['get_SelectedItem']() === null) || (listBoxItem === (this._itemsToDataTemplatedRenderedElement)['get_Item'](this['get_SelectedItem']())))) {
      this['UnselectItem'](this['get_SelectedItem']());
    } else if (!((((this['get_SelectionMode']())['valueOf']() | 0) === 0) || 
        (this['get_SelectedItems']() === null) || !$T1F()['Contains'](this['get_SelectedItems'](), listBoxItem.Item))) {
      this['UnselectItem'](listBoxItem.Item);
      return;
    }
    this['SelectItem'](listBoxItem.Item);
  };

  function ListBox_ManageSelectedIndex_Changed (e) {
    $T0B().prototype['ManageSelectedIndex_Changed'].call(this, e);
    if (!((e['get_OldValue']() === null) || 
        !$T18().$Is(e['get_OldValue']()) || 
        (($S02().CallStatic($T21(), "ToInt32", null, e['get_OldValue']()) | 0) < 0) || (this['get_SelectionMode']() !== $T05().Single))) {
      $T1F()['Clear'](this['get_SelectedItems']());
    }
    if (!((e['get_NewValue']() === null) || 
        !$T18().$Is(e['get_NewValue']()) || (($S02().CallStatic($T21(), "ToInt32", null, e['get_NewValue']()) | 0) < 0))) {
      var index = ($S02().CallStatic($T21(), "ToInt32", null, e['get_NewValue']()) | 0);
      if (this['get_SelectionMode']() === $T05().Single) {
        $T1F()['Clear'](this['get_SelectedItems']());
        $IM00().Call(this['get_SelectedItems'](), null, (this['get_Items']())['get_Item'](index));
      } else if (!$T1F()['Contains'](
          this['get_SelectedItems'](), 
          e['get_NewValue']()
        )) {
        $IM00().Call(this['get_SelectedItems'](), null, (this['get_Items']())['get_Item'](index));
      }
    }
  };

  function ListBox_RefreshSelectedItems (e) {
    var $temp00, $temp01;
    if (e['get_Action']() === $T24().Reset) {
      this['UnselectAllItems']();
    }
    if (e['get_OldItems']() !== null) {
      var list = $T26()['ConvertToListOfObjectsOrNull'](e['get_OldItems']());

      for (var a$0 = list._items, i$0 = 0, l$0 = (list._size | 0); i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        this['SetItemVisualSelectionState'](current, false);
      }
    }
    if (e['get_NewItems']() !== null) {
      var list2 = $T26()['ConvertToListOfObjectsOrNull'](e['get_NewItems']());

      for (var a$1 = list2._items, i$1 = 0, l$1 = (list2._size | 0); i$1 < l$1; ($temp01 = i$1, 
          i$1 = ((i$1 + 1) | 0), 
          $temp01)) {
        current = a$1[i$1];
        this['SetItemVisualSelectionState'](current, true);
      }
    }
  };

  function ListBox_SelectItem (item) {
    if (this['get_SelectionMode']() === $T05().Single) {
      $T1F()['Clear'](this['get_SelectedItems']());
      $IM00().Call(this['get_SelectedItems'](), null, item);
    } else if (!$T1F()['Contains'](this['get_SelectedItems'](), item)) {
      $IM00().Call(this['get_SelectedItems'](), null, item);
    }
  };

  function ListBox_set_SelectedItemBackgroundBrush (value) {
    this['SetValue']($thisType.SelectedItemBackgroundBrushProperty, value);
  };

  function ListBox_set_SelectedItemForegroundBrush (value) {
    this['SetValue']($thisType.SelectedItemForegroundBrushProperty, value);
  };

  function ListBox_set_SelectionMode (value) {
    this['SetValue']($thisType.SelectionModeProperty, value);
  };

  function ListBox_set_UnselectedItemBackgroundBrush (value) {
    this['SetValue']($thisType.UnselectedItemBackgroundBrushProperty, value);
  };

  function ListBox_set_UnselectedItemForegroundBrush (value) {
    this['SetValue']($thisType.UnselectedItemForegroundBrushProperty, value);
  };

  function ListBox_SetItemVisualSelectionState (item, newState) {
    var listBoxItem = $T0F().$Cast((this._itemsToDataTemplatedRenderedElement)['get_Item'](item));
    listBoxItem['set_IsSelected'](newState);
    if (newState) {
      this['set_SelectedItem'](item);
    }
  };

  function ListBox_SetNewSelectedIndexInHtml (index) {
  };

  function ListBox_SubscribeToDomSelectionChangedEvent (elementOnWhichToSubscribe) {
  };

  function ListBox_UnselectAllItems () {
    var enumerator = ((this._itemsToDataTemplatedRenderedElement)['get_Values']())['GetEnumerator']();

    while ($T28().prototype['MoveNext'].call(enumerator)) {
      var current = $T28().prototype['get_Current'].call(enumerator);
      ($T0F().$Cast(current))['set_IsSelected'](false);
    }
  };

  function ListBox_UnselectItem (item) {
    if (this['get_SelectionMode']() === $T05().Single) {
      $T1F()['Clear'](this['get_SelectedItems']());
    } else if ($T1F()['Contains'](this['get_SelectedItems'](), item)) {
      $T1F()['Remove'](this['get_SelectedItems'](), item);
    }
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.Primitives.MultiSelector"), 
      Name: "Windows.UI.Xaml.Controls.ListBox", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ListBox__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "AddChildItemToVisualTree", 
      JSIL.MethodSignature.Action($.Object), 
      ListBox_AddChildItemToVisualTree
    );

    $.Method({Static:false, Public:false, Virtual:true }, "DomSelectionChanged", 
      JSIL.MethodSignature.Action($.Object), 
      ListBox_DomSelectionChanged
    )
      .Parameter(0, "element", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:true }, "get_SelectedItemBackgroundBrush", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      ListBox_get_SelectedItemBackgroundBrush
    );

    $.Method({Static:false, Public:true }, "get_SelectedItemForegroundBrush", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      ListBox_get_SelectedItemForegroundBrush
    );

    $.Method({Static:false, Public:true }, "get_SelectionMode", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Controls.SelectionMode")), 
      ListBox_get_SelectionMode
    );

    $.Method({Static:false, Public:true }, "get_UnselectedItemBackgroundBrush", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      ListBox_get_UnselectedItemBackgroundBrush
    );

    $.Method({Static:false, Public:true }, "get_UnselectedItemForegroundBrush", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      ListBox_get_UnselectedItemForegroundBrush
    );

    $.Method({Static:false, Public:false}, "GetValue", 
      new JSIL.MethodSignature($.Object, [$.Object, $.String]), 
      ListBox_GetValue$00
    );

    $.Method({Static:false, Public:false}, "listBoxItem_Click", 
      new JSIL.MethodSignature(null, [$.Object, $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")]), 
      ListBox_listBoxItem_Click
    );

    $.Method({Static:false, Public:false, Virtual:true }, "ManageSelectedIndex_Changed", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")), 
      ListBox_ManageSelectedIndex_Changed
    );

    $.Method({Static:false, Public:false, Virtual:true }, "RefreshSelectedItems", 
      JSIL.MethodSignature.Action($asm01.TypeRef("System.Collections.Specialized.NotifyCollectionChangedEventArgs")), 
      ListBox_RefreshSelectedItems
    );

    $.Method({Static:false, Public:false}, "SelectItem", 
      JSIL.MethodSignature.Action($.Object), 
      ListBox_SelectItem
    );

    $.Method({Static:false, Public:true }, "set_SelectedItemBackgroundBrush", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      ListBox_set_SelectedItemBackgroundBrush
    );

    $.Method({Static:false, Public:true }, "set_SelectedItemForegroundBrush", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      ListBox_set_SelectedItemForegroundBrush
    );

    $.Method({Static:false, Public:true }, "set_SelectionMode", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Controls.SelectionMode")), 
      ListBox_set_SelectionMode
    );

    $.Method({Static:false, Public:true }, "set_UnselectedItemBackgroundBrush", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      ListBox_set_UnselectedItemBackgroundBrush
    );

    $.Method({Static:false, Public:true }, "set_UnselectedItemForegroundBrush", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      ListBox_set_UnselectedItemForegroundBrush
    );

    $.Method({Static:false, Public:false}, "SetItemVisualSelectionState", 
      new JSIL.MethodSignature(null, [$.Object, $.Boolean]), 
      ListBox_SetItemVisualSelectionState
    );

    $.Method({Static:false, Public:false, Virtual:true }, "SetNewSelectedIndexInHtml", 
      JSIL.MethodSignature.Action($.Int32), 
      ListBox_SetNewSelectedIndexInHtml
    );

    $.Method({Static:false, Public:false, Virtual:true }, "SubscribeToDomSelectionChangedEvent", 
      JSIL.MethodSignature.Action($.Object), 
      ListBox_SubscribeToDomSelectionChangedEvent
    )
      .Parameter(0, "elementOnWhichToSubscribe", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false}, "UnselectAllItems", 
      JSIL.MethodSignature.Void, 
      ListBox_UnselectAllItems
    );

    $.Method({Static:false, Public:false}, "UnselectItem", 
      JSIL.MethodSignature.Action($.Object), 
      ListBox_UnselectItem
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "SelectedItemBackgroundBrushProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "SelectedItemForegroundBrushProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "UnselectedItemBackgroundBrushProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "UnselectedItemForegroundBrushProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "SelectionModeProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function ListBox__cctor () {
      $thisType.SelectedItemBackgroundBrushProperty = $T00()['Register']("SelectedItemBackgroundBrush", $T01().__Type__, $thisType.__Type__, $S00().Construct($S01().Construct($T04()['get_Blue']()['MemberwiseClone']())));
      $thisType.SelectedItemForegroundBrushProperty = $T00()['Register']("SelectedItemForegroundBrush", $T01().__Type__, $thisType.__Type__, $S00().Construct($S01().Construct($T04()['get_White']()['MemberwiseClone']())));
      $thisType.UnselectedItemBackgroundBrushProperty = $T00()['Register']("UnselectedItemBackgroundBrush", $T01().__Type__, $thisType.__Type__, $S00().Construct(null));
      $thisType.UnselectedItemForegroundBrushProperty = $T00()['Register']("UnselectedItemForegroundBrush", $T01().__Type__, $thisType.__Type__, $S00().Construct(null));
      $thisType.SelectionModeProperty = $T00()['Register']("SelectionMode", $T05().__Type__, $thisType.__Type__, $S00().Construct($T05().Single));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      ListBox__cctor
    );

    $.Property({Static:false, Public:true }, "SelectedItemBackgroundBrush", $asm00.TypeRef("Windows.UI.Xaml.Media.Brush"));

    $.Property({Static:false, Public:true }, "SelectedItemForegroundBrush", $asm00.TypeRef("Windows.UI.Xaml.Media.Brush"));

    $.Property({Static:false, Public:true }, "UnselectedItemBackgroundBrush", $asm00.TypeRef("Windows.UI.Xaml.Media.Brush"));

    $.Property({Static:false, Public:true }, "UnselectedItemForegroundBrush", $asm00.TypeRef("Windows.UI.Xaml.Media.Brush"));

    $.Property({Static:false, Public:true }, "SelectionMode", $asm00.TypeRef("Windows.UI.Xaml.Controls.SelectionMode"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.ListBoxItem */ 

(function ListBoxItem$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Button)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Control)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ListBox)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };

  function ListBoxItem__ctor () {
    this.Item = null;
    $T04().prototype['_ctor'].call(this);
  };

  function ListBoxItem_get_IsSelected () {
    return $T01().$Cast(this['GetValue']($thisType.IsSelectedProperty));
  };

  function ListBoxItem_IsSelected_Changed (d, e) {
    var listBoxItem = $thisType.$Cast(d);
    if ($T07()['IsElementInVisualTree'](listBoxItem)) {
      var flag = $T01().$Cast(e['get_NewValue']());
      if (flag !== $T01().$Cast(e['get_OldValue']())) {
        if (flag) {
          listBoxItem['set_Background']((listBoxItem.ParentListBox)['get_SelectedItemBackgroundBrush']());
          listBoxItem['set_Foreground']((listBoxItem.ParentListBox)['get_SelectedItemForegroundBrush']());
        } else {
          listBoxItem['set_Background'](JSIL.Coalesce((listBoxItem.ParentListBox)['get_UnselectedItemBackgroundBrush'](), (listBoxItem.ParentListBox)['get_Background']()));
          listBoxItem['set_Foreground'](JSIL.Coalesce((listBoxItem.ParentListBox)['get_UnselectedItemForegroundBrush'](), (listBoxItem.ParentListBox)['get_Foreground']()));
        }
      }
    }
  };

  function ListBoxItem_set_IsSelected (value) {
    this['SetValue']($thisType.IsSelectedProperty, value);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.Button"), 
      Name: "Windows.UI.Xaml.Controls.ListBoxItem", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ListBoxItem__ctor
    );

    $.Method({Static:false, Public:true }, "get_IsSelected", 
      JSIL.MethodSignature.Return($.Boolean), 
      ListBoxItem_get_IsSelected
    );

    $.Method({Static:true , Public:false}, "IsSelected_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      ListBoxItem_IsSelected_Changed
    );

    $.Method({Static:false, Public:true }, "set_IsSelected", 
      JSIL.MethodSignature.Action($.Boolean), 
      ListBoxItem_set_IsSelected
    );

    $['Field']({Static:false, Public:false}, "Item", $.Object); 
    $['Field']({Static:false, Public:false}, "ParentListBox", $asm00.TypeRef("Windows.UI.Xaml.Controls.ListBox")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "IsSelectedProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function ListBoxItem__cctor () {
      $thisType.IsSelectedProperty = $T00()['Register']("IsSelected", $T01().__Type__, $thisType.__Type__, $S00().Construct(false, $T03()['New']($thisType, $thisType['IsSelected_Changed'], function () { return JSIL.GetMethodInfo($thisType, "IsSelected_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      ListBoxItem__cctor
    );

    $.Property({Static:false, Public:true }, "IsSelected", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.MediaElement */ 

(function MediaElement$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm06.System.String))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm01.System.Uri)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.MediaCanPlayResponse)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm06.System.Char)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm06.System.NotSupportedException)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm00.CSharpXamlForHtml5_Environment)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_Simulator)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm06.System.Action)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("System.String")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object")]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Exception"), [$asm06.TypeRef("System.String")]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.NotSupportedException"), [$asm06.TypeRef("System.String")]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Uri"), [$asm06.TypeRef("System.String")]))) ();
  };

  function MediaElement__ctor () {
    this._mediaElement = null;
    this._mediaElement_ForAudioOnly_ForSimulatorOnly = null;
    $T07().prototype['_ctor'].call(this);
  };

  function MediaElement_AutoPlay_Changed (d, e) {
    var mediaElement = $thisType.$Cast(d);
    if (mediaElement._mediaElement_ForAudioOnly_ForSimulatorOnly === null) {
      mediaElement['ManageDomBoolProperty_Changed']("autoplay", $T02().$Cast(e['get_NewValue']()));
    }
  };

  function MediaElement_CanPlayType (type) {
    var htmlResult = $T0A().$Cast($T0B()['CallDomMethod'](this._mediaElement, "canPlayType", type));
    return this['ConvertHtmlCanPlayTypeResult'](htmlResult);
  };

  function MediaElement_ConvertHtmlCanPlayTypeResult (htmlResult) {
    if (htmlResult !== null) {
      if (htmlResult == "maybe") {
        var result = $T0C().Maybe;
        return result;
      }
      if (htmlResult == "probably") {
        result = $T0C().Probably;
        return result;
      }
    }
    result = $T0C().NotSupported;
    return result;
  };

  function MediaElement_CreateDomElement (parentRef, /* ref */ domElementWhereToPlaceChildren) {
    var result = new JSIL.BoxedVariable(null);
    domElementWhereToPlaceChildren.set(null);
    var obj = $T0B()['CreateDomElementAppendItAndGetStyle']("div", parentRef, this, /* ref */ result);
    return result.get();
  };

  function MediaElement_get_AutoPlay () {
    return $T02().$Cast(this['GetValue']($thisType.AutoPlayProperty));
  };

  function MediaElement_get_IsAudioOnly () {
    return $T02().$Cast(this['GetValue']($thisType.IsAudioOnlyProperty));
  };

  function MediaElement_get_IsLooping () {
    return $T02().$Cast(this['GetValue']($thisType.IsLoopingProperty));
  };

  function MediaElement_get_IsMuted () {
    return $T02().$Cast(this['GetValue']($thisType.IsMutedProperty));
  };

  function MediaElement_get_ShowControls () {
    return $T02().$Cast(this['GetValue']($thisType.ShowControlsProperty));
  };

  function MediaElement_get_Source () {
    return $T05().$Cast(this['GetValue']($thisType.SourceProperty));
  };

  function MediaElement_get_Volume () {
    return $T06().$Cast(this['GetValue']($thisType.VolumeProperty));
  };

  function MediaElement_GetExtension (uriString) {
    if (uriString !== null) {
      var num = (uriString.lastIndexOf("."));
      if (num > -1) {
        var result = (uriString.substr(((num + 1) | 0)));
        return result;
      }
    }
    result = $T0A().Empty;
    return result;
  };

  function MediaElement_IsLooping_Changed (d, e) {
    var mediaElement = $thisType.$Cast(d);
    if (mediaElement._mediaElement_ForAudioOnly_ForSimulatorOnly === null) {
      mediaElement['ManageDomBoolProperty_Changed']("loop", $T02().$Cast(e['get_NewValue']()));
    } else {
      mediaElement._mediaElement_ForAudioOnly_ForSimulatorOnly.IsLooping = mediaElement['get_IsLooping']();
    }
  };

  function MediaElement_IsMuted_Changed (d, e) {
    var mediaElement = $thisType.$Cast(d);
    if (mediaElement._mediaElement_ForAudioOnly_ForSimulatorOnly === null) {
      mediaElement['ManageDomBoolProperty_Changed']("muted", $T02().$Cast(e['get_NewValue']()));
    } else {
      mediaElement._mediaElement_ForAudioOnly_ForSimulatorOnly.IsMuted = mediaElement['get_IsMuted']();
    }
  };

  function MediaElement_ManageDomBoolProperty_Changed (htmlPropertyName, newValue) {
    var flag = $T10()['IsElementInVisualTree'](this);
    if (flag) {
      var arg_10E_2 = flag & (this._mediaElement !== null);
    } else {
      arg_10E_2 = flag;
    }
    if (arg_10E_2) {
      if (newValue) {
        $T0B()['SetDomElementAttribute'](this._mediaElement, htmlPropertyName, "true");
      } else {
        $T0B()['RemoveDomElementAttribute'](this._mediaElement, htmlPropertyName, true);
      }
    }
  };

  function MediaElement_ManageVolume_Changed () {
    if ($T10()['IsElementInVisualTree'](this)) {
      if (this._mediaElement !== null) {
        $T0B()['SetDomElementProperty'](this._mediaElement, "volume", this['get_Volume']());
      } else if (this._mediaElement_ForAudioOnly_ForSimulatorOnly !== null) {
        (this._mediaElement_ForAudioOnly_ForSimulatorOnly)['Pause']();
      }
    }
  };

  function MediaElement_Pause () {
    if ($T10()['IsElementInVisualTree'](this)) {
      if (this._mediaElement !== null) {
        $T0B()['CallDomMethod'](this._mediaElement, "pause");
      } else if (this._mediaElement_ForAudioOnly_ForSimulatorOnly !== null) {
        (this._mediaElement_ForAudioOnly_ForSimulatorOnly)['Pause']();
      }
    }
  };

  function MediaElement_Play () {
    if ($T10()['IsElementInVisualTree'](this)) {
      if (this._mediaElement !== null) {
        $T0B()['CallDomMethod'](this._mediaElement, "play");
      } else if (this._mediaElement_ForAudioOnly_ForSimulatorOnly !== null) {
        (this._mediaElement_ForAudioOnly_ForSimulatorOnly)['Play']();
      }
    }
  };

  function MediaElement_Refresh () {
    this['ManageDomBoolProperty_Changed']("controls", this['get_ShowControls']());
    this['ManageDomBoolProperty_Changed']("autoplay", this['get_AutoPlay']());
    this['ManageDomBoolProperty_Changed']("loop", this['get_IsLooping']());
    this['ManageDomBoolProperty_Changed']("muted", this['get_IsMuted']());
    this['ManageVolume_Changed']();
  };

  function MediaElement_Refresh_SimulatorOnly () {
    this._mediaElement_ForAudioOnly_ForSimulatorOnly.IsMuted = this['get_IsMuted']();
    this._mediaElement_ForAudioOnly_ForSimulatorOnly.Volume = +this['get_Volume']();
  };

  function MediaElement_set_AutoPlay (value) {
    this['SetValue']($thisType.AutoPlayProperty, value);
  };

  function MediaElement_set_IsAudioOnly (value) {
    this['SetValue']($thisType.IsAudioOnlyProperty, value);
  };

  function MediaElement_set_IsLooping (value) {
    this['SetValue']($thisType.IsLoopingProperty, value);
  };

  function MediaElement_set_IsMuted (value) {
    this['SetValue']($thisType.IsMutedProperty, value);
  };

  function MediaElement_set_ShowControls (value) {
    this['SetValue']($thisType.ShowControlsProperty, value);
  };

  function MediaElement_set_Source (value) {
    this['SetValue']($thisType.SourceProperty, value);
  };

  function MediaElement_set_Volume (value) {
    this['SetValue']($thisType.VolumeProperty, value);
  };

  function MediaElement_ShowControls_Changed (sender, e) {
    var mediaElement = $thisType.$Cast(sender);
    mediaElement['ManageDomBoolProperty_Changed']("controls", $T02().$Cast(e['get_NewValue']()));
  };

  function MediaElement_SimulatorMediaElement_Loaded () {
    if (this['get_AutoPlay']()) {
      (this._mediaElement_ForAudioOnly_ForSimulatorOnly)['Play']();
    }
  };

  function MediaElement_SimulatorMediaElement_MediaEnded () {
    if (this['get_IsLooping']()) {
      (this._mediaElement_ForAudioOnly_ForSimulatorOnly)['Stop']();
      (this._mediaElement_ForAudioOnly_ForSimulatorOnly)['Play']();
    }
  };

  function MediaElement_Source_Changed (d, e) {
    var mediaElement = $thisType.$Cast(d);
    var uri = $T05().$Cast(e['get_NewValue']());
    var mediaElement2 = new JSIL.BoxedVariable(null);
    if ($T10()['IsElementInVisualTree'](mediaElement)) {
      var text = (uri['toString']().toLowerCase());
      if (!$T0A()['IsNullOrWhiteSpace'](text)) {
        var text2 = "none";
        var text3 = uri['toString']();
        if (System.String.StartsWith(text, "ms-appx:/")) {
          var relativePath = (JSIL.ConcatString("Resources/", uri['toString']().substr(9)));
          text3 = (relativePath);
        } else if (!((System.String.StartsWith(text, "http:/")) || (System.String.StartsWith(text, "https:/")))) {
          throw $S03().Construct(JSIL.ConcatString("Current version only supports absolute URIs that start with ms-appx:/ or http:/ or https:/", (
              !((text.indexOf(":") != -1))
                 ? "    - Try adding  ms-appx:/  to the beginning of your path."
                 : $T0A().Empty)
            ));
        }
        var extension = $thisType['GetExtension'](text);
        if ($thisType.SupportedVideoTypes['Contains'](extension)) {
          var flag = mediaElement['get_IsAudioOnly']();
          if (!flag) {
            var arg_207_2 = flag;
            var arg_216_2 = arg_207_2 | (mediaElement._mediaElement === null);
          } else {
            arg_216_2 = flag;
          }
          if (arg_216_2) {
            text2 = "video";
            mediaElement['set_IsAudioOnly'](false);
          }
        } else {
          if (!$thisType.SupportedAudioTypes['Contains'](extension)) {
            throw $S04().Construct("ERROR: The MediaElement control only supports files of the following types: VIDEO: mp4, ogv, webm, 3gp - AUDIO: mp3, ogg - Note: for best browser compatibility, it is recommended to use only MP3 and MP4 files.");
          }
          flag = !mediaElement['get_IsAudioOnly']();
          if (!flag) {
            var arg_364_2 = flag;
            var arg_373_2 = arg_364_2 | (mediaElement._mediaElement === null);
          } else {
            arg_373_2 = flag;
          }
          if (arg_373_2) {
            text2 = "audio";
            mediaElement['set_IsAudioOnly'](true);
          }
        }
        if (text2 != "none") {
          if (mediaElement._mediaElement !== null) {
            $T0B()['RemoveFromDom'](mediaElement._mediaElement);
          }
          if (!(true) && !(text2 == "video")) {
            if (mediaElement._mediaElement_ForAudioOnly_ForSimulatorOnly === null) {
              var arg_679_0 = mediaElement;
              arg_679_0._mediaElement_ForAudioOnly_ForSimulatorOnly = $T14()['get_WpfMediaElementFactory']()['Create'](
                $T15()['New'](mediaElement, $thisType.prototype['SimulatorMediaElement_Loaded'], function () { return JSIL.GetMethodInfo($thisType, "SimulatorMediaElement_Loaded", JSIL.MethodSignature.Void, false); }), 
                $T15()['New'](mediaElement, $thisType.prototype['SimulatorMediaElement_MediaEnded'], function () { return JSIL.GetMethodInfo($thisType, "SimulatorMediaElement_MediaEnded", JSIL.MethodSignature.Void, false); })
              );
            }
            mediaElement._mediaElement_ForAudioOnly_ForSimulatorOnly.Source = $S05().Construct(text3);
            mediaElement['Refresh_SimulatorOnly']();
            return;
          }
          mediaElement2.set(null);
          var iNTERNAL_OuterDomElement = mediaElement.UIElement$INTERNAL_OuterDomElement$value;
          $T0B()['CreateDomElementAppendItAndGetStyle'](text2, iNTERNAL_OuterDomElement, mediaElement, /* ref */ mediaElement2);
          mediaElement._mediaElement_ForAudioOnly_ForSimulatorOnly = null;
          mediaElement._mediaElement = mediaElement2.get();
          mediaElement['Refresh']();
        }
        $T0B()['SetDomElementAttribute'](mediaElement._mediaElement, "src", text3, true);
      } else if (mediaElement._mediaElement !== null) {
        $T0B()['SetDomElementAttribute'](mediaElement._mediaElement, "src", "", true);
      }
    }
  };

  function MediaElement_Volume_Changed (d, e) {
    var mediaElement = $thisType.$Cast(d);
    mediaElement['ManageVolume_Changed']();
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.FrameworkElement"), 
      Name: "Windows.UI.Xaml.Controls.MediaElement", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      MediaElement__ctor
    );

    $.Method({Static:true , Public:false}, "AutoPlay_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      MediaElement_AutoPlay_Changed
    );

    $.Method({Static:false, Public:true }, "CanPlayType", 
      new JSIL.MethodSignature($asm00.TypeRef("Windows.UI.Xaml.Media.MediaCanPlayResponse"), [$.String]), 
      MediaElement_CanPlayType
    );

    $.Method({Static:false, Public:false}, "ConvertHtmlCanPlayTypeResult", 
      new JSIL.MethodSignature($asm00.TypeRef("Windows.UI.Xaml.Media.MediaCanPlayResponse"), [$.String]), 
      MediaElement_ConvertHtmlCanPlayTypeResult
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CreateDomElement", 
      new JSIL.MethodSignature($.Object, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]), 
      MediaElement_CreateDomElement
    );

    $.Method({Static:false, Public:true }, "get_AutoPlay", 
      JSIL.MethodSignature.Return($.Boolean), 
      MediaElement_get_AutoPlay
    );

    $.Method({Static:false, Public:true }, "get_IsAudioOnly", 
      JSIL.MethodSignature.Return($.Boolean), 
      MediaElement_get_IsAudioOnly
    );

    $.Method({Static:false, Public:true }, "get_IsLooping", 
      JSIL.MethodSignature.Return($.Boolean), 
      MediaElement_get_IsLooping
    );

    $.Method({Static:false, Public:true }, "get_IsMuted", 
      JSIL.MethodSignature.Return($.Boolean), 
      MediaElement_get_IsMuted
    );

    $.Method({Static:false, Public:true }, "get_ShowControls", 
      JSIL.MethodSignature.Return($.Boolean), 
      MediaElement_get_ShowControls
    );

    $.Method({Static:false, Public:true }, "get_Source", 
      JSIL.MethodSignature.Return($asm01.TypeRef("System.Uri")), 
      MediaElement_get_Source
    );

    $.Method({Static:false, Public:true }, "get_Volume", 
      JSIL.MethodSignature.Return($.Double), 
      MediaElement_get_Volume
    );

    $.Method({Static:true , Public:false}, "GetExtension", 
      new JSIL.MethodSignature($.String, [$.String]), 
      MediaElement_GetExtension
    );

    $.Method({Static:true , Public:false}, "IsLooping_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      MediaElement_IsLooping_Changed
    );

    $.Method({Static:true , Public:false}, "IsMuted_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      MediaElement_IsMuted_Changed
    );

    $.Method({Static:false, Public:false}, "ManageDomBoolProperty_Changed", 
      new JSIL.MethodSignature(null, [$.String, $.Boolean]), 
      MediaElement_ManageDomBoolProperty_Changed
    );

    $.Method({Static:false, Public:false}, "ManageVolume_Changed", 
      JSIL.MethodSignature.Void, 
      MediaElement_ManageVolume_Changed
    );

    $.Method({Static:false, Public:true }, "Pause", 
      JSIL.MethodSignature.Void, 
      MediaElement_Pause
    );

    $.Method({Static:false, Public:true }, "Play", 
      JSIL.MethodSignature.Void, 
      MediaElement_Play
    );

    $.Method({Static:false, Public:false}, "Refresh", 
      JSIL.MethodSignature.Void, 
      MediaElement_Refresh
    );

    $.Method({Static:false, Public:false}, "Refresh_SimulatorOnly", 
      JSIL.MethodSignature.Void, 
      MediaElement_Refresh_SimulatorOnly
    );

    $.Method({Static:false, Public:true }, "set_AutoPlay", 
      JSIL.MethodSignature.Action($.Boolean), 
      MediaElement_set_AutoPlay
    );

    $.Method({Static:false, Public:false}, "set_IsAudioOnly", 
      JSIL.MethodSignature.Action($.Boolean), 
      MediaElement_set_IsAudioOnly
    );

    $.Method({Static:false, Public:true }, "set_IsLooping", 
      JSIL.MethodSignature.Action($.Boolean), 
      MediaElement_set_IsLooping
    );

    $.Method({Static:false, Public:true }, "set_IsMuted", 
      JSIL.MethodSignature.Action($.Boolean), 
      MediaElement_set_IsMuted
    );

    $.Method({Static:false, Public:true }, "set_ShowControls", 
      JSIL.MethodSignature.Action($.Boolean), 
      MediaElement_set_ShowControls
    );

    $.Method({Static:false, Public:true }, "set_Source", 
      JSIL.MethodSignature.Action($asm01.TypeRef("System.Uri")), 
      MediaElement_set_Source
    );

    $.Method({Static:false, Public:true }, "set_Volume", 
      JSIL.MethodSignature.Action($.Double), 
      MediaElement_set_Volume
    );

    $.Method({Static:true , Public:false}, "ShowControls_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      MediaElement_ShowControls_Changed
    );

    $.Method({Static:false, Public:false}, "SimulatorMediaElement_Loaded", 
      JSIL.MethodSignature.Void, 
      MediaElement_SimulatorMediaElement_Loaded
    );

    $.Method({Static:false, Public:false}, "SimulatorMediaElement_MediaEnded", 
      JSIL.MethodSignature.Void, 
      MediaElement_SimulatorMediaElement_MediaEnded
    );

    $.Method({Static:true , Public:false}, "Source_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      MediaElement_Source_Changed
    );

    $.Method({Static:true , Public:false}, "Volume_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      MediaElement_Volume_Changed
    );

    $['Constant']({Static:true , Public:false}, "HTML_SHOWCONTROLS_PROPERTY_NAME", "controls"); 
    $['Constant']({Static:true , Public:false}, "HTML_AUTOPLAY_PROPERTY_NAME", "autoplay"); 
    $['Constant']({Static:true , Public:false}, "HTML_ISLOOPING_PROPERTY_NAME", "loop"); 
    $['Constant']({Static:true , Public:false}, "HTML_ISMUTED_PROPERTY_NAME", "muted"); 
    $['Field']({Static:true , Public:false, ReadOnly:true }, "SupportedVideoTypes", $asm06.TypeRef("System.Collections.Generic.List`1", [$.String])); 
    $['Field']({Static:true , Public:false, ReadOnly:true }, "SupportedAudioTypes", $asm06.TypeRef("System.Collections.Generic.List`1", [$.String])); 
    $['Field']({Static:false, Public:false}, "_mediaElement", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute")); 
    $['Field']({Static:false, Public:false}, "_mediaElement_ForAudioOnly_ForSimulatorOnly", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "AutoPlayProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "IsAudioOnlyProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "IsLoopingProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "IsMutedProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "SourceProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "VolumeProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "ShowControlsProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function MediaElement__cctor () {
      var list = $S00().Construct();
      list['Add']("mp4");
      list['Add']("ogv");
      list['Add']("webm");
      list['Add']("3gp");
      $thisType.SupportedVideoTypes = list;
      var list2 = $S00().Construct();
      list2['Add']("mp3");
      list2['Add']("ogg");
      $thisType.SupportedAudioTypes = list2;
      $thisType.AutoPlayProperty = $T01()['Register']("AutoPlay", $T02().__Type__, $thisType.__Type__, $S01().Construct(true, $T04()['New']($thisType, $thisType['AutoPlay_Changed'], function () { return JSIL.GetMethodInfo($thisType, "AutoPlay_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.IsAudioOnlyProperty = $T01()['Register']("IsAudioOnly", $T02().__Type__, $thisType.__Type__, $S02().Construct(false));
      $thisType.IsLoopingProperty = $T01()['Register']("IsLooping", $T02().__Type__, $thisType.__Type__, $S01().Construct(false, $T04()['New']($thisType, $thisType['IsLooping_Changed'], function () { return JSIL.GetMethodInfo($thisType, "IsLooping_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.IsMutedProperty = $T01()['Register']("IsMuted", $T02().__Type__, $thisType.__Type__, $S01().Construct(false, $T04()['New']($thisType, $thisType['IsMuted_Changed'], function () { return JSIL.GetMethodInfo($thisType, "IsMuted_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.SourceProperty = $T01()['Register']("Source", $T05().__Type__, $thisType.__Type__, $S01().Construct(null, $T04()['New']($thisType, $thisType['Source_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Source_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.VolumeProperty = $T01()['Register']("Volume", $T06().__Type__, $thisType.__Type__, $S01().Construct(0.5, $T04()['New']($thisType, $thisType['Volume_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Volume_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.ShowControlsProperty = $T01()['Register']("ShowControls", $T02().__Type__, $thisType.__Type__, $S01().Construct(false, $T04()['New']($thisType, $thisType['ShowControls_Changed'], function () { return JSIL.GetMethodInfo($thisType, "ShowControls_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      MediaElement__cctor
    );

    $.Property({Static:false, Public:true }, "AutoPlay", $.Boolean);

    $.Property({Static:false, Public:true }, "IsAudioOnly", $.Boolean);

    $.Property({Static:false, Public:true }, "IsLooping", $.Boolean);

    $.Property({Static:false, Public:true }, "IsMuted", $.Boolean);

    $.Property({Static:false, Public:true }, "Source", $asm01.TypeRef("System.Uri"));

    $.Property({Static:false, Public:true }, "Volume", $.Double);

    $.Property({Static:false, Public:true }, "ShowControls", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.RadioButton */ 

(function RadioButton$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Primitives.ToggleButton)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.INTERNAL_CheckBoxAndRadioButtonHelpers)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };

  function RadioButton__ctor () {
    $T04().prototype['_ctor'].call(this);
  };

  function RadioButton_CreateDomElement (parentRef, /* ref */ domElementWhereToPlaceChildren) {
    return $T06()['CreateDomElement'](this, "radio", parentRef, /* ref */ domElementWhereToPlaceChildren);
  };

  function RadioButton_get_GroupName () {
    return $T01().$Cast(this['GetValue']($thisType.GroupNameProperty));
  };

  function RadioButton_GroupName_Changed (d, e) {
    var radioButton = $thisType.$Cast(d);
    if ($T09()['IsElementInVisualTree'](radioButton)) {
      if (!$T01()['IsNullOrWhiteSpace']($T01().$Cast(e['get_NewValue']()))) {
        $T0A()['SetDomElementAttribute'](radioButton.UIElement$INTERNAL_OptionalSpecifyDomElementConcernedByFocus$value, "name", radioButton['get_GroupName'](), true);
      } else {
        $T0A()['SetDomElementAttribute'](radioButton.UIElement$INTERNAL_OptionalSpecifyDomElementConcernedByFocus$value, "name", ($T0B().$Cast(radioButton.UIElement$INTERNAL_VisualParent$value))['get_INTERNAL_ChildrenRadioButtonDefaultName'](), true);
      }
    }
  };

  function RadioButton_INTERNAL_OnAttachedToVisualTree () {
    if ($T01()['IsNullOrWhiteSpace'](this['get_GroupName']())) {
      $T0A()['SetDomElementAttribute'](this.UIElement$INTERNAL_OptionalSpecifyDomElementConcernedByFocus$value, "name", ($T0B().$Cast(this.UIElement$INTERNAL_VisualParent$value))['get_INTERNAL_ChildrenRadioButtonDefaultName'](), true);
    }
  };

  function RadioButton_ManageIsEnabled (e) {
    $T06()['ManageIsEnabled'](this, e);
  };

  function RadioButton_set_GroupName (value) {
    this['SetValue']($thisType.GroupNameProperty, value);
  };

  function RadioButton_SubscribeToClickEventForChildContainerDiv (divWhereToPlaceChild, checkBoxDomElement) {
    if (true) {
      divWhereToPlaceChild.addEventListener('click', function(e) {
          if(checkBoxDomElement.checked === true)
          {
          }
          else
          {
              checkBoxDomElement.checked = true;
              var evt = document.createEvent('Event');
              evt.initEvent('change', false, false);
              checkBoxDomElement.dispatchEvent(evt);
          }
      }, false);;
    } else {
      var arg_131_1 = JSIL.IgnoredMember("get_UniqueIdentifier()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(divWhereToPlaceChild)).LValue;
      var javaScriptToExecute = $T01()['Format']("\r\nvar divWhereToPlaceChild = document.getElementById(\"{0}\");\r\ndivWhereToPlaceChild.addEventListener('click', function(e) {{\r\nvar radioButtonDomElement = document.getElementById(\"{1}\");\r\n    if(radioButtonDomElement.checked === true)\r\n    {{\r\n    }}\r\n    else\r\n    {{\r\n        radioButtonDomElement.checked = true;\r\n        var evt = document.createEvent('Event');\r\n        evt.initEvent('change', false, false);\r\n        radioButtonDomElement.dispatchEvent(evt);\r\n    }}\r\n}}, false);", arg_131_1, JSIL.IgnoredMember("get_UniqueIdentifier()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(checkBoxDomElement)).LValue);
      JSIL.IgnoredMember("ExecuteJavaScript(javaScriptToExecute, commentForDebugging)", javaScriptToExecute, null).LValue;
    }
  };

  function RadioButton_UpdateDomBasedOnCheckedState (isChecked) {
    var text = this['get_GroupName']();
    if ($T01()['IsNullOrWhiteSpace'](text)) {
      text = ($T0B().$Cast(this.UIElement$INTERNAL_VisualParent$value))['get_INTERNAL_ChildrenRadioButtonDefaultName']();
    }
    if (!((isChecked === null) || (isChecked !== true))) {
      if (true) {
                                var radios = document.getElementsByName( text );
                                for(var i = 0; i < radios.length; i++ ) {
                                    if( radios[i].isLastChecked === true ) {
                                        radios[i].checked = false;
                                        radios[i].isLastChecked = undefined;
                                        var evt = document.createEvent('Event');
                                        evt.initEvent('change', false, false);
                                        radios[i].dispatchEvent(evt);
                                    }
                                }
                                this.UIElement$INTERNAL_OptionalSpecifyDomElementConcernedByFocus$value.isLastChecked = true;;
      } else {
        var arg_14C_1 = text;
        var javaScriptToExecute = $T01()['Format']("\r\n                        var radios = document.getElementsByName( \"{0}\" );\r\n                            for(var i = 0; i < radios.length; i++ ) {{\r\n                                if( radios[i].isLastChecked === true ) {{\r\n                                    radios[i].checked = false;\r\n                                    radios[i].isLastChecked = undefined;\r\n                                    var evt = document.createEvent('Event');\r\n                                    evt.initEvent('change', false, false);\r\n                                    radios[i].dispatchEvent(evt);\r\n                                }}\r\n                            }}\r\n                            document.getElementById(\"{1}\").isLastChecked = true;\r\n                        ", arg_14C_1, JSIL.IgnoredMember("get_UniqueIdentifier()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(this.UIElement$INTERNAL_OptionalSpecifyDomElementConcernedByFocus$value)).LValue);
        JSIL.IgnoredMember("ExecuteJavaScriptWithResult(javaScriptToExecute, commentForDebugging)", javaScriptToExecute, null).LValue;
      }
    }
    $T06()['UpdateDomBasedOnCheckedState'](this, isChecked);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.Primitives.ToggleButton"), 
      Name: "Windows.UI.Xaml.Controls.RadioButton", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      RadioButton__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CreateDomElement", 
      new JSIL.MethodSignature($.Object, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]), 
      RadioButton_CreateDomElement
    );

    $.Method({Static:false, Public:true }, "get_GroupName", 
      JSIL.MethodSignature.Return($.String), 
      RadioButton_get_GroupName
    );

    $.Method({Static:true , Public:false}, "GroupName_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      RadioButton_GroupName_Changed
    );

    $.Method({Static:false, Public:false, Virtual:true }, "INTERNAL_OnAttachedToVisualTree", 
      JSIL.MethodSignature.Void, 
      RadioButton_INTERNAL_OnAttachedToVisualTree
    );

    $.Method({Static:false, Public:false, Virtual:true }, "ManageIsEnabled", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")), 
      RadioButton_ManageIsEnabled
    );

    $.Method({Static:false, Public:true }, "set_GroupName", 
      JSIL.MethodSignature.Action($.String), 
      RadioButton_set_GroupName
    );

    $.Method({Static:false, Public:false, Virtual:true }, "SubscribeToClickEventForChildContainerDiv", 
      new JSIL.MethodSignature(null, [$.Object, $.Object]), 
      RadioButton_SubscribeToClickEventForChildContainerDiv
    )
      .Parameter(0, "divWhereToPlaceChild", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        })
      .Parameter(1, "checkBoxDomElement", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false, Virtual:true }, "UpdateDomBasedOnCheckedState", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Nullable`1", [$.Boolean])), 
      RadioButton_UpdateDomBasedOnCheckedState
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "GroupNameProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function RadioButton__cctor () {
      $thisType.GroupNameProperty = $T00()['Register']("GroupName", $T01().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['GroupName_Changed'], function () { return JSIL.GetMethodInfo($thisType, "GroupName_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      RadioButton__cctor
    );

    $.Property({Static:false, Public:true }, "GroupName", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.RoutedEventArgs */ 

(function RoutedEventArgs$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.ArgumentException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.ArgumentException"), null))) ();
  };

  function RoutedEventArgs__ctor () {
  };

  function RoutedEventArgs_get_OriginalSource () {
    return this._originalSource;
  };

  function RoutedEventArgs_set_OriginalSource (value) {
    if (!((value !== null) && $T01().$Is(value))) {
      throw $S00().Construct();
    }
    this._originalSource = $T01().$Cast(value);
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.RoutedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      RoutedEventArgs__ctor
    );

    $.Method({Static:false, Public:true }, "get_OriginalSource", 
      JSIL.MethodSignature.Return($.Object), 
      RoutedEventArgs_get_OriginalSource
    );

    $.Method({Static:false, Public:false}, "set_OriginalSource", 
      JSIL.MethodSignature.Action($.Object), 
      RoutedEventArgs_set_OriginalSource
    );

    $['Field']({Static:false, Public:false}, "_originalSource", $asm00.TypeRef("Windows.UI.Xaml.DependencyObject")); 
    $.Property({Static:false, Public:true }, "OriginalSource", $.Object);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.SelectionChangedEventArgs */ 

(function SelectionChangedEventArgs$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventArgs)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Collections.Generic.IList$b1.Of($asm06.System.Object))) ();
  };

  function SelectionChangedEventArgs__ctor$00 () {
    $T00().prototype['_ctor'].call(this);
  };

  function SelectionChangedEventArgs__ctor$01 (removedItems, addedItems) {
    $T00().prototype['_ctor'].call(this);
    this._addedItems = addedItems;
    this._removedItems = removedItems;
  };

  function SelectionChangedEventArgs_get_AddedItems () {
    return this._addedItems;
  };

  function SelectionChangedEventArgs_get_RemovedItems () {
    return this._removedItems;
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs"), 
      Name: "Windows.UI.Xaml.Controls.SelectionChangedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      SelectionChangedEventArgs__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Collections.Generic.IList`1", [$.Object]), $asm06.TypeRef("System.Collections.Generic.IList`1", [$.Object])]), 
      SelectionChangedEventArgs__ctor$01
    );

    $.Method({Static:false, Public:true }, "get_AddedItems", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.IList`1", [$.Object])), 
      SelectionChangedEventArgs_get_AddedItems
    );

    $.Method({Static:false, Public:true }, "get_RemovedItems", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.IList`1", [$.Object])), 
      SelectionChangedEventArgs_get_RemovedItems
    );

    $['Field']({Static:false, Public:false}, "_addedItems", $asm06.TypeRef("System.Collections.Generic.IList`1", [$.Object])); 
    $['Field']({Static:false, Public:false}, "_removedItems", $asm06.TypeRef("System.Collections.Generic.IList`1", [$.Object])); 
    $.Property({Static:false, Public:true }, "AddedItems", $asm06.TypeRef("System.Collections.Generic.IList`1", [$.Object]));

    $.Property({Static:false, Public:true }, "RemovedItems", $asm06.TypeRef("System.Collections.Generic.IList`1", [$.Object]));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate Windows.UI.Xaml.Controls.SelectionChangedEventHandler */ 

JSIL.MakeDelegate("Windows.UI.Xaml.Controls.SelectionChangedEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.Controls.SelectionChangedEventArgs")]));

/* enum Windows.UI.Xaml.Controls.SelectionMode */ 

JSIL.MakeEnum(
  {
    FullName: "Windows.UI.Xaml.Controls.SelectionMode", 
    BaseType: $asm06.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Single: 0, 
    Multiple: 1, 
  }
);

/* class Windows.UI.Xaml.Controls.CheckBox */ 

(function CheckBox$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Primitives.ToggleButton)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.INTERNAL_CheckBoxAndRadioButtonHelpers)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.String)) ();
  };

  function CheckBox__ctor () {
    $T00().prototype['_ctor'].call(this);
  };

  function CheckBox_CreateDomElement (parentRef, /* ref */ domElementWhereToPlaceChildren) {
    return $T02()['CreateDomElement'](this, "checkbox", parentRef, /* ref */ domElementWhereToPlaceChildren);
  };

  function CheckBox_ManageIsEnabled (e) {
    $T02()['ManageIsEnabled'](this, e);
  };

  function CheckBox_SubscribeToClickEventForChildContainerDiv (divWhereToPlaceChild, checkBoxDomElement) {
    if (true) {
      divWhereToPlaceChild.addEventListener('click', function(e) {
          if(checkBoxDomElement.checked === true)
          {
              checkBoxDomElement.checked = false;
          }
          else
          {
              checkBoxDomElement.checked = true;
          }
          var evt = document.createEvent('Event');
          evt.initEvent('change', false, false);
          checkBoxDomElement.dispatchEvent(evt);
      }, false);;
    } else {
      var arg_131_1 = JSIL.IgnoredMember("get_UniqueIdentifier()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(divWhereToPlaceChild)).LValue;
      var javaScriptToExecute = $T04()['Format']("\r\nvar divWhereToPlaceChild = document.getElementById(\"{0}\");\r\ndivWhereToPlaceChild.addEventListener('click', function(e) {{\r\nvar checkBoxDomElement = document.getElementById(\"{1}\");\r\n    if(checkBoxDomElement.checked === true)\r\n    {{\r\n        checkBoxDomElement.checked = false;\r\n    }}\r\n    else\r\n    {{\r\n        checkBoxDomElement.checked = true;\r\n    }}\r\n    var evt = document.createEvent('Event');\r\n    evt.initEvent('change', false, false);\r\n    checkBoxDomElement.dispatchEvent(evt);\r\n}}, false);", arg_131_1, JSIL.IgnoredMember("get_UniqueIdentifier()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(checkBoxDomElement)).LValue);
      JSIL.IgnoredMember("ExecuteJavaScript(javaScriptToExecute, commentForDebugging)", javaScriptToExecute, null).LValue;
    }
  };

  function CheckBox_UpdateDomBasedOnCheckedState (isChecked) {
    $T02()['UpdateDomBasedOnCheckedState'](this, isChecked);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.Primitives.ToggleButton"), 
      Name: "Windows.UI.Xaml.Controls.CheckBox", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      CheckBox__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CreateDomElement", 
      new JSIL.MethodSignature($.Object, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]), 
      CheckBox_CreateDomElement
    );

    $.Method({Static:false, Public:false, Virtual:true }, "ManageIsEnabled", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")), 
      CheckBox_ManageIsEnabled
    );

    $.Method({Static:false, Public:false, Virtual:true }, "SubscribeToClickEventForChildContainerDiv", 
      new JSIL.MethodSignature(null, [$.Object, $.Object]), 
      CheckBox_SubscribeToClickEventForChildContainerDiv
    )
      .Parameter(0, "divWhereToPlaceChild", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        })
      .Parameter(1, "checkBoxDomElement", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false, Virtual:true }, "UpdateDomBasedOnCheckedState", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Nullable`1", [$.Boolean])), 
      CheckBox_UpdateDomBasedOnCheckedState
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.PasswordBox */ 

(function PasswordBox$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Control)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventHandler)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_EventManager$b2.Of($asm00.Windows.UI.Xaml.RoutedEventHandler, $asm00.Windows.UI.Xaml.RoutedEventArgs))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.Func$b1.Of($asm06.System.Object))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.System.Action$b1.Of($asm06.System.Object))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_EventsHelper)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventArgs)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm08.System.Linq.Enumerable)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_EventManager`2", [$asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler"), $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")]), [
        $asm06.TypeRef("System.Func`1", [$asm06.TypeRef("System.Object")]), $asm06.TypeRef("System.String"), 
        $asm06.TypeRef("System.Action`1", [$asm06.TypeRef("System.Object")])
      ]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")))) ();
  };

  function PasswordBox__ctor () {
    this._isUserChangingPassword = false;
    this._isCodeProgrammaticallyChangingPassword = false;
    this._passwordChangedEventManager = null;
    $T05().prototype['_ctor'].call(this);
  };

  function PasswordBox_$ladd_PasswordChanged$gb__2 () {
    return this.UIElement$INTERNAL_OuterDomElement$value;
  };

  function PasswordBox_$lCreateDomElement$gb__b (e) {
    this['PasswordAreaValueChanged']();
  };

  function PasswordBox_add_PasswordChanged (value) {
    if (this._passwordChangedEventManager === null) {
      this._passwordChangedEventManager = $S01().Construct($T0A()['New'](this, $thisType.prototype['$ladd_PasswordChanged$gb__2'], function () { return JSIL.GetMethodInfo($thisType, "$ladd_PasswordChanged$gb__2", JSIL.MethodSignature.Return($.Object), false); }), "change", $T0B()['New'](this, $thisType.prototype['OnPasswordChanged'], function () { return JSIL.GetMethodInfo($thisType, "OnPasswordChanged", JSIL.MethodSignature.Action($.Object), false); }));
      $T09().prototype['Add'].call(this._passwordChangedEventManager, value);
    } else {
      $T09().prototype['Add'].call(this._passwordChangedEventManager, value);
    }
  };

  function PasswordBox_CreateDomElement (parentRef, /* ref */ domElementWhereToPlaceChildren) {
    var obj = $T0C()['CreateDomElementAndAppendIt']("input", parentRef, this);
    domElementWhereToPlaceChildren.set(null);
    $T0C()['SetDomElementAttribute'](obj, "type", "password", true);
    $T0D()['AttachToDomEvents']("change", obj, $T0B()['New'](this, $thisType.prototype['$lCreateDomElement$gb__b'], function () { return JSIL.GetMethodInfo($thisType, "$lCreateDomElement$gb__b", JSIL.MethodSignature.Action($.Object), false); }));
    return obj;
  };

  function PasswordBox_get_MaxLength () {
    return $T01().$Cast(this['GetValue']($thisType.MaxLengthProperty));
  };

  function PasswordBox_get_Password () {
    return $T04().$Cast(this['GetValue']($thisType.PasswordProperty));
  };

  function PasswordBox_INTERNAL_AttachToDomEvents () {
    $T06().prototype['INTERNAL_AttachToDomEvents'].call(this);
    if (this._passwordChangedEventManager !== null) {
      $T09().prototype['AttachToDomEvents'].call(this._passwordChangedEventManager);
    }
  };

  function PasswordBox_INTERNAL_DetachFromDomEvents () {
    $T06().prototype['INTERNAL_DetachFromDomEvents'].call(this);
    if (this._passwordChangedEventManager !== null) {
      $T09().prototype['DetachFromDomEvents'].call(this._passwordChangedEventManager);
    }
  };

  function PasswordBox_MaxLength_Changed (d, e) {
    var passwordBox = $thisType.$Cast(d);
    var num = $T01().$Cast(e['get_NewValue']());
    if ($T10()['IsElementInVisualTree'](passwordBox)) {
      $T0C()['GetFrameworkElementOuterStyleForModification'](passwordBox).maxlength = num;
    }
  };

  function PasswordBox_OnPasswordChanged$00 (e) {
    var routedEventArgs = new ($T11())();
    routedEventArgs['set_OriginalSource'](this);
    $S02().CallVirtual("OnPasswordChanged", null, this, routedEventArgs);
  };

  function PasswordBox_OnPasswordChanged$01 (eventArgs) {
    var $temp00;

    for (var a$0 = $T12()['ToList$b1']($T08())((this._passwordChangedEventManager)['get_Handlers']())._items, i$0 = 0, l$0 = ($T12()['ToList$b1']($T08())((this._passwordChangedEventManager)['get_Handlers']())._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      current(this, eventArgs);
    }
  };

  function PasswordBox_Password_Changed (d, e) {
    var passwordBox = $thisType.$Cast(d);
    if (!passwordBox._isUserChangingPassword) {
      passwordBox._isCodeProgrammaticallyChangingPassword = true;
      var newText = JSIL.Coalesce($T04().$As(e['get_NewValue']()), $T04().Empty);
      if ($T10()['IsElementInVisualTree'](passwordBox)) {
        $T0C()['SetUIElementContentString'](passwordBox, newText);
      }
      passwordBox._isCodeProgrammaticallyChangingPassword = false;
    }
  };

  function PasswordBox_PasswordAreaValueChanged () {
    if (!this._isCodeProgrammaticallyChangingPassword) {
      if ($T10()['IsElementInVisualTree'](this)) {
        var value = $T04().$Cast($T0C()['GetDomElementAttribute'](this.UIElement$INTERNAL_OuterDomElement$value, "value"));
        this._isUserChangingPassword = true;
        this['SetLocalValue']($thisType.PasswordProperty, value);
        this._isUserChangingPassword = false;
      }
    }
  };

  function PasswordBox_remove_PasswordChanged (value) {
    if (this._passwordChangedEventManager !== null) {
      $T09().prototype['Remove'].call(this._passwordChangedEventManager, value);
    }
  };

  function PasswordBox_set_MaxLength (value) {
    this['SetValue']($thisType.MaxLengthProperty, value);
  };

  function PasswordBox_set_Password (value) {
    this['SetValue']($thisType.PasswordProperty, value);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.Control"), 
      Name: "Windows.UI.Xaml.Controls.PasswordBox", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      PasswordBox__ctor
    );

    $.Method({Static:false, Public:false}, "$ladd_PasswordChanged$gb__2", 
      JSIL.MethodSignature.Return($.Object), 
      PasswordBox_$ladd_PasswordChanged$gb__2
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "$lCreateDomElement$gb__b", 
      JSIL.MethodSignature.Action($.Object), 
      PasswordBox_$lCreateDomElement$gb__b
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "add_PasswordChanged", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")), 
      PasswordBox_add_PasswordChanged
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CreateDomElement", 
      new JSIL.MethodSignature($.Object, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]), 
      PasswordBox_CreateDomElement
    );

    $.Method({Static:false, Public:true }, "get_MaxLength", 
      JSIL.MethodSignature.Return($.Int32), 
      PasswordBox_get_MaxLength
    );

    $.Method({Static:false, Public:true }, "get_Password", 
      JSIL.MethodSignature.Return($.String), 
      PasswordBox_get_Password
    );

    $.Method({Static:false, Public:false, Virtual:true }, "INTERNAL_AttachToDomEvents", 
      JSIL.MethodSignature.Void, 
      PasswordBox_INTERNAL_AttachToDomEvents
    );

    $.Method({Static:false, Public:false, Virtual:true }, "INTERNAL_DetachFromDomEvents", 
      JSIL.MethodSignature.Void, 
      PasswordBox_INTERNAL_DetachFromDomEvents
    );

    $.Method({Static:true , Public:false}, "MaxLength_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      PasswordBox_MaxLength_Changed
    );

    $.Method({Static:false, Public:false}, "OnPasswordChanged", 
      JSIL.MethodSignature.Action($.Object), 
      PasswordBox_OnPasswordChanged$00
    )
      .Parameter(0, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false}, "OnPasswordChanged", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")), 
      PasswordBox_OnPasswordChanged$01
    );

    $.Method({Static:true , Public:false}, "Password_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      PasswordBox_Password_Changed
    );

    $.Method({Static:false, Public:false}, "PasswordAreaValueChanged", 
      JSIL.MethodSignature.Void, 
      PasswordBox_PasswordAreaValueChanged
    );

    $.Method({Static:false, Public:true }, "remove_PasswordChanged", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")), 
      PasswordBox_remove_PasswordChanged
    );

    $.Method({Static:false, Public:true }, "set_MaxLength", 
      JSIL.MethodSignature.Action($.Int32), 
      PasswordBox_set_MaxLength
    );

    $.Method({Static:false, Public:true }, "set_Password", 
      JSIL.MethodSignature.Action($.String), 
      PasswordBox_set_Password
    );

    $['Field']({Static:false, Public:false}, "_isUserChangingPassword", $.Boolean); 
    $['Field']({Static:false, Public:false}, "_isCodeProgrammaticallyChangingPassword", $.Boolean); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "MaxLengthProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "PasswordProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:false, Public:false}, "_passwordChangedEventManager", $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_EventManager`2", [$asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler"), $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")])); 
    function PasswordBox__cctor () {
      $thisType.MaxLengthProperty = $T00()['Register']("MaxLength", $T01().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['MaxLength_Changed'], function () { return JSIL.GetMethodInfo($thisType, "MaxLength_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.PasswordProperty = $T00()['Register']("Password", $T04().__Type__, $thisType.__Type__, $S00().Construct($T04().Empty, $T03()['New']($thisType, $thisType['Password_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Password_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      PasswordBox__cctor
    );

    $.Property({Static:false, Public:true }, "MaxLength", $.Int32);

    $.Property({Static:false, Public:true }, "Password", $.String);

    $.Event({Static:false, Public:true }, "PasswordChanged", $asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.INTERNAL_CellDefinition */ 

(function INTERNAL_CellDefinition$Members () {
  var $, $thisType;
  function INTERNAL_CellDefinition__ctor () {
    this.RowSpan = 1;
    this.ColumnSpan = 1;
    this.IsOverlapped = false;
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.Controls.INTERNAL_CellDefinition", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      INTERNAL_CellDefinition__ctor
    );

    $['Field']({Static:false, Public:true }, "RowSpan", $.Int32); 
    $['Field']({Static:false, Public:true }, "ColumnSpan", $.Int32); 
    $['Field']({Static:false, Public:true }, "IsOverlapped", $.Boolean); 
    $['Field']({Static:false, Public:true }, "DomElement", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute")); 
    $['Field']({Static:false, Public:true }, "RowDomElement", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute")); 
    $['Field']({Static:false, Public:true }, "ColumnDomElement", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.Grid_InternalHelpers */ 

(function Grid_InternalHelpers$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Grid)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ColumnDefinitionCollection)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.RowDefinitionCollection)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm06.System.Collections.Generic.List$b1.Of($asm00.Windows.UI.Xaml.Controls.INTERNAL_CellDefinition)))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm00.Windows.UI.Xaml.Controls.RowDefinition))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerable$b1.Of($asm00.Windows.UI.Xaml.Controls.RowDefinition))) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.Collections.IEnumerator)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.RowDefinition)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm00.Windows.UI.Xaml.Controls.INTERNAL_CellDefinition))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm00.Windows.UI.Xaml.Controls.ColumnDefinition))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerable$b1.Of($asm00.Windows.UI.Xaml.Controls.ColumnDefinition))) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ColumnDefinition)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.INTERNAL_CellDefinition)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm06.System.IDisposable)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm00.Windows.UI.Xaml.GridLength)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm06.System.Char)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm00.Windows.UI.Xaml.Controls.ColumnDefinition))) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm00.Windows.UI.Xaml.Controls.RowDefinition))) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Grid_InternalHelpers_$lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__0)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Grid_InternalHelpers_$lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__6)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm06.System.Collections.ObjectModel.Collection$b1.Of($asm00.Windows.UI.Xaml.Controls.ColumnDefinition))) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm06.System.Collections.ObjectModel.Collection$b1.Of($asm00.Windows.UI.Xaml.Controls.RowDefinition))) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm00.Windows.UI.Xaml.GridUnitType)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.INTERNAL_CellDefinition")])]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinition")]), [$asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinitionCollection")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.INTERNAL_CellDefinition")]), null))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinition")]), [$asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinitionCollection")]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinition")]), null))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinition")]), null))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.GridLength"), [$asm06.TypeRef("System.Double"), $asm00.TypeRef("Windows.UI.Xaml.GridUnitType")]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerable$b1.Of($asm00.Windows.UI.Xaml.Controls.RowDefinition).GetEnumerator)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm06.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm00.Windows.UI.Xaml.Controls.RowDefinition).get_Current)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerable$b1.Of($asm00.Windows.UI.Xaml.Controls.ColumnDefinition).GetEnumerator)) ();
  };
  var $IM04 = function () {
    return ($IM04 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm00.Windows.UI.Xaml.Controls.ColumnDefinition).get_Current)) ();
  };
  var $IM05 = function () {
    return ($IM05 = JSIL.Memoize($asm06.System.IDisposable.Dispose)) ();
  };

  function Grid_InternalHelpers_ApplyGridLinesValues (grid, rowIndex, columnIndex, tdStyle) {
    if (grid.INTERNAL_StringToSetVerticalGridLinesInCss !== null) {
      tdStyle.borderRight = grid.INTERNAL_StringToSetVerticalGridLinesInCss;
      if ((columnIndex | 0) === 0) {
        tdStyle.borderLeft = grid.INTERNAL_StringToSetVerticalGridLinesInCss;
      }
    }
    if (grid.INTERNAL_StringToSetHorizontalGridLinesInCss !== null) {
      tdStyle.borderBottom = grid.INTERNAL_StringToSetHorizontalGridLinesInCss;
      if ((rowIndex | 0) === 0) {
        tdStyle.borderTop = grid.INTERNAL_StringToSetHorizontalGridLinesInCss;
      }
    }
  };

  function Grid_InternalHelpers_CalculateNewCellsStructure (columnDefinitions, rowDefinitions) {
    var list = $S00().Construct();
    var enumerator = $IM00().Call($S01().CallStatic($thisType, "IterateThroughCollectionOrCreateNewElementIfCollectionEmpty", null, rowDefinitions), null);
    try {

      while ($IM01().Call(enumerator, null)) {
        var current = $IM02().Call(enumerator, null);
        var list2 = $S02().Construct();
        list['Add'](list2);
        var enumerator2 = $IM03().Call($S03().CallStatic($thisType, "IterateThroughCollectionOrCreateNewElementIfCollectionEmpty", null, columnDefinitions), null);
        try {

          while ($IM01().Call(enumerator2, null)) {
            var current2 = $IM04().Call(enumerator2, null);
            list2['Add'](new ($T0E())());
          }
        } finally {
          if (enumerator2 !== null) {
            $IM05().Call(enumerator2, null);
          }
        }
      }
    } finally {
      if (enumerator !== null) {
        $IM05().Call(enumerator, null);
      }
    }
    return list;
  };

  function Grid_InternalHelpers_ConvertGridLengthToCssString (gridLength, signUsedForPercentage) {
    if (gridLength['get_IsAuto']()) {
      var result = "auto";
    } else if (gridLength['get_IsStar']()) {
      result = (JSIL.ConcatString(System.String.Replace((gridLength['get_Value']()).toString(), ",", "."), signUsedForPercentage));
    } else {
      result = (JSIL.ConcatString(System.String.Replace((gridLength['get_Value']()).toString(), ",", "."), "px"));
    }
    return result;
  };

  function Grid_InternalHelpers_GenerateDomElementsForGrid (grid, cellsStructure, columnDefinitions, rowDefinitions, parentRef) {
    var $temp00, $temp01;
    var list = new JSIL.BoxedVariable(null);
    var list2 = new JSIL.BoxedVariable(null);
    var obj = $T16()['CreateDomElementAndAppendIt']("table", parentRef, grid);
    var obj2 = $T16()['GetDomElementStyleForModification'](obj);
    obj2.borderCollapse = "collapse";
    obj2.position = "relative";
    obj2.height = "100%";
    obj2.width = "100%";
    $thisType['NormalizeWidthAndHeightPercentages'](
      grid, 
      columnDefinitions, 
      rowDefinitions, 
      /* ref */ list, 
      /* ref */ list2
    );
    var num = 0;

    for (var a$0 = list2.get()._items, i$0 = 0, l$0 = (list2.get()._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      var list3 = cellsStructure['get_Item'](num);
      var obj3 = $T16()['CreateDomElementAndAppendIt']("tr", obj, grid);
      var num2 = 0;

      for (var a$1 = list.get()._items, i$1 = 0, l$1 = (list.get()._size | 0); i$1 < l$1; ($temp01 = i$1, 
          i$1 = ((i$1 + 1) | 0), 
          $temp01)) {
        var current2 = a$1[i$1];
        var iNTERNAL_CellDefinition = list3['get_Item'](num2);
        if (!iNTERNAL_CellDefinition.IsOverlapped) {
          var obj4 = $T16()['CreateDomElementAndAppendIt']("td", obj3, grid);
          var obj5 = $T16()['GetDomElementStyleForModification'](obj4);
          obj5.display = "table-cell";
          $thisType['ApplyGridLinesValues'](grid, num, num2, obj5);
          var obj6 = $T16()['CreateDomElementAndAppendIt']("div", obj4, grid);
          var obj7 = $T16()['GetDomElementStyleForModification'](obj6);
          obj7.position = "relative";
          iNTERNAL_CellDefinition.DomElement = obj6;
          iNTERNAL_CellDefinition.RowDomElement = obj3;
          iNTERNAL_CellDefinition.ColumnDomElement = obj4;
        }
        num2 = ((num2 + 1) | 0);
      }
      num = ((num + 1) | 0);
    }
    $thisType['RefreshRowsHeightsAndColumnsWidths'](grid, cellsStructure, columnDefinitions, rowDefinitions);
    return obj;
  };

  function Grid_InternalHelpers_IterateThroughCollectionOrCreateNewElementIfCollectionEmpty$00 (rowDefinitions) {
    var $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__ = new ($T17())(-2);
    $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__.$l$g3__rowDefinitions = rowDefinitions;
    return $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__;
  };

  function Grid_InternalHelpers_IterateThroughCollectionOrCreateNewElementIfCollectionEmpty$01 (columnDefinitions) {
    var $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__ = new ($T18())(-2);
    $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__.$l$g3__columnDefinitions = columnDefinitions;
    return $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__;
  };

  function Grid_InternalHelpers_NormalizeWidthAndHeightPercentages (grid, columnDefinitions, rowDefinitions, /* ref */ normalizedColumnDefinitions, /* ref */ normalizedRowDefinitions) {
    normalizedColumnDefinitions.set($S04().Construct());
    normalizedRowDefinitions.set($S05().Construct());
    var num = 0;
    var num2 = 0;
    var enumerator = columnDefinitions['GetEnumerator']();
    try {

      while ($IM01().Call(enumerator, null)) {
        var current = $IM04().Call(enumerator, null);
        if ((current['get_Width']())['get_IsStar']()) {
          num += +(current['get_Width']())['get_Value']();
        }
      }
    } finally {
      if (enumerator !== null) {
        $IM05().Call(enumerator, null);
      }
    }
    var enumerator2 = rowDefinitions['GetEnumerator']();
    try {

      while ($IM01().Call(enumerator2, null)) {
        var current2 = $IM02().Call(enumerator2, null);
        if ((current2['get_Height']())['get_IsStar']()) {
          num2 += +(current2['get_Height']())['get_Value']();
        }
      }
    } finally {
      if (enumerator2 !== null) {
        $IM05().Call(enumerator2, null);
      }
    }
    enumerator = columnDefinitions['GetEnumerator']();
    try {

      while ($IM01().Call(enumerator, null)) {
        current = $IM04().Call(enumerator, null);
        var columnDefinition = current;
        if ((current['get_Width']())['get_IsStar']()) {
          columnDefinition = current['Clone']();
          (columnDefinition.Width = $S06().Construct(+(((+(columnDefinition.Width)['get_Value']() * 100) / num)), $T1B().Star));
        }
        (normalizedColumnDefinitions.get())['Add'](columnDefinition);
      }
    } finally {
      if (enumerator !== null) {
        $IM05().Call(enumerator, null);
      }
    }
    enumerator2 = rowDefinitions['GetEnumerator']();
    try {

      while ($IM01().Call(enumerator2, null)) {
        current2 = $IM02().Call(enumerator2, null);
        var rowDefinition = current2;
        if ((current2['get_Height']())['get_IsStar']()) {
          rowDefinition = current2['Clone']();
          (rowDefinition.Height = $S06().Construct(+(((+(rowDefinition.Height)['get_Value']() * 100) / num2)), $T1B().Star));
        }
        (normalizedRowDefinitions.get())['Add'](rowDefinition);
      }
    } finally {
      if (enumerator2 !== null) {
        $IM05().Call(enumerator2, null);
      }
    }
    if (((normalizedColumnDefinitions.get())['get_Count']() | 0) === 0) {
      var arg_24C_0 = normalizedColumnDefinitions.get();
      var columnDefinition2 = new ($T0D())();
      (columnDefinition2.Width = $S06().Construct(100, $T1B().Star));
      columnDefinition2.Parent = grid;
      arg_24C_0['Add'](columnDefinition2);
    }
    if (((normalizedRowDefinitions.get())['get_Count']() | 0) === 0) {
      var arg_291_0 = normalizedRowDefinitions.get();
      var rowDefinition2 = new ($T09())();
      (rowDefinition2.Height = $S06().Construct(100, $T1B().Star));
      rowDefinition2.Parent = grid;
      arg_291_0['Add'](rowDefinition2);
    }
  };

  function Grid_InternalHelpers_RefreshColumnsWidth (grid, $normalizedColumnDefinitions) {
    var normalizedColumnDefinitions = new JSIL.BoxedVariable($normalizedColumnDefinitions);
    var list = new JSIL.BoxedVariable(null);
    if (normalizedColumnDefinitions.get() === null) {
      $thisType['NormalizeWidthAndHeightPercentages'](
        grid, 
        grid['get_ColumnDefinitions'](), 
        grid['get_RowDefinitions'](), 
        /* ref */ normalizedColumnDefinitions, 
        /* ref */ list
      );
    }

    for (var i = 0; i < ((normalizedColumnDefinitions.get())['get_Count']() | 0); i = ((i + 1) | 0)) {
      $thisType['RefreshColumnWidth'](grid, i, normalizedColumnDefinitions.get());
    }
  };

  function Grid_InternalHelpers_RefreshColumnWidth$02 (grid, columnDefinition) {
    var columnIndex = ((grid['get_ColumnDefinitions']())['IndexOf'](columnDefinition) | 0);
    $thisType['RefreshColumnWidth'](grid, columnIndex, null);
  };

  function Grid_InternalHelpers_RefreshColumnWidth$03 (grid, ColumnIndex, normalizedColumnsDefinitionsIfNeeded) {
    var $temp00, $temp01;
    var list = $S02().Construct();

    for (var a$0 = grid._currentCellsStructure._items, i$0 = 0, l$0 = (grid._currentCellsStructure._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      list['Add'](current['get_Item'](ColumnIndex));
    }
    if (normalizedColumnsDefinitionsIfNeeded !== null) {
      var columnDefinition = normalizedColumnsDefinitionsIfNeeded['get_Item'](ColumnIndex);
    } else {
      columnDefinition = (grid['get_ColumnDefinitions']())['get_Item'](ColumnIndex);
    }

    for (var a$1 = list._items, i$1 = 0, l$1 = (list._size | 0); i$1 < l$1; ($temp01 = i$1, 
        i$1 = ((i$1 + 1) | 0), 
        $temp01)) {
      var current2 = a$1[i$1];
      if (!current2.IsOverlapped) {
        var obj = $T16()['GetDomElementStyleForModification'](current2.ColumnDomElement);
        var text = $thisType['ConvertGridLengthToCssString'](columnDefinition['get_Width']()['MemberwiseClone'](), "%");
        var text2 = "100%";
        if (System.String.EndsWith(text, "px")) {
          text2 = text;
          text = "auto";
        }
        obj.width = text;
        obj.position = "relative";
        obj.padding = "0px";
        var obj2 = $T16()['GetDomElementStyleForModification'](current2.DomElement);
        obj2.width = text2;
        if (System.String.EndsWith(text2, "px")) {
          obj2.overflowX = "hidden";
        }
      }
    }
  };

  function Grid_InternalHelpers_RefreshGridLines (grid, cellsStructure, columnDefinitions, rowDefinitions) {
    var num = 0;
    var enumerator = rowDefinitions['GetEnumerator']();
    try {

      while ($IM01().Call(enumerator, null)) {
        var current = $IM02().Call(enumerator, null);
        var list = cellsStructure['get_Item'](num);
        var num2 = 0;
        var enumerator2 = columnDefinitions['GetEnumerator']();
        try {

          while ($IM01().Call(enumerator2, null)) {
            var current2 = $IM04().Call(enumerator2, null);
            var iNTERNAL_CellDefinition = list['get_Item'](num2);
            if (!iNTERNAL_CellDefinition.IsOverlapped) {
              var columnDomElement = iNTERNAL_CellDefinition.ColumnDomElement;
              var obj = $T16()['GetDomElementStyleForModification'](columnDomElement);
              $thisType['ApplyGridLinesValues'](grid, num, num2, obj);
            }
            num2 = ((num2 + 1) | 0);
          }
        } finally {
          if (enumerator2 !== null) {
            $IM05().Call(enumerator2, null);
          }
        }
        num = ((num + 1) | 0);
      }
    } finally {
      if (enumerator !== null) {
        $IM05().Call(enumerator, null);
      }
    }
  };

  function Grid_InternalHelpers_RefreshRowHeight$04 (grid, rowDefinition) {
    var rowIndex = ((grid['get_RowDefinitions']())['IndexOf'](rowDefinition) | 0);
    $thisType['RefreshRowHeight'](grid, rowIndex, null);
  };

  function Grid_InternalHelpers_RefreshRowHeight$05 (grid, rowIndex, normalizedRowsDefinitionsIfNeeded) {
    var $temp00;
    var list = (grid._currentCellsStructure)['get_Item'](rowIndex);
    if (normalizedRowsDefinitionsIfNeeded !== null) {
      var rowDefinition = normalizedRowsDefinitionsIfNeeded['get_Item'](rowIndex);
    } else {
      rowDefinition = (grid['get_RowDefinitions']())['get_Item'](rowIndex);
    }
    var text = $thisType['ConvertGridLengthToCssString'](rowDefinition['get_Height']()['MemberwiseClone'](), "%");
    var text2 = "100%";
    if (System.String.EndsWith(text, "px")) {
      text2 = text;
      text = "auto";
    }
    var obj = $T16()['GetDomElementStyleForModification'](list['get_Item'](0).RowDomElement);
    obj.height = text;

    for (var a$0 = list._items, i$0 = 0, l$0 = (list._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      if (!current.IsOverlapped) {
        var obj2 = $T16()['GetDomElementStyleForModification'](current.DomElement);
        obj2.height = text2;
        if (System.String.EndsWith(text2, "px")) {
          obj2.overflowY = "hidden";
          obj2.height = text2;
        }
        var obj3 = $T16()['GetDomElementStyleForModification'](current.ColumnDomElement);
        if (text == "auto") {
          obj3.height = "auto";
          if (!(System.String.EndsWith(text2, "px"))) {
            obj2.height = "auto";
          }
        } else {
          obj3.height = "100%";
          obj2.height = "100%";
        }
      }
    }
  };

  function Grid_InternalHelpers_RefreshRowsHeight (grid, $normalizedRowDefinitions) {
    var normalizedRowDefinitions = new JSIL.BoxedVariable($normalizedRowDefinitions);
    var list = new JSIL.BoxedVariable(null);
    if (normalizedRowDefinitions.get() === null) {
      $thisType['NormalizeWidthAndHeightPercentages'](
        grid, 
        grid['get_ColumnDefinitions'](), 
        grid['get_RowDefinitions'](), 
        /* ref */ list, 
        /* ref */ normalizedRowDefinitions
      );
    }

    for (var i = 0; i < ((normalizedRowDefinitions.get())['get_Count']() | 0); i = ((i + 1) | 0)) {
      $thisType['RefreshRowHeight'](grid, i, normalizedRowDefinitions.get());
    }
  };

  function Grid_InternalHelpers_RefreshRowsHeightsAndColumnsWidths (grid, cellsStructure, columnDefinitions, rowDefinitions) {
    var normalizedColumnDefinitions = new JSIL.BoxedVariable(null);
    var normalizedRowDefinitions = new JSIL.BoxedVariable(null);
    $thisType['NormalizeWidthAndHeightPercentages'](
      grid, 
      columnDefinitions, 
      rowDefinitions, 
      /* ref */ normalizedColumnDefinitions, 
      /* ref */ normalizedRowDefinitions
    );
    $thisType['RefreshRowsHeight'](grid, normalizedRowDefinitions.get());
    $thisType['RefreshColumnsWidth'](grid, normalizedColumnDefinitions.get());
  };

  JSIL.MakeStaticClass("Windows.UI.Xaml.Controls.Grid_InternalHelpers", false, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:false}, "ApplyGridLinesValues", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Windows.UI.Xaml.Controls.Grid"), $.Int32, 
          $.Int32, $.Object
        ]), 
      Grid_InternalHelpers_ApplyGridLinesValues
    )
      .Parameter(3, "tdStyle", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:true , Public:true }, "CalculateNewCellsStructure", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.INTERNAL_CellDefinition")])]), [$asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinitionCollection"), $asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinitionCollection")]), 
      Grid_InternalHelpers_CalculateNewCellsStructure
    );

    $.Method({Static:true , Public:true }, "ConvertGridLengthToCssString", 
      new JSIL.MethodSignature($.String, [$asm00.TypeRef("Windows.UI.Xaml.GridLength"), $.String]), 
      Grid_InternalHelpers_ConvertGridLengthToCssString
    );

    $.Method({Static:true , Public:true }, "GenerateDomElementsForGrid", 
      new JSIL.MethodSignature($.Object, [
          $asm00.TypeRef("Windows.UI.Xaml.Controls.Grid"), $asm06.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.INTERNAL_CellDefinition")])]), 
          $asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinitionCollection"), $asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinitionCollection"), 
          $.Object
        ]), 
      Grid_InternalHelpers_GenerateDomElementsForGrid
    )
      .Parameter(4, "parentRef", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:true , Public:false}, "IterateThroughCollectionOrCreateNewElementIfCollectionEmpty", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinition")]), [$asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinitionCollection")]), 
      Grid_InternalHelpers_IterateThroughCollectionOrCreateNewElementIfCollectionEmpty$00
    );

    $.Method({Static:true , Public:false}, "IterateThroughCollectionOrCreateNewElementIfCollectionEmpty", 
      new JSIL.MethodSignature($asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinition")]), [$asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinitionCollection")]), 
      Grid_InternalHelpers_IterateThroughCollectionOrCreateNewElementIfCollectionEmpty$01
    );

    $.Method({Static:true , Public:false}, "NormalizeWidthAndHeightPercentages", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Windows.UI.Xaml.Controls.Grid"), $asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinitionCollection"), 
          $asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinitionCollection"), $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinition")])]), 
          $jsilcore.TypeRef("JSIL.Reference", [$asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinition")])])
        ]), 
      Grid_InternalHelpers_NormalizeWidthAndHeightPercentages
    );

    $.Method({Static:true , Public:false}, "RefreshColumnsWidth", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.Controls.Grid"), $asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinition")])]), 
      Grid_InternalHelpers_RefreshColumnsWidth
    );

    $.Method({Static:true , Public:false}, "RefreshColumnWidth", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.Controls.Grid"), $asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinition")]), 
      Grid_InternalHelpers_RefreshColumnWidth$02
    );

    $.Method({Static:true , Public:false}, "RefreshColumnWidth", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Windows.UI.Xaml.Controls.Grid"), $.Int32, 
          $asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinition")])
        ]), 
      Grid_InternalHelpers_RefreshColumnWidth$03
    );

    $.Method({Static:true , Public:false}, "RefreshGridLines", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Windows.UI.Xaml.Controls.Grid"), $asm06.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.INTERNAL_CellDefinition")])]), 
          $asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinitionCollection"), $asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinitionCollection")
        ]), 
      Grid_InternalHelpers_RefreshGridLines
    );

    $.Method({Static:true , Public:false}, "RefreshRowHeight", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.Controls.Grid"), $asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinition")]), 
      Grid_InternalHelpers_RefreshRowHeight$04
    );

    $.Method({Static:true , Public:false}, "RefreshRowHeight", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Windows.UI.Xaml.Controls.Grid"), $.Int32, 
          $asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinition")])
        ]), 
      Grid_InternalHelpers_RefreshRowHeight$05
    );

    $.Method({Static:true , Public:false}, "RefreshRowsHeight", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.Controls.Grid"), $asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinition")])]), 
      Grid_InternalHelpers_RefreshRowsHeight
    );

    $.Method({Static:true , Public:false}, "RefreshRowsHeightsAndColumnsWidths", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Windows.UI.Xaml.Controls.Grid"), $asm06.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.INTERNAL_CellDefinition")])]), 
          $asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinitionCollection"), $asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinitionCollection")
        ]), 
      Grid_InternalHelpers_RefreshRowsHeightsAndColumnsWidths
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.Grid_InternalHelpers+<IterateThroughCollectionOrCreateNewElementIfCollectionEmpty>d__0 */ 

(function $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__0$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Environment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.IDisposable)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Collections.ObjectModel.Collection$b1.Of($asm00.Windows.UI.Xaml.Controls.RowDefinition))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Collections.IEnumerator)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm00.Windows.UI.Xaml.Controls.RowDefinition))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.RowDefinition)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.NotSupportedException"), null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm06.System.IDisposable.Dispose)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm06.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm00.Windows.UI.Xaml.Controls.RowDefinition).get_Current)) ();
  };

  function $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__0__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01()['get_CurrentManagedThreadId']() | 0);
  };

  function $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__0_$l$gm__Finally3 () {
    this.$l$g1__state = -1;
    if (this.$l$g7__wrap2 !== null) {
      $IM00().Call(this.$l$g7__wrap2, null);
    }
  };

  function $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__0_MoveNext ($exception) {
    try {

      var $label0 = 0;
    $labelgroup0: 
      while (true) {
        switch ($label0) {
          case 0: /* $entry0 */ 
            switch (this.$l$g1__state) {
              case 0: 
                this.$l$g1__state = -1;
                this.$l$g7__wrap2 = (this.rowDefinitions)['GetEnumerator']();
                this.$l$g1__state = 1;
                $label0 = 1 /* goto IL_81 */ ;
                continue $labelgroup0;

              case 2: 
                this.$l$g1__state = 1;
                $label0 = 1 /* goto IL_81 */ ;
                continue $labelgroup0;

              case 3: 
                this.$l$g1__state = -1;
                break;

            }
            $label0 = 2 /* goto IL_CA */ ;
            continue $labelgroup0;

          case 1: /* IL_81 */ 
            if ($IM01().Call(this.$l$g7__wrap2, null)) {
              this.$lrow$g5__1 = $IM02().Call(this.$l$g7__wrap2, null);
              this.$l$g2__current = this.$lrow$g5__1;
              this.$l$g1__state = 2;
              var result = true;
              return result;
            }
            this['$l$gm__Finally3']();
            if (((this.rowDefinitions)['get_Count']() | 0) === 0) {
              this.$l$g2__current = new ($T08())();
              this.$l$g1__state = 3;
              result = true;
              return result;
            }

            $label0 = 2 /* goto IL_CA */ ;
            continue $labelgroup0;
          case 2: /* IL_CA */ 
            result = false;

            break $labelgroup0;
        }
      }
    } catch ($exception) {
      this['System_IDisposable_Dispose']();
      throw $exception;
    }
    return result;
  };

  function $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__0_System_Collections_Generic_IEnumerable$lWindows_UI_Xaml_Controls_RowDefinition$g_GetEnumerator () {
    if (!((($T01()['get_CurrentManagedThreadId']() | 0) !== (this.$l$gl__initialThreadId | 0)) || ((this.$l$g1__state | 0) !== -2))) {
      this.$l$g1__state = 0;
      var $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__ = this;
    } else {
      $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__ = new $thisType(0);
    }
    $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__.rowDefinitions = this.$l$g3__rowDefinitions;
    return $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__;
  };

  function $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__0_System_Collections_Generic_IEnumerator$lWindows_UI_Xaml_Controls_RowDefinition$g_get_Current () {
    return this.$l$g2__current;
  };

  function $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__0_System_Collections_IEnumerable_GetEnumerator () {
    return this['System_Collections_Generic_IEnumerable$lWindows_UI_Xaml_Controls_RowDefinition$g_GetEnumerator']();
  };

  function $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__0_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  };

  function $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__0_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  };

  function $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__0_System_IDisposable_Dispose () {
    switch (this.$l$g1__state) {
      case 1: 
        break;

      case 2: 
        break;

      default: 
        return;

    }
    try {
    } finally {
      this['$l$gm__Finally3']();
    }
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.Controls.Grid_InternalHelpers+<IterateThroughCollectionOrCreateNewElementIfCollectionEmpty>d__0", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__0__ctor
    )
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false}, "$l$gm__Finally3", 
      JSIL.MethodSignature.Void, 
      $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__0_$l$gm__Finally3
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__0_MoveNext
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lWindows.UI.Xaml.Controls.RowDefinition$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinition")])), 
      $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__0_System_Collections_Generic_IEnumerable$lWindows_UI_Xaml_Controls_RowDefinition$g_GetEnumerator
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinition")]), "GetEnumerator")
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lWindows.UI.Xaml.Controls.RowDefinition$g.get_Current", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinition")), 
      $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__0_System_Collections_Generic_IEnumerator$lWindows_UI_Xaml_Controls_RowDefinition$g_get_Current
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinition")]), "get_Current")
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.IEnumerator")), 
      $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__0_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__0_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__0_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__0_System_IDisposable_Dispose
    )
      .Overrides($asm06.TypeRef("System.IDisposable"), "Dispose");

    $['Field']({Static:false, Public:false}, "$l$g2__current", $asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinition")); 
    $['Field']({Static:false, Public:false}, "$l$g1__state", $.Int32); 
    $['Field']({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32); 
    $['Field']({Static:false, Public:true }, "rowDefinitions", $asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinitionCollection")); 
    $['Field']({Static:false, Public:true }, "$l$g3__rowDefinitions", $asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinitionCollection")); 
    $['Field']({Static:false, Public:true }, "$lrow$g5__1", $asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinition")); 
    $['Field']({Static:false, Public:true }, "$l$g7__wrap2", $asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinition")])); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lWindows.UI.Xaml.Controls.RowDefinition$g.Current", $asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinition"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinition")]), 
      /* 1 */ $asm06.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinition")]), 
      /* 3 */ $asm06.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* class Windows.UI.Xaml.Controls.Grid_InternalHelpers+<IterateThroughCollectionOrCreateNewElementIfCollectionEmpty>d__6 */ 

(function $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__6$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Environment)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.IDisposable)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Collections.ObjectModel.Collection$b1.Of($asm00.Windows.UI.Xaml.Controls.ColumnDefinition))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Collections.IEnumerator)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm00.Windows.UI.Xaml.Controls.ColumnDefinition))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ColumnDefinition)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.NotSupportedException"), null))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm06.System.IDisposable.Dispose)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm06.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm00.Windows.UI.Xaml.Controls.ColumnDefinition).get_Current)) ();
  };

  function $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__6__ctor ($l$g1__state) {
    this.$l$g1__state = ($l$g1__state | 0);
    this.$l$gl__initialThreadId = ($T01()['get_CurrentManagedThreadId']() | 0);
  };

  function $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__6_$l$gm__Finally9 () {
    this.$l$g1__state = -1;
    if (this.$l$g7__wrap8 !== null) {
      $IM00().Call(this.$l$g7__wrap8, null);
    }
  };

  function $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__6_MoveNext ($exception) {
    try {

      var $label0 = 0;
    $labelgroup0: 
      while (true) {
        switch ($label0) {
          case 0: /* $entry0 */ 
            switch (this.$l$g1__state) {
              case 0: 
                this.$l$g1__state = -1;
                this.$l$g7__wrap8 = (this.columnDefinitions)['GetEnumerator']();
                this.$l$g1__state = 1;
                $label0 = 1 /* goto IL_81 */ ;
                continue $labelgroup0;

              case 2: 
                this.$l$g1__state = 1;
                $label0 = 1 /* goto IL_81 */ ;
                continue $labelgroup0;

              case 3: 
                this.$l$g1__state = -1;
                break;

            }
            $label0 = 2 /* goto IL_CA */ ;
            continue $labelgroup0;

          case 1: /* IL_81 */ 
            if ($IM01().Call(this.$l$g7__wrap8, null)) {
              this.$lcolumn$g5__7 = $IM02().Call(this.$l$g7__wrap8, null);
              this.$l$g2__current = this.$lcolumn$g5__7;
              this.$l$g1__state = 2;
              var result = true;
              return result;
            }
            this['$l$gm__Finally9']();
            if (((this.columnDefinitions)['get_Count']() | 0) === 0) {
              this.$l$g2__current = new ($T08())();
              this.$l$g1__state = 3;
              result = true;
              return result;
            }

            $label0 = 2 /* goto IL_CA */ ;
            continue $labelgroup0;
          case 2: /* IL_CA */ 
            result = false;

            break $labelgroup0;
        }
      }
    } catch ($exception) {
      this['System_IDisposable_Dispose']();
      throw $exception;
    }
    return result;
  };

  function $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__6_System_Collections_Generic_IEnumerable$lWindows_UI_Xaml_Controls_ColumnDefinition$g_GetEnumerator () {
    if (!((($T01()['get_CurrentManagedThreadId']() | 0) !== (this.$l$gl__initialThreadId | 0)) || ((this.$l$g1__state | 0) !== -2))) {
      this.$l$g1__state = 0;
      var $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__ = this;
    } else {
      $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__ = new $thisType(0);
    }
    $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__.columnDefinitions = this.$l$g3__columnDefinitions;
    return $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__;
  };

  function $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__6_System_Collections_Generic_IEnumerator$lWindows_UI_Xaml_Controls_ColumnDefinition$g_get_Current () {
    return this.$l$g2__current;
  };

  function $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__6_System_Collections_IEnumerable_GetEnumerator () {
    return this['System_Collections_Generic_IEnumerable$lWindows_UI_Xaml_Controls_ColumnDefinition$g_GetEnumerator']();
  };

  function $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__6_System_Collections_IEnumerator_get_Current () {
    return this.$l$g2__current;
  };

  function $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__6_System_Collections_IEnumerator_Reset () {
    throw $S00().Construct();
  };

  function $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__6_System_IDisposable_Dispose () {
    switch (this.$l$g1__state) {
      case 1: 
        break;

      case 2: 
        break;

      default: 
        return;

    }
    try {
    } finally {
      this['$l$gm__Finally9']();
    }
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.Controls.Grid_InternalHelpers+<IterateThroughCollectionOrCreateNewElementIfCollectionEmpty>d__6", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Int32), 
      $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__6__ctor
    )
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false}, "$l$gm__Finally9", 
      JSIL.MethodSignature.Void, 
      $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__6_$l$gm__Finally9
    );

    $.Method({Static:false, Public:false, Virtual:true }, "MoveNext", 
      JSIL.MethodSignature.Return($.Boolean), 
      $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__6_MoveNext
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "MoveNext");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerable$lWindows.UI.Xaml.Controls.ColumnDefinition$g.GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinition")])), 
      $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__6_System_Collections_Generic_IEnumerable$lWindows_UI_Xaml_Controls_ColumnDefinition$g_GetEnumerator
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinition")]), "GetEnumerator")
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lWindows.UI.Xaml.Controls.ColumnDefinition$g.get_Current", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinition")), 
      $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__6_System_Collections_Generic_IEnumerator$lWindows_UI_Xaml_Controls_ColumnDefinition$g_get_Current
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinition")]), "get_Current")
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.IEnumerator")), 
      $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__6_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerable"), "GetEnumerator")
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.get_Current", 
      JSIL.MethodSignature.Return($.Object), 
      $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__6_System_Collections_IEnumerator_get_Current
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "get_Current")
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Reset", 
      JSIL.MethodSignature.Void, 
      $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__6_System_Collections_IEnumerator_Reset
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerator"), "Reset")
      .Attribute($asm06.TypeRef("System.Diagnostics.DebuggerHiddenAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.IDisposable.Dispose", 
      JSIL.MethodSignature.Void, 
      $lIterateThroughCollectionOrCreateNewElementIfCollectionEmpty$gd__6_System_IDisposable_Dispose
    )
      .Overrides($asm06.TypeRef("System.IDisposable"), "Dispose");

    $['Field']({Static:false, Public:false}, "$l$g2__current", $asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinition")); 
    $['Field']({Static:false, Public:false}, "$l$g1__state", $.Int32); 
    $['Field']({Static:false, Public:false}, "$l$gl__initialThreadId", $.Int32); 
    $['Field']({Static:false, Public:true }, "columnDefinitions", $asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinitionCollection")); 
    $['Field']({Static:false, Public:true }, "$l$g3__columnDefinitions", $asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinitionCollection")); 
    $['Field']({Static:false, Public:true }, "$lcolumn$g5__7", $asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinition")); 
    $['Field']({Static:false, Public:true }, "$l$g7__wrap8", $asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinition")])); 
    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IEnumerator$lWindows.UI.Xaml.Controls.ColumnDefinition$g.Current", $asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinition"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerator.Current", $.Object);

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinition")]), 
      /* 1 */ $asm06.TypeRef("System.Collections.IEnumerable"), 
      /* 2 */ $asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinition")]), 
      /* 3 */ $asm06.TypeRef("System.Collections.IEnumerator"), 
      /* 4 */ $asm06.TypeRef("System.IDisposable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* enum Windows.UI.Xaml.Controls.ScrollBarVisibility */ 

JSIL.MakeEnum(
  {
    FullName: "Windows.UI.Xaml.Controls.ScrollBarVisibility", 
    BaseType: $asm06.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Disabled: 0, 
    Auto: 1, 
    Hidden: 2, 
    Visible: 3, 
  }
);

/* enum Windows.UI.Xaml.Controls.ScrollMode */ 

JSIL.MakeEnum(
  {
    FullName: "Windows.UI.Xaml.Controls.ScrollMode", 
    BaseType: $asm06.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Disabled: 0, 
    Enabled: 1, 
    Auto: 2, 
  }
);

/* class Windows.UI.Xaml.Controls.ScrollViewer */ 

(function ScrollViewer$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ScrollBarVisibility)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ContentControl)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Grid)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm06.System.InvalidOperationException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.InvalidOperationException"), [$asm06.TypeRef("System.String")]))) ();
  };

  function ScrollViewer__ctor () {
    $T04().prototype['_ctor'].call(this);
  };

  function ScrollViewer_CreateDomElement (parentRef, /* ref */ domElementWhereToPlaceChildren) {
    var obj2 = new JSIL.BoxedVariable(null);
    var obj4 = new JSIL.BoxedVariable(null);
    var obj = $T06()['CreateDomElementAppendItAndGetStyle']("div", parentRef, this, /* ref */ obj2);
    obj.height = "100%";
    obj.width = "100%";
    obj.overflowX = "scroll";
    obj.overflowY = "scroll";
    var obj3 = $T06()['CreateDomElementAppendItAndGetStyle']("div", obj2.get(), this, /* ref */ obj4);
    obj3.position = "relative";
    this['INTERNAL_ApplyHorizontalSettings'](this['get_HorizontalScrollBarVisibility'](), obj, obj3);
    this['INTERNAL_ApplyVerticalSettings'](this['get_VerticalScrollBarVisibility'](), obj, obj3);
    domElementWhereToPlaceChildren.set(obj4.get());
    return obj2.get();
  };

  function ScrollViewer_get_HorizontalScrollBarVisibility () {
    return $T01().$Cast(this['GetValue']($thisType.HorizontalScrollBarVisibilityProperty));
  };

  function ScrollViewer_get_VerticalScrollBarVisibility () {
    return $T01().$Cast(this['GetValue']($thisType.VerticalScrollBarVisibilityProperty));
  };

  function ScrollViewer_HorizontalScrollBarVisibility_Changed (d, e) {
    var scrollViewer = $thisType.$Cast(d);
    var scrollBarVisibility = $T01().$Cast(e['get_NewValue']());
    if ($T09()['IsElementInVisualTree'](scrollViewer)) {
      var iNTERNAL_OuterDomElement = scrollViewer.UIElement$INTERNAL_OuterDomElement$value;
      var obj = $T06()['GetDomElementStyleForModification'](iNTERNAL_OuterDomElement);
      var obj2 = $T06()['GetFirstChildDomElement'](iNTERNAL_OuterDomElement);
      var obj3 = $T06()['GetDomElementStyleForModification'](obj2);
      scrollViewer['INTERNAL_ApplyHorizontalSettings'](scrollBarVisibility, obj, obj3);
    }
  };

  function ScrollViewer_INTERNAL_ApplyHorizontalSettings (horizontalScrollBarVisibility, outerDivStyle, innerDivStyle, $exception) {
    if ($T09()['IsElementInVisualTree'](this)) {
      switch (horizontalScrollBarVisibility['valueOf']()) {
        case 0: 
          outerDivStyle.overflowX = "hidden";
          break;

        case 1: 
          outerDivStyle.overflowX = "auto";
          break;

        case 2: 
          outerDivStyle.overflowX = "hidden";
          break;

        case 3: 
          outerDivStyle.overflowX = "scroll";
          try {
            outerDivStyle.WebkitOverflowScrolling = "touch";
          } catch ($exception) {
          }
          break;

      }
      if (!(((horizontalScrollBarVisibility !== $T01().Visible) && 
            (horizontalScrollBarVisibility !== $T01().Auto)) || !(isNaN(this['get_Width']())))) {
        if ($T0E().$Is(this.UIElement$INTERNAL_VisualParent$value)) {
          innerDivStyle.width = "0px";
          innerDivStyle.overflowX = "visible";
        } else {
          innerDivStyle.width = "auto";
        }
      } else {
        innerDivStyle.width = "100%";
      }
    }
  };

  function ScrollViewer_INTERNAL_ApplyVerticalSettings (verticalScrollBarVisibility, outerDivStyle, innerDivStyle, $exception) {
    if ($T09()['IsElementInVisualTree'](this)) {
      switch (verticalScrollBarVisibility['valueOf']()) {
        case 0: 
          outerDivStyle.overflowY = "hidden";
          break;

        case 1: 
          outerDivStyle.overflowY = "auto";
          break;

        case 2: 
          outerDivStyle.overflowY = "hidden";
          break;

        case 3: 
          outerDivStyle.overflowY = "scroll";
          try {
            outerDivStyle.WebkitOverflowScrolling = "touch";
          } catch ($exception) {
          }
          break;

      }
      if (!(((verticalScrollBarVisibility !== $T01().Visible) && 
            (verticalScrollBarVisibility !== $T01().Auto)) || !(isNaN(this['get_Height']())))) {
        if ($T0E().$Is(this.UIElement$INTERNAL_VisualParent$value)) {
          innerDivStyle.height = "0px";
          innerDivStyle.overflowY = "visible";
        } else {
          innerDivStyle.height = "auto";
        }
      } else {
        innerDivStyle.height = "100%";
      }
    }
  };

  function ScrollViewer_ScrollToHorizontalOffset (offset) {
    if ($T09()['IsElementInVisualTree'](this)) {
      $T06()['SetDomElementProperty'](this.UIElement$INTERNAL_OuterDomElement$value, "scrollLeft", offset);
      return;
    }
    throw $S01().Construct("The \"ScrollToHorizontalOffset\" method can only be called after the ScrollViewer has been added to the Visual Tree. Consider calling this method from the Loaded event handler to make sure that the control is in the Visual Tree.");
  };

  function ScrollViewer_ScrollToVerticalOffset (offset) {
    if ($T09()['IsElementInVisualTree'](this)) {
      $T06()['SetDomElementProperty'](this.UIElement$INTERNAL_OuterDomElement$value, "scrollTop", offset);
      return;
    }
    throw $S01().Construct("The \"ScrollToVerticalOffset\" method can only be called after the ScrollViewer has been added to the Visual Tree. Consider calling this method from the Loaded event handler to make sure that the control is in the Visual Tree.");
  };

  function ScrollViewer_set_HorizontalScrollBarVisibility (value) {
    this['SetValue']($thisType.HorizontalScrollBarVisibilityProperty, value);
  };

  function ScrollViewer_set_VerticalScrollBarVisibility (value) {
    this['SetValue']($thisType.VerticalScrollBarVisibilityProperty, value);
  };

  function ScrollViewer_VerticalScrollBarVisibility_Changed (d, e) {
    var scrollViewer = $thisType.$Cast(d);
    var scrollBarVisibility = $T01().$Cast(e['get_NewValue']());
    if ($T09()['IsElementInVisualTree'](scrollViewer)) {
      var iNTERNAL_OuterDomElement = scrollViewer.UIElement$INTERNAL_OuterDomElement$value;
      var obj = $T06()['GetDomElementStyleForModification'](iNTERNAL_OuterDomElement);
      var obj2 = $T06()['GetFirstChildDomElement'](iNTERNAL_OuterDomElement);
      var obj3 = $T06()['GetDomElementStyleForModification'](obj2);
      scrollViewer['INTERNAL_ApplyVerticalSettings'](scrollBarVisibility, obj, obj3);
    }
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.ContentControl"), 
      Name: "Windows.UI.Xaml.Controls.ScrollViewer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ScrollViewer__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CreateDomElement", 
      new JSIL.MethodSignature($.Object, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]), 
      ScrollViewer_CreateDomElement
    );

    $.Method({Static:false, Public:true }, "get_HorizontalScrollBarVisibility", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Controls.ScrollBarVisibility")), 
      ScrollViewer_get_HorizontalScrollBarVisibility
    );

    $.Method({Static:false, Public:true }, "get_VerticalScrollBarVisibility", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Controls.ScrollBarVisibility")), 
      ScrollViewer_get_VerticalScrollBarVisibility
    );

    $.Method({Static:true , Public:false}, "HorizontalScrollBarVisibility_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      ScrollViewer_HorizontalScrollBarVisibility_Changed
    );

    $.Method({Static:false, Public:false}, "INTERNAL_ApplyHorizontalSettings", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Windows.UI.Xaml.Controls.ScrollBarVisibility"), $.Object, 
          $.Object
        ]), 
      ScrollViewer_INTERNAL_ApplyHorizontalSettings
    );

    $.Method({Static:false, Public:false}, "INTERNAL_ApplyVerticalSettings", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Windows.UI.Xaml.Controls.ScrollBarVisibility"), $.Object, 
          $.Object
        ]), 
      ScrollViewer_INTERNAL_ApplyVerticalSettings
    )
      .Parameter(1, "outerDivStyle", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        })
      .Parameter(2, "innerDivStyle", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:true }, "ScrollToHorizontalOffset", 
      JSIL.MethodSignature.Action($.Double), 
      ScrollViewer_ScrollToHorizontalOffset
    );

    $.Method({Static:false, Public:true }, "ScrollToVerticalOffset", 
      JSIL.MethodSignature.Action($.Double), 
      ScrollViewer_ScrollToVerticalOffset
    );

    $.Method({Static:false, Public:true }, "set_HorizontalScrollBarVisibility", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Controls.ScrollBarVisibility")), 
      ScrollViewer_set_HorizontalScrollBarVisibility
    );

    $.Method({Static:false, Public:true }, "set_VerticalScrollBarVisibility", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Controls.ScrollBarVisibility")), 
      ScrollViewer_set_VerticalScrollBarVisibility
    );

    $.Method({Static:true , Public:false}, "VerticalScrollBarVisibility_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      ScrollViewer_VerticalScrollBarVisibility_Changed
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "HorizontalScrollBarVisibilityProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "VerticalScrollBarVisibilityProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function ScrollViewer__cctor () {
      $thisType.HorizontalScrollBarVisibilityProperty = $T00()['Register']("HorizontalScrollBarVisibility", $T01().__Type__, $thisType.__Type__, $S00().Construct($T01().Disabled, $T03()['New']($thisType, $thisType['HorizontalScrollBarVisibility_Changed'], function () { return JSIL.GetMethodInfo($thisType, "HorizontalScrollBarVisibility_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.VerticalScrollBarVisibilityProperty = $T00()['Register']("VerticalScrollBarVisibility", $T01().__Type__, $thisType.__Type__, $S00().Construct($T01().Visible, $T03()['New']($thisType, $thisType['VerticalScrollBarVisibility_Changed'], function () { return JSIL.GetMethodInfo($thisType, "VerticalScrollBarVisibility_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      ScrollViewer__cctor
    );

    $.Property({Static:false, Public:true }, "HorizontalScrollBarVisibility", $asm00.TypeRef("Windows.UI.Xaml.Controls.ScrollBarVisibility"));

    $.Property({Static:false, Public:true }, "VerticalScrollBarVisibility", $asm00.TypeRef("Windows.UI.Xaml.Controls.ScrollBarVisibility"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.Image */ 

(function Image$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.ImageSource)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.Stretch)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.ExceptionRoutedEventHandler)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_EventManager$b2.Of($asm00.Windows.UI.Xaml.ExceptionRoutedEventHandler, $asm00.Windows.UI.Xaml.ExceptionRoutedEventArgs))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Func$b1.Of($asm06.System.Object))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.Action$b1.Of($asm06.System.Object))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventHandler)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_EventManager$b2.Of($asm00.Windows.UI.Xaml.RoutedEventHandler, $asm00.Windows.UI.Xaml.RoutedEventArgs))) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.Windows.UI.Xaml.ExceptionRoutedEventArgs)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventArgs)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm06.System.EventArgs)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm08.System.Linq.Enumerable)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm01.System.Uri)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.Imaging.BitmapImage)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm06.System.EventHandler)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_EventManager`2", [$asm00.TypeRef("Windows.UI.Xaml.ExceptionRoutedEventHandler"), $asm00.TypeRef("Windows.UI.Xaml.ExceptionRoutedEventArgs")]), [
        $asm06.TypeRef("System.Func`1", [$asm06.TypeRef("System.Object")]), $asm06.TypeRef("System.String"), 
        $asm06.TypeRef("System.Action`1", [$asm06.TypeRef("System.Object")])
      ]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_EventManager`2", [$asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler"), $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")]), [
        $asm06.TypeRef("System.Func`1", [$asm06.TypeRef("System.Object")]), $asm06.TypeRef("System.String"), 
        $asm06.TypeRef("System.Action`1", [$asm06.TypeRef("System.Object")])
      ]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.ExceptionRoutedEventArgs")))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.ExceptionRoutedEventArgs"), null))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Exception"), [$asm06.TypeRef("System.String")]))) ();
  };

  function Image__ctor () {
    this._imageFailedEventManager = null;
    this._imageOpenedEventManager = null;
    $T05().prototype['_ctor'].call(this);
  };

  function Image_$ladd_ImageFailed$gb__c () {
    return this.UIElement$INTERNAL_OuterDomElement$value;
  };

  function Image_$ladd_ImageOpened$gb__f () {
    return this.UIElement$INTERNAL_OuterDomElement$value;
  };

  function Image_add_ImageFailed (value) {
    if (this._imageFailedEventManager === null) {
      this._imageFailedEventManager = $S01().Construct($T09()['New'](this, $thisType.prototype['$ladd_ImageFailed$gb__c'], function () { return JSIL.GetMethodInfo($thisType, "$ladd_ImageFailed$gb__c", JSIL.MethodSignature.Return($.Object), false); }), "error", $T0A()['New'](this, $thisType.prototype['OnImageFailed'], function () { return JSIL.GetMethodInfo($thisType, "OnImageFailed", JSIL.MethodSignature.Action($.Object), false); }));
      $T08().prototype['Add'].call(this._imageFailedEventManager, value);
    } else {
      $T08().prototype['Add'].call(this._imageFailedEventManager, value);
    }
  };

  function Image_add_ImageOpened (value) {
    if (this._imageOpenedEventManager === null) {
      this._imageOpenedEventManager = $S02().Construct($T09()['New'](this, $thisType.prototype['$ladd_ImageOpened$gb__f'], function () { return JSIL.GetMethodInfo($thisType, "$ladd_ImageOpened$gb__f", JSIL.MethodSignature.Return($.Object), false); }), "load", $T0A()['New'](this, $thisType.prototype['OnImageOpened'], function () { return JSIL.GetMethodInfo($thisType, "OnImageOpened", JSIL.MethodSignature.Action($.Object), false); }));
      $T0C().prototype['Add'].call(this._imageOpenedEventManager, value);
    } else {
      $T0C().prototype['Add'].call(this._imageOpenedEventManager, value);
    }
  };

  function Image_bmpImage_ImageFailed (sender, e) {
    $S03().CallVirtual("OnImageFailed", null, this, e);
  };

  function Image_bmpImage_ImageOpened (sender, e) {
    $S04().CallVirtual("OnImageOpened", null, this, e);
  };

  function Image_bmpImage_UriSourceChanged (sender, e) {
    this['RefreshSource']();
  };

  function Image_CreateDomElement (parentRef, /* ref */ domElementWhereToPlaceChildren) {
    var obj = $T11()['CreateDomElementAndAppendIt']("img", parentRef, this);
    $T11()['SetDomElementAttribute'](obj, "alt", " ", false);
    domElementWhereToPlaceChildren.set(null);
    return obj;
  };

  function Image_get_Source () {
    return $T01().$Cast(this['GetValue']($thisType.SourceProperty));
  };

  function Image_get_Stretch () {
    return $T04().$Cast(this['GetValue']($thisType.StretchProperty));
  };

  function Image_INTERNAL_AttachToDomEvents () {
    $T06().prototype['INTERNAL_AttachToDomEvents'].call(this);
    if (this._imageOpenedEventManager !== null) {
      $T0C().prototype['AttachToDomEvents'].call(this._imageOpenedEventManager);
    }
    if (this._imageFailedEventManager !== null) {
      $T08().prototype['AttachToDomEvents'].call(this._imageFailedEventManager);
    }
  };

  function Image_INTERNAL_DetachFromDomEvents () {
    $T06().prototype['INTERNAL_DetachFromDomEvents'].call(this);
    if (this._imageOpenedEventManager !== null) {
      $T0C().prototype['DetachFromDomEvents'].call(this._imageOpenedEventManager);
    }
    if (this._imageFailedEventManager !== null) {
      $T08().prototype['DetachFromDomEvents'].call(this._imageFailedEventManager);
    }
  };

  function Image_OnImageFailed$00 (e) {
    var exceptionRoutedEventArgs = $S05().Construct();
    exceptionRoutedEventArgs['set_OriginalSource'](this);
    $S03().CallVirtual("OnImageFailed", null, this, exceptionRoutedEventArgs);
  };

  function Image_OnImageFailed$01 (eventArgs) {
    var $temp00;

    for (var a$0 = $T13()['ToList$b1']($T07())((this._imageFailedEventManager)['get_Handlers']())._items, i$0 = 0, l$0 = ($T13()['ToList$b1']($T07())((this._imageFailedEventManager)['get_Handlers']())._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      current(this, eventArgs);
    }
  };

  function Image_OnImageOpened$02 (e) {
    var routedEventArgs = new ($T0F())();
    routedEventArgs['set_OriginalSource'](this);
    $S04().CallVirtual("OnImageOpened", null, this, routedEventArgs);
  };

  function Image_OnImageOpened$03 (eventArgs) {
    var $temp00;

    for (var a$0 = $T13()['ToList$b1']($T0B())((this._imageOpenedEventManager)['get_Handlers']())._items, i$0 = 0, l$0 = ($T13()['ToList$b1']($T0B())((this._imageOpenedEventManager)['get_Handlers']())._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      current(this, eventArgs);
    }
  };

  function Image_RefreshSource () {
    if (this['get_Source']() !== null) {
      var uriSource = ($T15().$Cast(this['get_Source']()))['get_UriSource']();
      var text = (uriSource['get_OriginalString']().toLowerCase());
      if (System.String.StartsWith(text, "ms-appx:/")) {
        var relativePath = (JSIL.ConcatString("Resources/", uriSource['get_OriginalString']().substr(9)));
        $T11()['SetDomElementAttribute'](this.UIElement$INTERNAL_OuterDomElement$value, "src", relativePath);
      } else {
        if (!(System.String.StartsWith(text, "http:/")) && !(System.String.StartsWith(text, "https:/"))) {
          throw $S06().Construct(JSIL.ConcatString("Current version only supports absolute URIs that start with ms-appx:/ or http:/ or https:/", (
              !((text.indexOf(":") != -1))
                 ? "    - Try adding  ms-appx:/  to the beginning of your path."
                 : $T16().Empty)
            ));
        }
        $T11()['SetDomElementAttribute'](this.UIElement$INTERNAL_OuterDomElement$value, "src", uriSource['get_OriginalString']());
      }
    } else {
      $T11()['SetDomElementAttribute'](this.UIElement$INTERNAL_OuterDomElement$value, "src", "");
    }
    $T11()['SetDomElementAttribute'](this.UIElement$INTERNAL_OuterDomElement$value, "alt", " ");
  };

  function Image_remove_ImageFailed (value) {
    if (this._imageFailedEventManager !== null) {
      $T08().prototype['Remove'].call(this._imageFailedEventManager, value);
    }
  };

  function Image_remove_ImageOpened (value) {
    if (this._imageOpenedEventManager !== null) {
      $T0C().prototype['Remove'].call(this._imageOpenedEventManager, value);
    }
  };

  function Image_set_Source (value) {
    this['SetValue']($thisType.SourceProperty, value);
  };

  function Image_set_Stretch (value) {
    this['SetValue']($thisType.StretchProperty, value);
  };

  function Image_Source_Changed (i, e) {
    var image = $thisType.$Cast(i);
    var imageSource = $T01().$Cast(e['get_NewValue']());
    if ($T1A()['IsElementInVisualTree'](image)) {
      if ($T15().$Is(imageSource)) {
        var bitmapImage = $T15().$Cast(imageSource);
        bitmapImage['remove_ImageFailed']($T07()['New'](image, $thisType.prototype['bmpImage_ImageFailed'], function () { return JSIL.GetMethodInfo($thisType, "bmpImage_ImageFailed", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm00.Windows.UI.Xaml.ExceptionRoutedEventArgs]), false); }));
        bitmapImage['add_ImageFailed']($T07()['New'](image, $thisType.prototype['bmpImage_ImageFailed'], function () { return JSIL.GetMethodInfo($thisType, "bmpImage_ImageFailed", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm00.Windows.UI.Xaml.ExceptionRoutedEventArgs]), false); }));
        bitmapImage['remove_ImageOpened']($T0B()['New'](image, $thisType.prototype['bmpImage_ImageOpened'], function () { return JSIL.GetMethodInfo($thisType, "bmpImage_ImageOpened", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm00.Windows.UI.Xaml.RoutedEventArgs]), false); }));
        bitmapImage['add_ImageOpened']($T0B()['New'](image, $thisType.prototype['bmpImage_ImageOpened'], function () { return JSIL.GetMethodInfo($thisType, "bmpImage_ImageOpened", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm00.Windows.UI.Xaml.RoutedEventArgs]), false); }));
        bitmapImage['remove_UriSourceChanged']($T1B()['New'](image, $thisType.prototype['bmpImage_UriSourceChanged'], function () { return JSIL.GetMethodInfo($thisType, "bmpImage_UriSourceChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm06.System.EventArgs]), false); }));
        bitmapImage['add_UriSourceChanged']($T1B()['New'](image, $thisType.prototype['bmpImage_UriSourceChanged'], function () { return JSIL.GetMethodInfo($thisType, "bmpImage_UriSourceChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm06.System.EventArgs]), false); }));
      }
      image['RefreshSource']();
    }
  };

  function Image_Stretch_Changed (i, e) {
    var image = $thisType.$Cast(i);
    var stretch = $T04().$Cast(e['get_NewValue']());
    if ($T1A()['IsElementInVisualTree'](image)) {
      var frameworkElementOuterStyleForModification = $T11()['GetFrameworkElementOuterStyleForModification'](image);
      switch (stretch['valueOf']()) {
        case 0: 
          frameworkElementOuterStyleForModification.width = "auto";
          frameworkElementOuterStyleForModification.height = "auto";
          break;

        case 2: 
          frameworkElementOuterStyleForModification.maxWidth = "100%";
          frameworkElementOuterStyleForModification.maxHeight = "100%";
          break;

        case 3: 
          frameworkElementOuterStyleForModification.minWidth = "100%";
          frameworkElementOuterStyleForModification.minHeight = "100%";
          break;

      }
    }
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.FrameworkElement"), 
      Name: "Windows.UI.Xaml.Controls.Image", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Image__ctor
    );

    $.Method({Static:false, Public:false}, "$ladd_ImageFailed$gb__c", 
      JSIL.MethodSignature.Return($.Object), 
      Image_$ladd_ImageFailed$gb__c
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "$ladd_ImageOpened$gb__f", 
      JSIL.MethodSignature.Return($.Object), 
      Image_$ladd_ImageOpened$gb__f
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "add_ImageFailed", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.ExceptionRoutedEventHandler")), 
      Image_add_ImageFailed
    );

    $.Method({Static:false, Public:true }, "add_ImageOpened", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")), 
      Image_add_ImageOpened
    );

    $.Method({Static:false, Public:false}, "bmpImage_ImageFailed", 
      new JSIL.MethodSignature(null, [$.Object, $asm00.TypeRef("Windows.UI.Xaml.ExceptionRoutedEventArgs")]), 
      Image_bmpImage_ImageFailed
    );

    $.Method({Static:false, Public:false}, "bmpImage_ImageOpened", 
      new JSIL.MethodSignature(null, [$.Object, $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")]), 
      Image_bmpImage_ImageOpened
    );

    $.Method({Static:false, Public:false}, "bmpImage_UriSourceChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm06.TypeRef("System.EventArgs")]), 
      Image_bmpImage_UriSourceChanged
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CreateDomElement", 
      new JSIL.MethodSignature($.Object, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]), 
      Image_CreateDomElement
    );

    $.Method({Static:false, Public:true }, "get_Source", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Media.ImageSource")), 
      Image_get_Source
    );

    $.Method({Static:false, Public:true }, "get_Stretch", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Media.Stretch")), 
      Image_get_Stretch
    );

    $.Method({Static:false, Public:false, Virtual:true }, "INTERNAL_AttachToDomEvents", 
      JSIL.MethodSignature.Void, 
      Image_INTERNAL_AttachToDomEvents
    );

    $.Method({Static:false, Public:false, Virtual:true }, "INTERNAL_DetachFromDomEvents", 
      JSIL.MethodSignature.Void, 
      Image_INTERNAL_DetachFromDomEvents
    );

    $.Method({Static:false, Public:false}, "OnImageFailed", 
      JSIL.MethodSignature.Action($.Object), 
      Image_OnImageFailed$00
    )
      .Parameter(0, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false}, "OnImageFailed", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.ExceptionRoutedEventArgs")), 
      Image_OnImageFailed$01
    );

    $.Method({Static:false, Public:false}, "OnImageOpened", 
      JSIL.MethodSignature.Action($.Object), 
      Image_OnImageOpened$02
    )
      .Parameter(0, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false}, "OnImageOpened", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")), 
      Image_OnImageOpened$03
    );

    $.Method({Static:false, Public:false}, "RefreshSource", 
      JSIL.MethodSignature.Void, 
      Image_RefreshSource
    );

    $.Method({Static:false, Public:true }, "remove_ImageFailed", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.ExceptionRoutedEventHandler")), 
      Image_remove_ImageFailed
    );

    $.Method({Static:false, Public:true }, "remove_ImageOpened", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")), 
      Image_remove_ImageOpened
    );

    $.Method({Static:false, Public:true }, "set_Source", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Media.ImageSource")), 
      Image_set_Source
    );

    $.Method({Static:false, Public:true }, "set_Stretch", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Media.Stretch")), 
      Image_set_Stretch
    );

    $.Method({Static:true , Public:false}, "Source_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Image_Source_Changed
    );

    $.Method({Static:true , Public:false}, "Stretch_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Image_Stretch_Changed
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "SourceProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "StretchProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:false, Public:false}, "_imageFailedEventManager", $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_EventManager`2", [$asm00.TypeRef("Windows.UI.Xaml.ExceptionRoutedEventHandler"), $asm00.TypeRef("Windows.UI.Xaml.ExceptionRoutedEventArgs")])); 
    $['Field']({Static:false, Public:false}, "_imageOpenedEventManager", $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_EventManager`2", [$asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler"), $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")])); 
    function Image__cctor () {
      $thisType.SourceProperty = $T00()['Register']("Source", $T01().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['Source_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Source_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.StretchProperty = $T00()['Register']("Stretch", $T04().__Type__, $thisType.__Type__, $S00().Construct($T04().Uniform, $T03()['New']($thisType, $thisType['Stretch_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Stretch_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Image__cctor
    );

    $.Property({Static:false, Public:true }, "Source", $asm00.TypeRef("Windows.UI.Xaml.Media.ImageSource"));

    $.Property({Static:false, Public:true }, "Stretch", $asm00.TypeRef("Windows.UI.Xaml.Media.Stretch"));

    $.Event({Static:false, Public:true }, "ImageFailed", $asm00.TypeRef("Windows.UI.Xaml.ExceptionRoutedEventHandler"));

    $.Event({Static:false, Public:true }, "ImageOpened", $asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum Windows.UI.Xaml.Controls.Orientation */ 

JSIL.MakeEnum(
  {
    FullName: "Windows.UI.Xaml.Controls.Orientation", 
    BaseType: $asm06.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Vertical: 0, 
    Horizontal: 1, 
  }
);

/* class Windows.UI.Xaml.Controls.Panel */ 

(function Panel$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.Brush)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.UIElementCollection)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm01.System.Collections.ObjectModel.ObservableCollection$b1.Of($asm00.Windows.UI.Xaml.UIElement))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm01.System.Collections.Specialized.NotifyCollectionChangedEventHandler)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm00.Windows.UI.Color)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.SolidColorBrush)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm06.System.Collections.IList)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm06.System.Collections.IEnumerator)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm06.System.Collections.IEnumerable)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm06.System.Collections.ObjectModel.Collection$b1.Of($asm00.Windows.UI.Xaml.UIElement))) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm06.System.IDisposable)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm00.Windows.UI.Xaml.UIElement))) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Grid)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm06.System.Collections.IEnumerable.GetEnumerator)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm06.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm06.System.Collections.IEnumerator.get_Current)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm06.System.IDisposable.Dispose)) ();
  };
  var $IM04 = function () {
    return ($IM04 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm00.Windows.UI.Xaml.UIElement).get_Current)) ();
  };

  function Panel__ctor () {
    $T05().prototype['_ctor'].call(this);
    var value = new ($T06())();
    this['SetValue']($thisType.ChildrenProperty, value);
    (this['get_Children']())['remove_CollectionChanged']($T09()['New'](this, $thisType.prototype['Children_CollectionChanged'], function () { return JSIL.GetMethodInfo($thisType, "Children_CollectionChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs]), false); }));
    (this['get_Children']())['add_CollectionChanged']($T09()['New'](this, $thisType.prototype['Children_CollectionChanged'], function () { return JSIL.GetMethodInfo($thisType, "Children_CollectionChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs]), false); }));
  };

  function Panel_Background_Changed (d, e) {
    var panel = $thisType.$Cast(d);
    if ($T0B()['IsElementInVisualTree'](panel)) {
      if (panel['get_Background']() !== null) {
        $T0C()['GetFrameworkElementOuterStyleForModification'](panel).backgroundColor = (($T0E().$Cast(panel['get_Background']()))['get_Color']()['MemberwiseClone']())['INTERNAL_ToHtmlString']();
      } else {
        $T0C()['GetFrameworkElementOuterStyleForModification'](panel).backgroundColor = "";
      }
    }
  };

  function Panel_Children_Changed (d, e) {
    var object = $thisType.$Cast(d);
    var uIElementCollection = $T06().$Cast(e['get_OldValue']());
    var uIElementCollection2 = $T06().$Cast(e['get_NewValue']());
    if (uIElementCollection !== null) {
      uIElementCollection['remove_CollectionChanged']($T09()['New'](object, $thisType.prototype['Children_CollectionChanged'], function () { return JSIL.GetMethodInfo($thisType, "Children_CollectionChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs]), false); }));
    }
    if (uIElementCollection2 !== null) {
      uIElementCollection2['add_CollectionChanged']($T09()['New'](object, $thisType.prototype['Children_CollectionChanged'], function () { return JSIL.GetMethodInfo($thisType, "Children_CollectionChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs]), false); }));
    }
    $thisType['ManageChildrenChanged'](d, uIElementCollection, uIElementCollection2);
  };

  function Panel_Children_CollectionChanged (sender, e) {
    var uIElementCollection = null;
    var uIElementCollection2 = null;
    var list = e['get_NewItems']();
    if (list !== null) {
      uIElementCollection2 = new ($T06())();
      var enumerator = $IM00().Call(list, null);
      try {

        while ($IM01().Call(enumerator, null)) {
          var item = $T04().$Cast($IM02().Call(enumerator, null));
          uIElementCollection2['Add'](item);
        }
      } finally {
        var disposable = $T15().$As(enumerator);
        if (disposable !== null) {
          $IM03().Call(disposable, null);
        }
      }
    }
    list = e['get_OldItems']();
    if (list !== null) {
      uIElementCollection = new ($T06())();
      enumerator = $IM00().Call(list, null);
      try {

        while ($IM01().Call(enumerator, null)) {
          item = $T04().$Cast($IM02().Call(enumerator, null));
          uIElementCollection['Add'](item);
        }
      } finally {
        disposable = $T15().$As(enumerator);
        if (disposable !== null) {
          $IM03().Call(disposable, null);
        }
      }
    }
    $thisType['ManageChildrenChanged'](this, uIElementCollection, uIElementCollection2);
  };

  function Panel_get_Background () {
    return $T01().$Cast(this['GetValue']($thisType.BackgroundProperty));
  };

  function Panel_get_Children () {
    return $T06().$Cast(this['GetValue']($thisType.ChildrenProperty));
  };

  function Panel_ManageChildrenChanged (d, oldChildren, newChildren) {
    var panel = $thisType.$Cast(d);
    if (oldChildren !== null) {
      var enumerator = oldChildren['GetEnumerator']();
      try {

        while ($IM01().Call(enumerator, null)) {
          var current = $IM04().Call(enumerator, null);
          if (!((newChildren !== null) && newChildren['Contains'](current))) {
            $T0B()['DetachVisualChildIfNotNull'](current, panel);
          }
        }
      } finally {
        if (enumerator !== null) {
          $IM03().Call(enumerator, null);
        }
      }
    }
    if (newChildren !== null) {
      enumerator = newChildren['GetEnumerator']();
      try {

        while ($IM01().Call(enumerator, null)) {
          current = $IM04().Call(enumerator, null);
          $T0B()['AttachVisualChildIfNotAlreadyAttached'](current, panel);
        }
      } finally {
        if (enumerator !== null) {
          $IM03().Call(enumerator, null);
        }
      }
    }
    if ($T17().$Is(panel)) {
      ($T17().$Cast(panel))['LocallyManageChildrenChanged']();
    }
  };

  function Panel_set_Background (value) {
    this['SetValue']($thisType.BackgroundProperty, value);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.FrameworkElement"), 
      Name: "Windows.UI.Xaml.Controls.Panel", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Panel__ctor
    );

    $.Method({Static:true , Public:false}, "Background_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Panel_Background_Changed
    );

    $.Method({Static:true , Public:false}, "Children_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Panel_Children_Changed
    );

    $.Method({Static:false, Public:false}, "Children_CollectionChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm01.TypeRef("System.Collections.Specialized.NotifyCollectionChangedEventArgs")]), 
      Panel_Children_CollectionChanged
    );

    $.Method({Static:false, Public:true }, "get_Background", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      Panel_get_Background
    );

    $.Method({Static:false, Public:true }, "get_Children", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Controls.UIElementCollection")), 
      Panel_get_Children
    );

    $.Method({Static:true , Public:false}, "ManageChildrenChanged", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.Controls.UIElementCollection"), 
          $asm00.TypeRef("Windows.UI.Xaml.Controls.UIElementCollection")
        ]), 
      Panel_ManageChildrenChanged
    );

    $.Method({Static:false, Public:true }, "set_Background", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      Panel_set_Background
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "BackgroundProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "ChildrenProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function Panel__cctor () {
      $thisType.BackgroundProperty = $T00()['Register']("Background", $T01().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['Background_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Background_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.ChildrenProperty = $T00()['Register']("Children", $T04().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['Children_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Children_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Panel__cctor
    );

    $.Property({Static:false, Public:true }, "Background", $asm00.TypeRef("Windows.UI.Xaml.Media.Brush"));

    $.Property({Static:false, Public:true }, "Children", $asm00.TypeRef("Windows.UI.Xaml.Controls.UIElementCollection"));

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm03.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Children"]; });

})();

/* class Windows.UI.Xaml.Controls.StackPanel */ 

(function StackPanel$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Orientation)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Panel)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.NotSupportedException)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.NotSupportedException"), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.NotSupportedException"), [$asm06.TypeRef("System.String")]))) ();
  };

  function StackPanel__ctor () {
    this._renderedOrientation = null;
    $T04().prototype['_ctor'].call(this);
  };

  function StackPanel_CreateDomChildWrapper (parentRef, /* ref */ domElementWhereToPlaceChild) {
    if (this['get_Orientation']() === $T01().Horizontal) {
      var obj = $T06()['CreateDomElementAndAppendIt']("div", parentRef, this);
      var domElementStyleForModification = $T06()['GetDomElementStyleForModification'](obj);
      domElementStyleForModification.position = "relative";
      domElementStyleForModification.display = "table-cell";
      domElementStyleForModification.height = "100%";
      domElementStyleForModification.verticalAlign = "middle";
      domElementWhereToPlaceChild.set(obj);
      var result = obj;
    } else {
      if (this['get_Orientation']() !== $T01().Vertical) {
        throw $S01().Construct();
      }
      obj = $T06()['CreateDomElementAndAppendIt']("div", parentRef, this);
      domElementStyleForModification = $T06()['GetDomElementStyleForModification'](obj);
      domElementStyleForModification.position = "relative";
      domElementStyleForModification.width = "100%";
      domElementWhereToPlaceChild.set(obj);
      result = obj;
    }
    return result;
  };

  function StackPanel_CreateDomElement (parentRef, /* ref */ domElementWhereToPlaceChildren) {
    var obj2 = new JSIL.BoxedVariable(null);
    var obj4 = new JSIL.BoxedVariable(null);
    this._renderedOrientation = this['get_Orientation']();
    if (this._renderedOrientation === $T01().Horizontal) {
      var obj = $T06()['CreateDomElementAppendItAndGetStyle']("div", parentRef, this, /* ref */ obj2);
      obj.display = "table";
      var obj3 = $T06()['CreateDomElementAppendItAndGetStyle']("div", obj2.get(), this, /* ref */ obj4);
      obj3.marginLeft = "0px";
      obj3.marginRight = "auto";
      obj3.height = "100%";
      obj3.display = "table";
      domElementWhereToPlaceChildren.set(obj4.get());
      var result = obj2.get();
    } else {
      result = $T08().prototype['CreateDomElement'].call(this, parentRef, /* ref */ domElementWhereToPlaceChildren);
    }
    return result;
  };

  function StackPanel_get_Orientation () {
    return $T01().$Cast(this['GetValue']($thisType.OrientationProperty));
  };

  function StackPanel_INTERNAL_OnDetachedFromVisualTree () {
    this._renderedOrientation = null;
    $T09().prototype['INTERNAL_OnDetachedFromVisualTree'].call(this);
  };

  function StackPanel_Orientation_Changed (d, e) {
    var stackPanel = $thisType.$Cast(d);
    var orientation = $T01().$Cast(e['get_NewValue']());
    if (!(!$T0B()['IsElementInVisualTree'](stackPanel) || 
        (stackPanel._renderedOrientation === null) || (JSIL.Nullable_Value(stackPanel._renderedOrientation) === orientation))) {
      throw $S02().Construct("Changing the orientation of a StackPanel while it is in the visual tree is not yet supported.");
    }
  };

  function StackPanel_set_Orientation (value) {
    this['SetValue']($thisType.OrientationProperty, value);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.Panel"), 
      Name: "Windows.UI.Xaml.Controls.StackPanel", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      StackPanel__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CreateDomChildWrapper", 
      new JSIL.MethodSignature($.Object, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]), 
      StackPanel_CreateDomChildWrapper
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CreateDomElement", 
      new JSIL.MethodSignature($.Object, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]), 
      StackPanel_CreateDomElement
    );

    $.Method({Static:false, Public:true }, "get_Orientation", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Controls.Orientation")), 
      StackPanel_get_Orientation
    );

    $.Method({Static:false, Public:false, Virtual:true }, "INTERNAL_OnDetachedFromVisualTree", 
      JSIL.MethodSignature.Void, 
      StackPanel_INTERNAL_OnDetachedFromVisualTree
    );

    $.Method({Static:true , Public:false}, "Orientation_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      StackPanel_Orientation_Changed
    );

    $.Method({Static:false, Public:true }, "set_Orientation", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Controls.Orientation")), 
      StackPanel_set_Orientation
    );

    $['Field']({Static:false, Public:false}, "_renderedOrientation", $asm06.TypeRef("System.Nullable`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.Orientation")])); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "OrientationProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function StackPanel__cctor () {
      $thisType.OrientationProperty = $T00()['Register']("Orientation", $T01().__Type__, $thisType.__Type__, $S00().Construct($T01().Vertical, $T03()['New']($thisType, $thisType['Orientation_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Orientation_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      StackPanel__cctor
    );

    $.Property({Static:false, Public:true }, "Orientation", $asm00.TypeRef("Windows.UI.Xaml.Controls.Orientation"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.ColumnDefinition */ 

(function ColumnDefinition$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.GridLength)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.GridUnitType)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Grid_InternalHelpers)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.GridLength"), [$asm06.TypeRef("System.Double"), $asm00.TypeRef("Windows.UI.Xaml.GridUnitType")]))) ();
  };

  function ColumnDefinition__ctor () {
    $T06().prototype['_ctor'].call(this);
  };

  function ColumnDefinition_Clone () {
    var columnDefinition = new $thisType();
    columnDefinition['set_MinWidth'](this['get_MinWidth']());
    columnDefinition['set_MaxWidth'](this['get_MaxWidth']());
    (columnDefinition.Width = (this['get_Width']())['Clone']()['MemberwiseClone']());
    return columnDefinition;
  };

  function ColumnDefinition_get_MaxWidth () {
    return $T01().$Cast(this['GetValue']($thisType.MaxWidthProperty));
  };

  function ColumnDefinition_get_MinWidth () {
    return $T01().$Cast(this['GetValue']($thisType.MinWidthProperty));
  };

  function ColumnDefinition_get_Width () {
    return $T04().$Cast(this['GetValue']($thisType.WidthProperty));
  };

  function ColumnDefinition_MaxWidth_Changed (d, e) {
    var columnDefinition = $thisType.$Cast(d);
    var num = $T01().$Cast(e['get_NewValue']());
  };

  function ColumnDefinition_MinWidth_Changed (d, e) {
    var columnDefinition = $thisType.$Cast(d);
    var num = $T01().$Cast(e['get_NewValue']());
  };

  function ColumnDefinition_set_MaxWidth (value) {
    this['SetValue']($thisType.MaxWidthProperty, value);
  };

  function ColumnDefinition_set_MinWidth (value) {
    this['SetValue']($thisType.MinWidthProperty, value);
  };

  function ColumnDefinition_set_Width (value) {
    this['SetValue']($thisType.WidthProperty, value);
  };

  function ColumnDefinition_Width_Changed (d, e) {
    var columnDefinition = $thisType.$Cast(d);
    if (columnDefinition.Parent !== null) {
      var gridLength = new ($T04())();
      var gridLength2 = new ($T04())();
      if (e['get_NewValue']() !== null) {
        gridLength = $T04().$Cast(e['get_NewValue']())['MemberwiseClone']();
      }
      if (e['get_OldValue']() !== null) {
        gridLength2 = $T04().$Cast(e['get_OldValue']())['MemberwiseClone']();
      }
      if ($T08()['IsElementInVisualTree'](columnDefinition.Parent)) {
        if (!(!gridLength2['get_IsStar']() && !gridLength['get_IsStar']())) {
          $T09()['RefreshColumnsWidth'](columnDefinition.Parent, null);
        } else {
          $T09()['RefreshColumnWidth'](columnDefinition.Parent, columnDefinition);
        }
      }
    }
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), 
      Name: "Windows.UI.Xaml.Controls.ColumnDefinition", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ColumnDefinition__ctor
    );

    $.Method({Static:false, Public:true }, "Clone", 
      JSIL.MethodSignature.Return($.Type), 
      ColumnDefinition_Clone
    );

    $.Method({Static:false, Public:true }, "get_MaxWidth", 
      JSIL.MethodSignature.Return($.Double), 
      ColumnDefinition_get_MaxWidth
    );

    $.Method({Static:false, Public:true }, "get_MinWidth", 
      JSIL.MethodSignature.Return($.Double), 
      ColumnDefinition_get_MinWidth
    );

    $.Method({Static:false, Public:true }, "get_Width", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.GridLength")), 
      ColumnDefinition_get_Width
    );

    $.Method({Static:true , Public:false}, "MaxWidth_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      ColumnDefinition_MaxWidth_Changed
    );

    $.Method({Static:true , Public:false}, "MinWidth_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      ColumnDefinition_MinWidth_Changed
    );

    $.Method({Static:false, Public:true }, "set_MaxWidth", 
      JSIL.MethodSignature.Action($.Double), 
      ColumnDefinition_set_MaxWidth
    );

    $.Method({Static:false, Public:true }, "set_MinWidth", 
      JSIL.MethodSignature.Action($.Double), 
      ColumnDefinition_set_MinWidth
    );

    $.Method({Static:false, Public:true }, "set_Width", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.GridLength")), 
      ColumnDefinition_set_Width
    );

    $.Method({Static:true , Public:false}, "Width_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      ColumnDefinition_Width_Changed
    );

    $['Field']({Static:false, Public:false}, "Parent", $asm00.TypeRef("Windows.UI.Xaml.Controls.Grid")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "MaxWidthProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "MinWidthProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "WidthProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function ColumnDefinition__cctor () {
      $thisType.MaxWidthProperty = $T00()['Register']("MaxWidth", $T01().__Type__, $thisType.__Type__, $S00().Construct(Infinity, $T03()['New']($thisType, $thisType['MaxWidth_Changed'], function () { return JSIL.GetMethodInfo($thisType, "MaxWidth_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.MinWidthProperty = $T00()['Register']("MinWidth", $T01().__Type__, $thisType.__Type__, $S00().Construct(Infinity, $T03()['New']($thisType, $thisType['MinWidth_Changed'], function () { return JSIL.GetMethodInfo($thisType, "MinWidth_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.WidthProperty = $T00()['Register']("Width", $T04().__Type__, $thisType.__Type__, $S00().Construct($S01().Construct(1, $T05().Star), $T03()['New']($thisType, $thisType['Width_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Width_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      ColumnDefinition__cctor
    );

    $.Property({Static:false, Public:true }, "MaxWidth", $.Double);

    $.Property({Static:false, Public:true }, "MinWidth", $.Double);

    $.Property({Static:false, Public:true }, "Width", $asm00.TypeRef("Windows.UI.Xaml.GridLength"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.ColumnDefinitionCollection */ 

(function ColumnDefinitionCollection$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.System.Collections.ObjectModel.ObservableCollection$b1.Of($asm00.Windows.UI.Xaml.Controls.ColumnDefinition))) ();
  };

  function ColumnDefinitionCollection__ctor () {
    $T00().prototype['_ctor'].call(this);
  };

  JSIL.MakeType({
      BaseType: $asm01.TypeRef("System.Collections.ObjectModel.ObservableCollection`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinition")]), 
      Name: "Windows.UI.Xaml.Controls.ColumnDefinitionCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ColumnDefinitionCollection__ctor
    );

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.RowDefinition */ 

(function RowDefinition$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.GridLength)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.GridUnitType)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Grid_InternalHelpers)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.GridLength"), [$asm06.TypeRef("System.Double"), $asm00.TypeRef("Windows.UI.Xaml.GridUnitType")]))) ();
  };

  function RowDefinition__ctor () {
    $T06().prototype['_ctor'].call(this);
  };

  function RowDefinition_Clone () {
    var rowDefinition = new $thisType();
    rowDefinition['set_MinHeight'](this['get_MinHeight']());
    rowDefinition['set_MaxHeight'](this['get_MaxHeight']());
    (rowDefinition.Height = (this['get_Height']())['Clone']()['MemberwiseClone']());
    return rowDefinition;
  };

  function RowDefinition_get_Height () {
    return $T04().$Cast(this['GetValue']($thisType.HeightProperty));
  };

  function RowDefinition_get_MaxHeight () {
    return $T01().$Cast(this['GetValue']($thisType.MaxHeightProperty));
  };

  function RowDefinition_get_MinHeight () {
    return $T01().$Cast(this['GetValue']($thisType.MinHeightProperty));
  };

  function RowDefinition_Height_Changed (d, e) {
    var rowDefinition = $thisType.$Cast(d);
    if (rowDefinition.Parent !== null) {
      var gridLength = new ($T04())();
      var gridLength2 = new ($T04())();
      if (e['get_NewValue']() !== null) {
        gridLength = $T04().$Cast(e['get_NewValue']())['MemberwiseClone']();
      }
      if (e['get_OldValue']() !== null) {
        gridLength2 = $T04().$Cast(e['get_OldValue']())['MemberwiseClone']();
      }
      if ($T08()['IsElementInVisualTree'](rowDefinition.Parent)) {
        if (!(!gridLength2['get_IsStar']() && !gridLength['get_IsStar']())) {
          $T09()['RefreshRowsHeight'](rowDefinition.Parent, null);
        } else {
          $T09()['RefreshRowHeight'](rowDefinition.Parent, rowDefinition);
        }
      }
    }
  };

  function RowDefinition_MaxHeight_Changed (d, e) {
    var rowDefinition = $thisType.$Cast(d);
    var num = $T01().$Cast(e['get_NewValue']());
  };

  function RowDefinition_MinHeight_Changed (d, e) {
    var rowDefinition = $thisType.$Cast(d);
    var num = $T01().$Cast(e['get_NewValue']());
  };

  function RowDefinition_set_Height (value) {
    this['SetValue']($thisType.HeightProperty, value);
  };

  function RowDefinition_set_MaxHeight (value) {
    this['SetValue']($thisType.MaxHeightProperty, value);
  };

  function RowDefinition_set_MinHeight (value) {
    this['SetValue']($thisType.MinHeightProperty, value);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), 
      Name: "Windows.UI.Xaml.Controls.RowDefinition", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      RowDefinition__ctor
    );

    $.Method({Static:false, Public:true }, "Clone", 
      JSIL.MethodSignature.Return($.Type), 
      RowDefinition_Clone
    );

    $.Method({Static:false, Public:true }, "get_Height", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.GridLength")), 
      RowDefinition_get_Height
    );

    $.Method({Static:false, Public:true }, "get_MaxHeight", 
      JSIL.MethodSignature.Return($.Double), 
      RowDefinition_get_MaxHeight
    );

    $.Method({Static:false, Public:true }, "get_MinHeight", 
      JSIL.MethodSignature.Return($.Double), 
      RowDefinition_get_MinHeight
    );

    $.Method({Static:true , Public:false}, "Height_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      RowDefinition_Height_Changed
    );

    $.Method({Static:true , Public:false}, "MaxHeight_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      RowDefinition_MaxHeight_Changed
    );

    $.Method({Static:true , Public:false}, "MinHeight_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      RowDefinition_MinHeight_Changed
    );

    $.Method({Static:false, Public:true }, "set_Height", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.GridLength")), 
      RowDefinition_set_Height
    );

    $.Method({Static:false, Public:true }, "set_MaxHeight", 
      JSIL.MethodSignature.Action($.Double), 
      RowDefinition_set_MaxHeight
    );

    $.Method({Static:false, Public:true }, "set_MinHeight", 
      JSIL.MethodSignature.Action($.Double), 
      RowDefinition_set_MinHeight
    );

    $['Field']({Static:false, Public:false}, "Parent", $asm00.TypeRef("Windows.UI.Xaml.Controls.Grid")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "MaxHeightProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "MinHeightProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "HeightProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function RowDefinition__cctor () {
      $thisType.MaxHeightProperty = $T00()['Register']("MaxHeight", $T01().__Type__, $thisType.__Type__, $S00().Construct(Infinity, $T03()['New']($thisType, $thisType['MaxHeight_Changed'], function () { return JSIL.GetMethodInfo($thisType, "MaxHeight_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.MinHeightProperty = $T00()['Register']("MinHeight", $T01().__Type__, $thisType.__Type__, $S00().Construct(Infinity, $T03()['New']($thisType, $thisType['MinHeight_Changed'], function () { return JSIL.GetMethodInfo($thisType, "MinHeight_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.HeightProperty = $T00()['Register']("Height", $T04().__Type__, $thisType.__Type__, $S00().Construct($S01().Construct(1, $T05().Star), $T03()['New']($thisType, $thisType['Height_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Height_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      RowDefinition__cctor
    );

    $.Property({Static:false, Public:true }, "MaxHeight", $.Double);

    $.Property({Static:false, Public:true }, "MinHeight", $.Double);

    $.Property({Static:false, Public:true }, "Height", $asm00.TypeRef("Windows.UI.Xaml.GridLength"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.RowDefinitionCollection */ 

(function RowDefinitionCollection$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.System.Collections.ObjectModel.ObservableCollection$b1.Of($asm00.Windows.UI.Xaml.Controls.RowDefinition))) ();
  };

  function RowDefinitionCollection__ctor () {
    $T00().prototype['_ctor'].call(this);
  };

  JSIL.MakeType({
      BaseType: $asm01.TypeRef("System.Collections.ObjectModel.ObservableCollection`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinition")]), 
      Name: "Windows.UI.Xaml.Controls.RowDefinitionCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      RowDefinitionCollection__ctor
    );

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.Grid */ 

(function Grid$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ColumnDefinitionCollection)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.RowDefinitionCollection)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Panel)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm01.System.Collections.ObjectModel.ObservableCollection$b1.Of($asm00.Windows.UI.Xaml.Controls.ColumnDefinition))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm01.System.Collections.Specialized.NotifyCollectionChangedEventHandler)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm01.System.Collections.ObjectModel.ObservableCollection$b1.Of($asm00.Windows.UI.Xaml.Controls.RowDefinition))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.INTERNAL_CellDefinition)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm06.System.Collections.Generic.List$b1.Of($asm00.Windows.UI.Xaml.Controls.INTERNAL_CellDefinition)))) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm00.Windows.UI.Xaml.Controls.INTERNAL_CellDefinition))) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm00.Windows.UI.Xaml.Controls.ColumnDefinition))) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm06.System.Collections.ObjectModel.Collection$b1.Of($asm00.Windows.UI.Xaml.Controls.ColumnDefinition))) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm06.System.Collections.IEnumerator)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ColumnDefinition)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm06.System.IDisposable)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm06.System.Collections.ObjectModel.Collection$b1.Of($asm00.Windows.UI.Xaml.Controls.RowDefinition))) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize(System.Array.Of($asm00.Windows.UI.Xaml.UIElement))) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm00.Windows.UI.Xaml.UIElement))) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm06.System.Collections.ObjectModel.Collection$b1.Of($asm00.Windows.UI.Xaml.UIElement))) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualChildInformation)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm00.Windows.UI.Xaml.UIElement, $asm00.DotNetForHtml5.Core.INTERNAL_VisualChildInformation))) ();
  };
  var $T21 = function () {
    return ($T21 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Grid_InternalHelpers)) ();
  };
  var $T22 = function () {
    return ($T22 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm00.Windows.UI.Xaml.Controls.RowDefinition))) ();
  };
  var $T23 = function () {
    return ($T23 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.RowDefinition)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm06.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm00.Windows.UI.Xaml.Controls.ColumnDefinition).get_Current)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm06.System.IDisposable.Dispose)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm00.Windows.UI.Xaml.UIElement).get_Current)) ();
  };
  var $IM04 = function () {
    return ($IM04 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm00.Windows.UI.Xaml.Controls.RowDefinition).get_Current)) ();
  };

  function Grid__ctor () {
    this.INTERNAL_StringToSetVerticalGridLinesInCss = null;
    this.INTERNAL_StringToSetHorizontalGridLinesInCss = null;
    $T07().prototype['_ctor'].call(this);
    var columnDefinitionCollection = new ($T01())();
    var rowDefinitionCollection = new ($T04())();
    this['SetValue']($thisType.ColumnDefinitionsProperty, columnDefinitionCollection);
    this['SetValue']($thisType.RowDefinitionsProperty, rowDefinitionCollection);
    columnDefinitionCollection['remove_CollectionChanged']($T0A()['New'](this, $thisType.prototype['ColumnDefinitions_CollectionChanged'], function () { return JSIL.GetMethodInfo($thisType, "ColumnDefinitions_CollectionChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs]), false); }));
    rowDefinitionCollection['remove_CollectionChanged']($T0A()['New'](this, $thisType.prototype['RowDefinitions_CollectionChanged'], function () { return JSIL.GetMethodInfo($thisType, "RowDefinitions_CollectionChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs]), false); }));
    columnDefinitionCollection['add_CollectionChanged']($T0A()['New'](this, $thisType.prototype['ColumnDefinitions_CollectionChanged'], function () { return JSIL.GetMethodInfo($thisType, "ColumnDefinitions_CollectionChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs]), false); }));
    rowDefinitionCollection['add_CollectionChanged']($T0A()['New'](this, $thisType.prototype['RowDefinitions_CollectionChanged'], function () { return JSIL.GetMethodInfo($thisType, "RowDefinitions_CollectionChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs]), false); }));
  };

  function Grid_AreCellsDefinitionsIdentical (cellDefinition1, cellDefinition2) {
    return (((cellDefinition1.ColumnSpan | 0) === (cellDefinition2.ColumnSpan | 0)) && 
      (cellDefinition1.IsOverlapped === cellDefinition2.IsOverlapped) && ((cellDefinition1.RowSpan | 0) === (cellDefinition2.RowSpan | 0)));
  };

  function Grid_AreCellsStructuresIdentical (cellsStructure1, cellsStructure2) {
    var $temp00, $temp01;
    if (!((cellsStructure1 !== null) || (cellsStructure2 === null))) {
      var result = false;
    } else if (!((cellsStructure1 === null) || (cellsStructure2 !== null))) {
      result = false;
    } else if (!((cellsStructure1 !== null) || (cellsStructure2 !== null))) {
      result = true;
    } else if ((cellsStructure1['get_Count']() | 0) !== (cellsStructure2['get_Count']() | 0)) {
      result = false;
    } else {
      var num = 0;

      for (var a$0 = cellsStructure1._items, i$0 = 0, l$0 = (cellsStructure1._size | 0); i$0 < l$0; ($temp00 = i$0, 
          i$0 = ((i$0 + 1) | 0), 
          $temp00)) {
        var current = a$0[i$0];
        var list = cellsStructure2['get_Item'](num);
        if ((current['get_Count']() | 0) !== (list['get_Count']() | 0)) {
          result = false;
          return result;
        }
        var num2 = 0;

        for (var a$1 = current._items, i$1 = 0, l$1 = (current._size | 0); i$1 < l$1; ($temp01 = i$1, 
            i$1 = ((i$1 + 1) | 0), 
            $temp01)) {
          var current2 = a$1[i$1];
          if (!this['AreCellsDefinitionsIdentical'](current2, list['get_Item'](num2))) {
            result = false;
            return result;
          }
          num2 = ((num2 + 1) | 0);
        }
        num = ((num + 1) | 0);
      }
      result = true;
    }
    return result;
  };

  function Grid_Column_Changed (d, e) {
    var child = $T06().$Cast(d);
    var num = $T05().$Cast(e['get_NewValue']());
    if ($T11()['IsElementInVisualTree'](child)) {
    }
  };

  function Grid_ColumnDefinitions_Changed (d, e) {
    var grid = $thisType.$Cast(d);
    var columnDefinitionCollection = $T01().$Cast(e['get_OldValue']());
    var columnDefinitionCollection2 = $T01().$Cast(e['get_NewValue']());
    if (columnDefinitionCollection !== null) {
      columnDefinitionCollection['remove_CollectionChanged']($T0A()['New'](grid, $thisType.prototype['ColumnDefinitions_CollectionChanged'], function () { return JSIL.GetMethodInfo($thisType, "ColumnDefinitions_CollectionChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs]), false); }));
    }
    if (columnDefinitionCollection2 !== null) {
      columnDefinitionCollection2['add_CollectionChanged']($T0A()['New'](grid, $thisType.prototype['ColumnDefinitions_CollectionChanged'], function () { return JSIL.GetMethodInfo($thisType, "ColumnDefinitions_CollectionChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs]), false); }));
    }
    if (columnDefinitionCollection !== null) {
      var enumerator = columnDefinitionCollection['GetEnumerator']();
      try {

        while ($IM00().Call(enumerator, null)) {
          var current = $IM01().Call(enumerator, null);
          current.Parent = null;
        }
      } finally {
        if (enumerator !== null) {
          $IM02().Call(enumerator, null);
        }
      }
    }
    if (columnDefinitionCollection2 !== null) {
      enumerator = columnDefinitionCollection2['GetEnumerator']();
      try {

        while ($IM00().Call(enumerator, null)) {
          current = $IM01().Call(enumerator, null);
          current.Parent = grid;
        }
      } finally {
        if (enumerator !== null) {
          $IM02().Call(enumerator, null);
        }
      }
    }
    $thisType['ManageColumnDefinitionsChanged'](grid);
  };

  function Grid_ColumnDefinitions_CollectionChanged (sender, e) {
    $thisType['ManageColumnDefinitionsChanged'](this);
  };

  function Grid_CreateDomChildWrapper (parentRef, /* ref */ domElementWhereToPlaceChild) {
    var obj2 = new JSIL.BoxedVariable(null);
    var obj4 = new JSIL.BoxedVariable(null);
    var obj = $T19()['CreateDomElementAppendItAndGetStyle']("div", parentRef, this, /* ref */ obj2);
    obj.position = "absolute";
    obj.height = "100%";
    obj.width = "100%";
    obj.pointerEvents = "none";
    var obj3 = $T19()['CreateDomElementAppendItAndGetStyle']("div", obj2.get(), this, /* ref */ obj4);
    obj3.position = "relative";
    obj3.height = "100%";
    obj3.width = "100%";
    domElementWhereToPlaceChild.set(obj4.get());
    return obj2.get();
  };

  function Grid_CreateDomElement (parentRef, /* ref */ domElementWhereToPlaceChildren) {
    var result = $T1A().prototype['CreateDomElement'].call(this, parentRef, /* ref */ new JSIL['MemberReference'](this, "_innerDiv"));
    domElementWhereToPlaceChildren.set(this._innerDiv);
    return result;
  };

  function Grid_get_ColumnDefinitions () {
    return $T01().$Cast(this['GetValue']($thisType.ColumnDefinitionsProperty));
  };

  function Grid_get_RowDefinitions () {
    return $T04().$Cast(this['GetValue']($thisType.RowDefinitionsProperty));
  };

  function Grid_GetColumn (element) {
    return $T05().$Cast(element['GetValue']($thisType.ColumnProperty));
  };

  function Grid_GetDomElementWhereToPlaceChild (child) {
    var num = ($thisType['GetColumn'](child) | 0);
    var num2 = ($thisType['GetRow'](child) | 0);
    if (num2 >= ((this._currentCellsStructure)['get_Count']() | 0)) {
      num2 = ((((this._currentCellsStructure)['get_Count']() | 0) - 1) | 0);
    }
    var list = (this._currentCellsStructure)['get_Item'](num2);
    if (num >= (list['get_Count']() | 0)) {
      num = (((list['get_Count']() | 0) - 1) | 0);
    }
    var iNTERNAL_CellDefinition = list['get_Item'](num);
    return iNTERNAL_CellDefinition.DomElement;
  };

  function Grid_GetRow (element) {
    return $T05().$Cast(element['GetValue']($thisType.RowProperty));
  };

  function Grid_INTERNAL_OnDetachedFromVisualTree () {
    this._currentCellsStructure = null;
    this._innerDiv = null;
    this._currentDomTable = null;
  };

  function Grid_INTERNAL_UpdateDomStructureIfNecessary () {
    this['RebuildDomStructure'](false);
  };

  function Grid_LocallyManageChildrenChanged () {
    if (!(!((this['get_RowDefinitions']() !== null) && 
          (((this['get_RowDefinitions']())['get_Count']() | 0) > 0)) && ((this['get_ColumnDefinitions']() === null) || 
          (((this['get_ColumnDefinitions']())['get_Count']() | 0) <= 0)))) {
      var num = 1;
      if (!((this['get_RowDefinitions']() === null) || (((this['get_RowDefinitions']())['get_Count']() | 0) <= 0))) {
        num = ((this['get_RowDefinitions']())['get_Count']() | 0);
      }
      var num2 = 1;
      if (!((this['get_ColumnDefinitions']() === null) || (((this['get_ColumnDefinitions']())['get_Count']() | 0) <= 0))) {
        num2 = ((this['get_ColumnDefinitions']())['get_Count']() | 0);
      }
      var array = JSIL.MultidimensionalArray.New($T06(), num, num2);
      var enumerator = (this['get_Children']())['GetEnumerator']();
      try {

        while ($IM00().Call(enumerator, null)) {
          var current = $IM03().Call(enumerator, null);
          if ($T11()['IsElementInVisualTree'](current)) {
            var num3 = ($thisType['GetRow'](current) | 0);
            if (num3 >= num) {
              num3 = ((num - 1) | 0);
            }
            var num4 = ($thisType['GetColumn'](current) | 0);
            if (num4 >= num2) {
              num4 = ((num2 - 1) | 0);
            }
            if (array['Get'](num3, num4) !== null) {
              var obj = $T19()['GetDomElementStyleForModification']((this.UIElement$INTERNAL_VisualChildrenInformation$value)['get_Item'](array['Get'](num3, num4)).INTERNAL_VisualChildInformation$INTERNAL_OptionalChildWrapper_OuterDomElement$value);
              obj.position = "absolute";
            }
            var obj2 = $T19()['GetDomElementStyleForModification']((this.UIElement$INTERNAL_VisualChildrenInformation$value)['get_Item'](current).INTERNAL_VisualChildInformation$INTERNAL_OptionalChildWrapper_OuterDomElement$value);
            obj2.position = "relative";
            array['Set'](num3, num4, current);
          }
        }
      } finally {
        if (enumerator !== null) {
          $IM02().Call(enumerator, null);
        }
      }
    } else {
      var num5 = 0;
      enumerator = (this['get_Children']())['GetEnumerator']();
      try {

        while ($IM00().Call(enumerator, null)) {
          current = $IM03().Call(enumerator, null);
          if ($T11()['IsElementInVisualTree'](current)) {
            obj = $T19()['GetDomElementStyleForModification']((this.UIElement$INTERNAL_VisualChildrenInformation$value)['get_Item'](current).INTERNAL_VisualChildInformation$INTERNAL_OptionalChildWrapper_OuterDomElement$value);
            if (num5 < ((((this['get_Children']())['get_Count']() | 0) - 1) | 0)) {
              obj.position = "absolute";
            } else {
              obj.position = "relative";
            }
          }
          num5 = ((num5 + 1) | 0);
        }
      } finally {
        if (enumerator !== null) {
          $IM02().Call(enumerator, null);
        }
      }
    }
  };

  function Grid_ManageColumnDefinitionsChanged (grid) {
    if ($T11()['IsElementInVisualTree'](grid)) {
      grid['RebuildDomStructure'](true);
      grid['LocallyManageChildrenChanged']();
    }
  };

  function Grid_ManageRowDefinitionsChanged (grid) {
    if ($T11()['IsElementInVisualTree'](grid)) {
      grid['RebuildDomStructure'](true);
      grid['LocallyManageChildrenChanged']();
    }
  };

  function Grid_RebuildDomStructure (detachAndReattachTheChildrenIfNecessary) {
    var list = $T21()['CalculateNewCellsStructure'](
      this['get_ColumnDefinitions'](), 
      this['get_RowDefinitions']()
    );
    if (!this['AreCellsStructuresIdentical'](this._currentCellsStructure, list)) {
      if (detachAndReattachTheChildrenIfNecessary) {
        var enumerator = (this['get_Children']())['GetEnumerator']();
        try {

          while ($IM00().Call(enumerator, null)) {
            var current = $IM03().Call(enumerator, null);
            $T11()['DetachVisualChildIfNotNull'](current, this);
          }
        } finally {
          if (enumerator !== null) {
            $IM02().Call(enumerator, null);
          }
        }
      }
      if (this._currentDomTable !== null) {
        $T19()['RemoveFromDom'](this._currentDomTable);
        this._currentDomTable = null;
      }
      this._currentCellsStructure = list;
      this._currentDomTable = $T21()['GenerateDomElementsForGrid'](
        this, 
        list, 
        this['get_ColumnDefinitions'](), 
        this['get_RowDefinitions'](), 
        this._innerDiv
      );
      if (detachAndReattachTheChildrenIfNecessary) {
        enumerator = (this['get_Children']())['GetEnumerator']();
        try {

          while ($IM00().Call(enumerator, null)) {
            current = $IM03().Call(enumerator, null);
            $T11()['AttachVisualChildIfNotAlreadyAttached'](current, this);
          }
        } finally {
          if (enumerator !== null) {
            $IM02().Call(enumerator, null);
          }
        }
      }
    }
  };

  function Grid_Row_Changed (d, e) {
    var child = $T06().$Cast(d);
    var num = $T05().$Cast(e['get_NewValue']());
    if ($T11()['IsElementInVisualTree'](child)) {
    }
  };

  function Grid_RowDefinitions_Changed (d, e) {
    var grid = $thisType.$Cast(d);
    var rowDefinitionCollection = $T04().$Cast(e['get_OldValue']());
    var rowDefinitionCollection2 = $T04().$Cast(e['get_NewValue']());
    if (rowDefinitionCollection !== null) {
      rowDefinitionCollection['remove_CollectionChanged']($T0A()['New'](grid, $thisType.prototype['RowDefinitions_CollectionChanged'], function () { return JSIL.GetMethodInfo($thisType, "RowDefinitions_CollectionChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs]), false); }));
    }
    if (rowDefinitionCollection2 !== null) {
      rowDefinitionCollection2['add_CollectionChanged']($T0A()['New'](grid, $thisType.prototype['RowDefinitions_CollectionChanged'], function () { return JSIL.GetMethodInfo($thisType, "RowDefinitions_CollectionChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs]), false); }));
    }
    if (rowDefinitionCollection !== null) {
      var enumerator = rowDefinitionCollection['GetEnumerator']();
      try {

        while ($IM00().Call(enumerator, null)) {
          var current = $IM04().Call(enumerator, null);
          current.Parent = null;
        }
      } finally {
        if (enumerator !== null) {
          $IM02().Call(enumerator, null);
        }
      }
    }
    if (rowDefinitionCollection2 !== null) {
      enumerator = rowDefinitionCollection2['GetEnumerator']();
      try {

        while ($IM00().Call(enumerator, null)) {
          current = $IM04().Call(enumerator, null);
          current.Parent = grid;
        }
      } finally {
        if (enumerator !== null) {
          $IM02().Call(enumerator, null);
        }
      }
    }
    $thisType['ManageRowDefinitionsChanged'](grid);
  };

  function Grid_RowDefinitions_CollectionChanged (sender, e) {
    $thisType['ManageRowDefinitionsChanged'](this);
  };

  function Grid_set_ColumnDefinitions (value) {
    this['SetValue']($thisType.ColumnDefinitionsProperty, value);
  };

  function Grid_set_RowDefinitions (value) {
    this['SetValue']($thisType.RowDefinitionsProperty, value);
  };

  function Grid_SetColumn (element, value) {
    element['SetValue']($thisType.ColumnProperty, value);
  };

  function Grid_SetRow (element, value) {
    element['SetValue']($thisType.RowProperty, value);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.Panel"), 
      Name: "Windows.UI.Xaml.Controls.Grid", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Grid__ctor
    );

    $.Method({Static:false, Public:false}, "AreCellsDefinitionsIdentical", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Windows.UI.Xaml.Controls.INTERNAL_CellDefinition"), $asm00.TypeRef("Windows.UI.Xaml.Controls.INTERNAL_CellDefinition")]), 
      Grid_AreCellsDefinitionsIdentical
    );

    $.Method({Static:false, Public:false}, "AreCellsStructuresIdentical", 
      new JSIL.MethodSignature($.Boolean, [$asm06.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.INTERNAL_CellDefinition")])]), $asm06.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.INTERNAL_CellDefinition")])])]), 
      Grid_AreCellsStructuresIdentical
    );

    $.Method({Static:true , Public:false}, "Column_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Grid_Column_Changed
    );

    $.Method({Static:true , Public:false}, "ColumnDefinitions_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Grid_ColumnDefinitions_Changed
    );

    $.Method({Static:false, Public:false}, "ColumnDefinitions_CollectionChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm01.TypeRef("System.Collections.Specialized.NotifyCollectionChangedEventArgs")]), 
      Grid_ColumnDefinitions_CollectionChanged
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CreateDomChildWrapper", 
      new JSIL.MethodSignature($.Object, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]), 
      Grid_CreateDomChildWrapper
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CreateDomElement", 
      new JSIL.MethodSignature($.Object, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]), 
      Grid_CreateDomElement
    );

    $.Method({Static:false, Public:true }, "get_ColumnDefinitions", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinitionCollection")), 
      Grid_get_ColumnDefinitions
    );

    $.Method({Static:false, Public:true }, "get_RowDefinitions", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinitionCollection")), 
      Grid_get_RowDefinitions
    );

    $.Method({Static:true , Public:true }, "GetColumn", 
      new JSIL.MethodSignature($.Int32, [$asm00.TypeRef("Windows.UI.Xaml.UIElement")]), 
      Grid_GetColumn
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetDomElementWhereToPlaceChild", 
      new JSIL.MethodSignature($.Object, [$asm00.TypeRef("Windows.UI.Xaml.UIElement")]), 
      Grid_GetDomElementWhereToPlaceChild
    );

    $.Method({Static:true , Public:true }, "GetRow", 
      new JSIL.MethodSignature($.Int32, [$asm00.TypeRef("Windows.UI.Xaml.UIElement")]), 
      Grid_GetRow
    );

    $.Method({Static:false, Public:false, Virtual:true }, "INTERNAL_OnDetachedFromVisualTree", 
      JSIL.MethodSignature.Void, 
      Grid_INTERNAL_OnDetachedFromVisualTree
    );

    $.Method({Static:false, Public:false, Virtual:true }, "INTERNAL_UpdateDomStructureIfNecessary", 
      JSIL.MethodSignature.Void, 
      Grid_INTERNAL_UpdateDomStructureIfNecessary
    );

    $.Method({Static:false, Public:false}, "LocallyManageChildrenChanged", 
      JSIL.MethodSignature.Void, 
      Grid_LocallyManageChildrenChanged
    );

    $.Method({Static:true , Public:false}, "ManageColumnDefinitionsChanged", 
      JSIL.MethodSignature.Action($.Type), 
      Grid_ManageColumnDefinitionsChanged
    );

    $.Method({Static:true , Public:false}, "ManageRowDefinitionsChanged", 
      JSIL.MethodSignature.Action($.Type), 
      Grid_ManageRowDefinitionsChanged
    );

    $.Method({Static:false, Public:false}, "RebuildDomStructure", 
      JSIL.MethodSignature.Action($.Boolean), 
      Grid_RebuildDomStructure
    );

    $.Method({Static:true , Public:false}, "Row_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Grid_Row_Changed
    );

    $.Method({Static:true , Public:false}, "RowDefinitions_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Grid_RowDefinitions_Changed
    );

    $.Method({Static:false, Public:false}, "RowDefinitions_CollectionChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm01.TypeRef("System.Collections.Specialized.NotifyCollectionChangedEventArgs")]), 
      Grid_RowDefinitions_CollectionChanged
    );

    $.Method({Static:false, Public:false}, "set_ColumnDefinitions", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinitionCollection")), 
      Grid_set_ColumnDefinitions
    );

    $.Method({Static:false, Public:false}, "set_RowDefinitions", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinitionCollection")), 
      Grid_set_RowDefinitions
    );

    $.Method({Static:true , Public:true }, "SetColumn", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.UIElement"), $.Int32]), 
      Grid_SetColumn
    );

    $.Method({Static:true , Public:true }, "SetRow", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.UIElement"), $.Int32]), 
      Grid_SetRow
    );

    $['Constant']({Static:true , Public:false}, "UseCssGridLayout", false); 
    $['Field']({Static:false, Public:false}, "INTERNAL_StringToSetVerticalGridLinesInCss", $.String); 
    $['Field']({Static:false, Public:false}, "INTERNAL_StringToSetHorizontalGridLinesInCss", $.String); 
    $['Field']({Static:false, Public:false}, "_currentCellsStructure", $asm06.TypeRef("System.Collections.Generic.List`1", [$asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.Controls.INTERNAL_CellDefinition")])])); 
    $['Field']({Static:false, Public:false}, "_innerDiv", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute")); 
    $['Field']({Static:false, Public:false}, "_currentDomTable", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "ColumnDefinitionsProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "RowDefinitionsProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "RowProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "ColumnProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function Grid__cctor () {
      $thisType.ColumnDefinitionsProperty = $T00()['Register']("ColumnDefinitions", $T01().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['ColumnDefinitions_Changed'], function () { return JSIL.GetMethodInfo($thisType, "ColumnDefinitions_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.RowDefinitionsProperty = $T00()['Register']("RowDefinitions", $T04().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['RowDefinitions_Changed'], function () { return JSIL.GetMethodInfo($thisType, "RowDefinitions_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.RowProperty = $T00()['Register']("Row", $T05().__Type__, $T06().__Type__, $S00().Construct(0, $T03()['New']($thisType, $thisType['Row_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Row_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.ColumnProperty = $T00()['Register']("Column", $T05().__Type__, $T06().__Type__, $S00().Construct(0, $T03()['New']($thisType, $thisType['Column_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Column_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Grid__cctor
    );

    $.Property({Static:false, Public:true }, "ColumnDefinitions", $asm00.TypeRef("Windows.UI.Xaml.Controls.ColumnDefinitionCollection"));

    $.Property({Static:false, Public:true }, "RowDefinitions", $asm00.TypeRef("Windows.UI.Xaml.Controls.RowDefinitionCollection"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.TextBox */ 

(function TextBox$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.TextAlignment)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.TextWrapping)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.ScrollBarVisibility)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.Nullable$b1.Of($asm00.Windows.UI.Text.TextDecorations))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Control)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm00.Windows.UI.Xaml.TextChangedEventHandler)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm06.System.Delegate)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm06.System.Threading.Interlocked)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm06.System.Math)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_EventsHelper)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm06.System.Action$b1.Of($asm06.System.Object))) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventHandler)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm00.Windows.UI.Xaml.TextChangedEventArgs)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventArgs)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };

  function TextBox__ctor () {
    this._isCodeProgrammaticallyChangingText = false;
    this._isUserChangingText = false;
    this.previousInnerText = null;
    $T09().prototype['_ctor'].call(this);
  };

  function TextBox_$lCreateDomElement$gb__14 (e) {
    this['TextAreaValueChanged']();
  };

  function TextBox_AcceptsReturn_Changed (d, e) {
    var textBox = $thisType.$Cast(d);
    if (!(!$T0D()['IsElementInVisualTree'](textBox) || !$T0E()['IsNotUndefinedOrNull'](textBox._contentEditableDiv))) {
      if (!((e['get_NewValue']() === e['get_OldValue']()) || !$T01().$Is(e['get_NewValue']()))) {
        var flag = $T01().$Cast(e['get_NewValue']());
        JSIL.IgnoredMember("ExecuteJavaScript(javaScriptToExecute, commentForDebugging)", $asm06.System.String['Format']("\r\nvar element = document.getElementById(\"{0}\");\r\nelement.setAttribute(\"data-acceptsreturn\", \"{1}\");\r\n", JSIL.IgnoredMember("get_UniqueIdentifier()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(textBox._contentEditableDiv)).LValue, flag['toString']().toLowerCase()), null).LValue;
      }
    }
  };

  function TextBox_add_TextChanged (value) {
    var textChangedEventHandler = this.TextChanged;

    do {
      var textChangedEventHandler2 = textChangedEventHandler;
      var value2 = $T10()['Combine'](textChangedEventHandler2, value);
      textChangedEventHandler = $T11()['CompareExchange$b1']($T0F())(/* ref */ new JSIL['MemberReference'](this, "TextChanged"), value2, textChangedEventHandler2);
    } while (textChangedEventHandler !== textChangedEventHandler2);
  };

  function TextBox_CreateDomElement (parentRef, /* ref */ domElementWhereToPlaceChildren) {
    var obj2 = new JSIL.BoxedVariable(null);
    var parentRef2 = new JSIL.BoxedVariable(null);
    var obj5 = new JSIL.BoxedVariable(null);
    var obj7 = new JSIL.BoxedVariable(null);
    var obj = $T0E()['CreateDomElementAppendItAndGetStyle']("div", parentRef, this, /* ref */ obj2);
    obj.backgroundColor = "White";
    obj.borderColor = "#ABADB3";
    obj.borderStyle = "solid";
    obj.borderWidth = "1px";
    var obj3 = $T0E()['CreateDomElementAppendItAndGetStyle']("div", obj2.get(), this, /* ref */ parentRef2);
    obj3.width = "100%";
    obj3.height = "100%";
    var obj4 = $T0E()['CreateDomElementAppendItAndGetStyle']("div", parentRef2.get(), this, /* ref */ obj5);
    this._contentEditableDiv = obj5.get();
    obj4.width = "100%";
    obj4.height = "100%";
    obj4.whiteSpace = "normal";
    obj4.overflowX = "hidden";
    obj4.overflowY = "hidden";
    $T0E()['SetDomElementAttribute'](obj5.get(), "contentEditable", "true", false);
    this.UIElement$INTERNAL_OptionalSpecifyDomElementConcernedByFocus$value = obj5.get();
    obj4.minWidth = "14px";
    obj4.minHeight = (JSIL.ConcatString((+(((Math.floor((+this['get_FontSize']() * 1000))) / 1000))).toString(), "px"));
    var obj6 = $T0E()['CreateDomElementAppendItAndGetStyle']("div", obj5.get(), this, /* ref */ obj7);
    domElementWhereToPlaceChildren.set(obj5.get());
    $T15()['AttachToDomEvents']("input", obj5.get(), $T16()['New'](this, $thisType.prototype['$lCreateDomElement$gb__14'], function () { return JSIL.GetMethodInfo($thisType, "$lCreateDomElement$gb__14", JSIL.MethodSignature.Action($.Object), false); }));
    if (window.IE_VERSION) {
      this['add_GotFocus']($T17()['New'](this, $thisType.prototype['TextBox_GotFocus'], function () { return JSIL.GetMethodInfo($thisType, "TextBox_GotFocus", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm00.Windows.UI.Xaml.RoutedEventArgs]), false); }));
      this['add_LostFocus']($T17()['New'](this, $thisType.prototype['TextBox_LostFocus'], function () { return JSIL.GetMethodInfo($thisType, "TextBox_LostFocus", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm00.Windows.UI.Xaml.RoutedEventArgs]), false); }));
    }
    if (true) {
      var instance = this;
      obj5.get().addEventListener('keydown', function(e) {
          if (e.keyCode == 13 && (instance['get_AcceptsReturn']() !== true))
          {
              e.preventDefault();
              return false;
          }
      }, false);;
    } else {
      JSIL.IgnoredMember("ExecuteJavaScript(javaScriptToExecute, commentForDebugging)", $asm06.System.String['Format']("\r\nvar element = document.getElementById(\"{0}\");\r\nelement.setAttribute(\"data-acceptsreturn\", \"{1}\");\r\n", JSIL.IgnoredMember("get_UniqueIdentifier()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(obj5)).LValue, (this.AcceptsReturn)['toString']().toLowerCase()), null).LValue;
      JSIL.IgnoredMember("ExecuteJavaScript(javaScriptToExecute, commentForDebugging)", $asm06.System.String['Format']("\r\nvar element_OutsideEventHandler = document.getElementById(\"{0}\");\r\nelement_OutsideEventHandler.addEventListener('keydown', function(e) {{\r\n    var element_InsideEventHandler = document.getElementById(\"{0}\"); // For some reason we need to get again the reference to the element.\r\n    var acceptsReturn = element_InsideEventHandler.getAttribute(\"data-acceptsreturn\");\r\n    if (e.keyCode == 13 && acceptsReturn != \"true\")\r\n    {{\r\n        e.preventDefault();\r\n        return false;\r\n    }}\r\n}}, false);\r\n", JSIL.IgnoredMember("get_UniqueIdentifier()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(obj5)).LValue), null).LValue;
    }
    if (true) {
      var instance = this;
      obj5.get().addEventListener('paste', function(e) {
        var isSingleLine = (instance['get_AcceptsReturn']() !== true); // This is the current value at the time when the event is raised.
        // Chrome supports setting ContentEditable to PlainText-Only, so we try this first:
        obj5.get().setAttribute('contenteditable', 'PLAINTEXT-ONLY');
        if (obj5.get().contentEditable === 'plaintext-only') // If setting the attribute worked, we can read it back (in lowercase)
        {
            // --- CHROME: ---
            // Nothing else to do about rich text conversion to plain text.
            // However we still need to remove line breaks if AcceptsReturn is false:
            if (isSingleLine){
              e.preventDefault();
              var content = (e.originalEvent || e).clipboardData.getData('text/plain');
              content = content.replace(/\n/g, '').replace(/\r/g, '');
              document.execCommand('insertText', false, content);
            }
        }
        else
        {
            obj5.get().setAttribute('contenteditable', 'true');
            if (e.clipboardData){
              // --- FIREFOX: ---
              e.preventDefault();
              var content = (e.originalEvent || e).clipboardData.getData('text/plain');
              if (isSingleLine){
                content = content.replace(/\n/g, '').replace(/\r/g, '');
              }
              document.execCommand('insertText', false, content);
            }
            else if (window.clipboardData){
              // --- INTERNET EXPLORER: ---
              e.preventDefault();
              var content = window.clipboardData.getData('Text');
              if (window.getSelection)
              {
                var newDiv = document.createElement('div');
                if (isSingleLine){
                  content = content.replace(/\n/g, '').replace(/\r/g, '');
                }
                newDiv.innerHTML = content.replace(/\n/g, '<br />');
                window.getSelection().getRangeAt(0).insertNode( newDiv );
                //window.getSelection().getRangeAt(0).insertNode( document.createTextNode(content) );
              }
            }
        }
      }, false);;
    } else {
      $T0E()['SetDomElementAttribute'](obj5.get(), "contentEditable", "plaintext-only", false);
      JSIL.IgnoredMember("ExecuteJavaScript(javaScriptToExecute, commentForDebugging)", $asm06.System.String['Format']("\r\nvar element_OutsideEventHandler = document.getElementById(\"{0}\");\r\nelement_OutsideEventHandler.addEventListener('paste', function(e) {{\r\n    var element_InsideEventHandler = document.getElementById(\"{0}\"); // For some reason we need to get again the reference to the element.\r\n    var acceptsReturn = element_InsideEventHandler.getAttribute(\"data-acceptsreturn\");\r\n\r\n    if (acceptsReturn != \"true\"){{\r\n        e.preventDefault();\r\n        var content = (e.originalEvent || e).clipboardData.getData('text/plain');\r\n        content = content.replace(/\\n/g, '').replace(/\\r/g, '');\r\n        document.execCommand('insertText', false, content);\r\n    }}\r\n\r\n}}, false);\r\n", JSIL.IgnoredMember("get_UniqueIdentifier()", $asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomElementReference.$Cast(obj5)).LValue), null).LValue;
    }
    return obj2.get();
  };

  function TextBox_get_AcceptsReturn () {
    return $T01().$Cast(this['GetValue']($thisType.AcceptsReturnProperty));
  };

  function TextBox_get_HorizontalScrollBarVisibility () {
    return $T07().$Cast(this['GetValue']($thisType.HorizontalScrollBarVisibilityProperty));
  };

  function TextBox_get_Text () {
    return $T04().$Cast(this['GetValue']($thisType.TextProperty));
  };

  function TextBox_get_TextAlignment () {
    return $T05().$Cast(this['GetValue']($thisType.TextAlignmentProperty));
  };

  function TextBox_get_TextDecorations () {
    return $T08().$Cast(this['GetValue']($thisType.TextDecorationsProperty));
  };

  function TextBox_get_TextWrapping () {
    return $T06().$Cast(this['GetValue']($thisType.TextWrappingProperty));
  };

  function TextBox_get_VerticalScrollBarVisibility () {
    return $T07().$Cast(this['GetValue']($thisType.VerticalScrollBarVisibilityProperty));
  };

  function TextBox_HorizontalScrollBarVisibility_Changed (d, e) {
    var textBox = $thisType.$Cast(d);
    var scrollBarVisibility = $T07().$Cast(e['get_NewValue']());
    if (!(!$T0D()['IsElementInVisualTree'](textBox) || !$T0E()['IsNotUndefinedOrNull'](textBox._contentEditableDiv))) {
      var domElementStyleForModification = $T0E()['GetDomElementStyleForModification'](textBox._contentEditableDiv);
      switch (scrollBarVisibility['valueOf']()) {
        case 0: 
          domElementStyleForModification.overflowX = "hidden";
          break;

        case 1: 
          domElementStyleForModification.overflowX = "auto";
          break;

        case 2: 
          domElementStyleForModification.overflowX = "hidden";
          break;

        case 3: 
          domElementStyleForModification.overflowX = "scroll";
          break;

      }
    }
  };

  function TextBox_INTERNAL_AttachToDomEvents () {
    $T12().prototype['INTERNAL_AttachToDomEvents'].call(this);
  };

  function TextBox_OnAfterApplyHorizontalAlignmentAndWidth () {
    var frameworkElementOuterStyleForModification = $T0E()['GetFrameworkElementOuterStyleForModification'](this);
    var domElementStyleForModification = $T0E()['GetDomElementStyleForModification'](this._contentEditableDiv);
    var arg_B7_2 = domElementStyleForModification;
    arg_B7_2.width = frameworkElementOuterStyleForModification.width;
    var arg_160_2 = domElementStyleForModification;
    arg_160_2.maxWidth = frameworkElementOuterStyleForModification.maxWidth;
  };

  function TextBox_OnAfterApplyVerticalAlignmentAndWidth () {
    var frameworkElementOuterStyleForModification = $T0E()['GetFrameworkElementOuterStyleForModification'](this);
    var domElementStyleForModification = $T0E()['GetDomElementStyleForModification'](this._contentEditableDiv);
    var arg_B7_2 = domElementStyleForModification;
    arg_B7_2.height = frameworkElementOuterStyleForModification.height;
    var arg_160_2 = domElementStyleForModification;
    arg_160_2.maxHeight = frameworkElementOuterStyleForModification.maxHeight;
  };

  function TextBox_OnTextChanged (eventArgs) {
    if (this.TextChanged !== null) {
      this.TextChanged(this, eventArgs);
    }
  };

  function TextBox_remove_TextChanged (value) {
    var textChangedEventHandler = this.TextChanged;

    do {
      var textChangedEventHandler2 = textChangedEventHandler;
      var value2 = $T10()['Remove'](textChangedEventHandler2, value);
      textChangedEventHandler = $T11()['CompareExchange$b1']($T0F())(/* ref */ new JSIL['MemberReference'](this, "TextChanged"), value2, textChangedEventHandler2);
    } while (textChangedEventHandler !== textChangedEventHandler2);
  };

  function TextBox_set_AcceptsReturn (value) {
    this['SetValue']($thisType.AcceptsReturnProperty, value);
  };

  function TextBox_set_HorizontalScrollBarVisibility (value) {
    this['SetValue']($thisType.HorizontalScrollBarVisibilityProperty, value);
  };

  function TextBox_set_Text (value) {
    this['SetValue']($thisType.TextProperty, value);
  };

  function TextBox_set_TextAlignment (value) {
    this['SetValue']($thisType.TextAlignmentProperty, value);
  };

  function TextBox_set_TextDecorations (value) {
    this['SetValue']($thisType.TextDecorationsProperty, value);
  };

  function TextBox_set_TextWrapping (value) {
    this['SetValue']($thisType.TextWrappingProperty, value);
  };

  function TextBox_set_VerticalScrollBarVisibility (value) {
    this['SetValue']($thisType.VerticalScrollBarVisibilityProperty, value);
  };

  function TextBox_Text_Changed (d, e) {
    var textBox = $thisType.$Cast(d);
    if (!textBox._isUserChangingText) {
      textBox._isCodeProgrammaticallyChangingText = true;
      var content = JSIL.Coalesce($T04().$As(e['get_NewValue']()), $T04().Empty);
      if ($T0D()['IsElementInVisualTree'](textBox)) {
        $T0E()['SetContentString'](textBox, content, false);
      }
      textBox._isCodeProgrammaticallyChangingText = false;
    }
  };

  function TextBox_TextAlignment_Changed (d, e) {
    var textBox = $thisType.$Cast(d);
    if ($T05().$Is(e['get_NewValue']())) {
      var textAlignment = $T05().$Cast(e['get_NewValue']());
    } else {
      textAlignment = $T05().Left;
    }
    if ($T0D()['IsElementInVisualTree'](textBox)) {
      switch (textAlignment['valueOf']()) {
        case 0: 
          $T0E()['GetFrameworkElementOuterStyleForModification'](textBox).textAlign = "center";
          break;

        case 1: 
          $T0E()['GetFrameworkElementOuterStyleForModification'](textBox).textAlign = "left";
          break;

        case 2: 
          $T0E()['GetFrameworkElementOuterStyleForModification'](textBox).textAlign = "right";
          break;

        case 3: 
          $T0E()['GetFrameworkElementOuterStyleForModification'](textBox).textAlign = "justify";
          break;

      }
    }
  };

  function TextBox_TextAreaValueChanged () {
    if (!this._isCodeProgrammaticallyChangingText) {
      if ($T0D()['IsElementInVisualTree'](this)) {
        var text = $T0E()['GetTextBoxText'](this);
        if (!this['get_AcceptsReturn']()) {
          text = (System.String.Replace(System.String.Replace(text, "\n", ""), "\r", ""));
        }
        this._isUserChangingText = true;
        this['SetLocalValue']($thisType.TextProperty, text);
        this._isUserChangingText = false;
        var textChangedEventArgs = new ($T18())();
        textChangedEventArgs['set_OriginalSource'](this);
        this['OnTextChanged'](textChangedEventArgs);
      }
    }
  };

  function TextBox_TextBox_GotFocus (sender, e) {
    this.previousInnerText = $T04().$Cast(this.UIElement$INTERNAL_OptionalSpecifyDomElementConcernedByFocus$value.innerText);
  };

  function TextBox_TextBox_LostFocus (sender, e) {
    var a = $T04().$Cast(this.UIElement$INTERNAL_OptionalSpecifyDomElementConcernedByFocus$value.innerText);
    if (a != this.previousInnerText) {
      this['TextAreaValueChanged']();
      this.previousInnerText = a;
    }
  };

  function TextBox_TextDecorations_Changed (d, e) {
    var textBox = $thisType.$Cast(d);
    var textDecorations = $T08().$Cast(e['get_NewValue']());
    if ($T0D()['IsElementInVisualTree'](textBox)) {
      if (textDecorations !== null) {

        var $label0 = 0;
      $labelgroup0: 
        while (true) {
          switch ($label0) {
            case 0: /* $entry0 */ 
              switch ((JSIL.Nullable_Value(textDecorations))['valueOf']()) {
                case 2: 
                  var text = "overline";
                  break $labelgroup0;

                case 3: 
                  text = "line-through";
                  break $labelgroup0;

                case 4: 
                  text = "underline";
                  break $labelgroup0;

              }
              text = "";
              break $labelgroup0;

          }
        }
      } else {
        text = "";
      }
      $T0E()['GetDomElementStyleForModification'](textBox.UIElement$INTERNAL_OptionalSpecifyDomElementConcernedByFocus$value).textDecoration = text;
    }
  };

  function TextBox_TextWrapping_Changed (d, e) {
    var textBox = $thisType.$Cast(d);
    if ($T06().$Is(e['get_NewValue']())) {
      var textWrapping = $T06().$Cast(e['get_NewValue']());
    } else {
      textWrapping = $T06().$Cast($thisType.TextWrappingProperty.DependencyProperty$TypeMetadata$value.PropertyMetadata$DefaultValue$value);
    }
    if (!(!$T0D()['IsElementInVisualTree'](textBox) || !$T0E()['IsNotUndefinedOrNull'](textBox._contentEditableDiv))) {
      switch (textWrapping['valueOf']()) {
        case 1: 
          $T0E()['GetDomElementStyleForModification'](textBox._contentEditableDiv).whiteSpace = "nowrap";
          break;

        case 2: 
          $T0E()['GetDomElementStyleForModification'](textBox._contentEditableDiv).whiteSpace = "normal";
          break;

      }
    }
  };

  function TextBox_VerticalScrollBarVisibility_Changed (d, e) {
    var textBox = $thisType.$Cast(d);
    var scrollBarVisibility = $T07().$Cast(e['get_NewValue']());
    if (!(!$T0D()['IsElementInVisualTree'](textBox) || !$T0E()['IsNotUndefinedOrNull'](textBox._contentEditableDiv))) {
      var domElementStyleForModification = $T0E()['GetDomElementStyleForModification'](textBox._contentEditableDiv);
      switch (scrollBarVisibility['valueOf']()) {
        case 0: 
          domElementStyleForModification.overflowY = "hidden";
          break;

        case 1: 
          domElementStyleForModification.overflowY = "auto";
          break;

        case 2: 
          domElementStyleForModification.overflowY = "hidden";
          break;

        case 3: 
          domElementStyleForModification.overflowY = "scroll";
          break;

      }
    }
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.Control"), 
      Name: "Windows.UI.Xaml.Controls.TextBox", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      TextBox__ctor
    );

    $.Method({Static:false, Public:false}, "$lCreateDomElement$gb__14", 
      JSIL.MethodSignature.Action($.Object), 
      TextBox_$lCreateDomElement$gb__14
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "AcceptsReturn_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      TextBox_AcceptsReturn_Changed
    );

    $.Method({Static:false, Public:true }, "add_TextChanged", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.TextChangedEventHandler")), 
      TextBox_add_TextChanged
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CreateDomElement", 
      new JSIL.MethodSignature($.Object, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]), 
      TextBox_CreateDomElement
    );

    $.Method({Static:false, Public:true }, "get_AcceptsReturn", 
      JSIL.MethodSignature.Return($.Boolean), 
      TextBox_get_AcceptsReturn
    );

    $.Method({Static:false, Public:true }, "get_HorizontalScrollBarVisibility", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Controls.ScrollBarVisibility")), 
      TextBox_get_HorizontalScrollBarVisibility
    );

    $.Method({Static:false, Public:true }, "get_Text", 
      JSIL.MethodSignature.Return($.String), 
      TextBox_get_Text
    );

    $.Method({Static:false, Public:true }, "get_TextAlignment", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.TextAlignment")), 
      TextBox_get_TextAlignment
    );

    $.Method({Static:false, Public:true }, "get_TextDecorations", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Nullable`1", [$asm00.TypeRef("Windows.UI.Text.TextDecorations")])), 
      TextBox_get_TextDecorations
    );

    $.Method({Static:false, Public:true }, "get_TextWrapping", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.TextWrapping")), 
      TextBox_get_TextWrapping
    );

    $.Method({Static:false, Public:true }, "get_VerticalScrollBarVisibility", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Controls.ScrollBarVisibility")), 
      TextBox_get_VerticalScrollBarVisibility
    );

    $.Method({Static:true , Public:false}, "HorizontalScrollBarVisibility_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      TextBox_HorizontalScrollBarVisibility_Changed
    );

    $.Method({Static:false, Public:false, Virtual:true }, "INTERNAL_AttachToDomEvents", 
      JSIL.MethodSignature.Void, 
      TextBox_INTERNAL_AttachToDomEvents
    );

    $.Method({Static:false, Public:false, Virtual:true }, "OnAfterApplyHorizontalAlignmentAndWidth", 
      JSIL.MethodSignature.Void, 
      TextBox_OnAfterApplyHorizontalAlignmentAndWidth
    );

    $.Method({Static:false, Public:false, Virtual:true }, "OnAfterApplyVerticalAlignmentAndWidth", 
      JSIL.MethodSignature.Void, 
      TextBox_OnAfterApplyVerticalAlignmentAndWidth
    );

    $.Method({Static:false, Public:false, Virtual:true }, "OnTextChanged", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.TextChangedEventArgs")), 
      TextBox_OnTextChanged
    );

    $.Method({Static:false, Public:true }, "remove_TextChanged", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.TextChangedEventHandler")), 
      TextBox_remove_TextChanged
    );

    $.Method({Static:false, Public:true }, "set_AcceptsReturn", 
      JSIL.MethodSignature.Action($.Boolean), 
      TextBox_set_AcceptsReturn
    );

    $.Method({Static:false, Public:true }, "set_HorizontalScrollBarVisibility", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Controls.ScrollBarVisibility")), 
      TextBox_set_HorizontalScrollBarVisibility
    );

    $.Method({Static:false, Public:true }, "set_Text", 
      JSIL.MethodSignature.Action($.String), 
      TextBox_set_Text
    );

    $.Method({Static:false, Public:true }, "set_TextAlignment", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.TextAlignment")), 
      TextBox_set_TextAlignment
    );

    $.Method({Static:false, Public:true }, "set_TextDecorations", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Nullable`1", [$asm00.TypeRef("Windows.UI.Text.TextDecorations")])), 
      TextBox_set_TextDecorations
    );

    $.Method({Static:false, Public:true }, "set_TextWrapping", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.TextWrapping")), 
      TextBox_set_TextWrapping
    );

    $.Method({Static:false, Public:true }, "set_VerticalScrollBarVisibility", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Controls.ScrollBarVisibility")), 
      TextBox_set_VerticalScrollBarVisibility
    );

    $.Method({Static:true , Public:false}, "Text_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      TextBox_Text_Changed
    );

    $.Method({Static:true , Public:false}, "TextAlignment_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      TextBox_TextAlignment_Changed
    );

    $.Method({Static:false, Public:false}, "TextAreaValueChanged", 
      JSIL.MethodSignature.Void, 
      TextBox_TextAreaValueChanged
    );

    $.Method({Static:false, Public:false}, "TextBox_GotFocus", 
      new JSIL.MethodSignature(null, [$.Object, $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")]), 
      TextBox_TextBox_GotFocus
    );

    $.Method({Static:false, Public:false}, "TextBox_LostFocus", 
      new JSIL.MethodSignature(null, [$.Object, $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")]), 
      TextBox_TextBox_LostFocus
    );

    $.Method({Static:true , Public:false}, "TextDecorations_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      TextBox_TextDecorations_Changed
    );

    $.Method({Static:true , Public:false}, "TextWrapping_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      TextBox_TextWrapping_Changed
    );

    $.Method({Static:true , Public:false}, "VerticalScrollBarVisibility_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      TextBox_VerticalScrollBarVisibility_Changed
    );

    $['Field']({Static:false, Public:false}, "_contentEditableDiv", $.Object); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "AcceptsReturnProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "TextProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "TextAlignmentProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:false, Public:false}, "TextChanged", $asm00.TypeRef("Windows.UI.Xaml.TextChangedEventHandler")); 
    $['Field']({Static:false, Public:false}, "_isCodeProgrammaticallyChangingText", $.Boolean); 
    $['Field']({Static:false, Public:false}, "_isUserChangingText", $.Boolean); 
    $['Field']({Static:false, Public:false}, "previousInnerText", $.String); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "TextWrappingProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "HorizontalScrollBarVisibilityProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "VerticalScrollBarVisibilityProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "TextDecorationsProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function TextBox__cctor () {
      $thisType.AcceptsReturnProperty = $T00()['Register']("AcceptsReturn", $T01().__Type__, $thisType.__Type__, $S00().Construct(false, $T03()['New']($thisType, $thisType['AcceptsReturn_Changed'], function () { return JSIL.GetMethodInfo($thisType, "AcceptsReturn_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.TextProperty = $T00()['Register']("Text", $T04().__Type__, $thisType.__Type__, $S00().Construct($T04().Empty, $T03()['New']($thisType, $thisType['Text_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Text_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.TextAlignmentProperty = $T00()['Register']("TextAlignment", $T05().__Type__, $thisType.__Type__, $S00().Construct($T05().Left, $T03()['New']($thisType, $thisType['TextAlignment_Changed'], function () { return JSIL.GetMethodInfo($thisType, "TextAlignment_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.TextWrappingProperty = $T00()['Register']("TextWrapping", $T06().__Type__, $thisType.__Type__, $S00().Construct($T06().Wrap, $T03()['New']($thisType, $thisType['TextWrapping_Changed'], function () { return JSIL.GetMethodInfo($thisType, "TextWrapping_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.HorizontalScrollBarVisibilityProperty = $T00()['Register']("HorizontalScrollBarVisibility", $T07().__Type__, $thisType.__Type__, $S00().Construct($T07().Hidden, $T03()['New']($thisType, $thisType['HorizontalScrollBarVisibility_Changed'], function () { return JSIL.GetMethodInfo($thisType, "HorizontalScrollBarVisibility_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.VerticalScrollBarVisibilityProperty = $T00()['Register']("VerticalScrollBarVisibility", $T07().__Type__, $thisType.__Type__, $S00().Construct($T07().Hidden, $T03()['New']($thisType, $thisType['VerticalScrollBarVisibility_Changed'], function () { return JSIL.GetMethodInfo($thisType, "VerticalScrollBarVisibility_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.TextDecorationsProperty = $T00()['Register']("TextDecorations", $T08().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['TextDecorations_Changed'], function () { return JSIL.GetMethodInfo($thisType, "TextDecorations_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      TextBox__cctor
    );

    $.Property({Static:false, Public:true }, "AcceptsReturn", $.Boolean);

    $.Property({Static:false, Public:true }, "Text", $.String);

    $.Property({Static:false, Public:true }, "TextAlignment", $asm00.TypeRef("Windows.UI.Xaml.TextAlignment"));

    $.Property({Static:false, Public:true }, "TextWrapping", $asm00.TypeRef("Windows.UI.Xaml.TextWrapping"));

    $.Property({Static:false, Public:true }, "HorizontalScrollBarVisibility", $asm00.TypeRef("Windows.UI.Xaml.Controls.ScrollBarVisibility"));

    $.Property({Static:false, Public:true }, "VerticalScrollBarVisibility", $asm00.TypeRef("Windows.UI.Xaml.Controls.ScrollBarVisibility"));

    $.Property({Static:false, Public:true }, "TextDecorations", $asm06.TypeRef("System.Nullable`1", [$asm00.TypeRef("Windows.UI.Text.TextDecorations")]));

    $.Event({Static:false, Public:true }, "TextChanged", $asm00.TypeRef("Windows.UI.Xaml.TextChangedEventHandler"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.UIElementCollection */ 

(function UIElementCollection$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.System.Collections.ObjectModel.ObservableCollection$b1.Of($asm00.Windows.UI.Xaml.UIElement))) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm00.Windows.UI.Xaml.UIElement))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm01.System.Collections.Specialized.NotifyCollectionChangedAction)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.List`1", [$asm00.TypeRef("Windows.UI.Xaml.UIElement")]), [$asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm00.TypeRef("Windows.UI.Xaml.UIElement")])]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Collections.Specialized.NotifyCollectionChangedEventArgs"), [$asm01.TypeRef("System.Collections.Specialized.NotifyCollectionChangedAction"), $asm06.TypeRef("System.Collections.IList")]))) ();
  };

  function UIElementCollection__ctor () {
    $T00().prototype['_ctor'].call(this);
  };

  function UIElementCollection_ClearItems () {
    this._suppressCollectionChanged = true;
    var changedItems = $S00().Construct(this);
    $T00().prototype['ClearItems'].call(this);
    $T00().prototype['OnCollectionChanged'].call(this, $S01().Construct($T03().Remove, changedItems));
  };

  function UIElementCollection_OnCollectionChanged (e) {
    if (!this._suppressCollectionChanged) {
      $T00().prototype['OnCollectionChanged'].call(this, e);
    }
    this._suppressCollectionChanged = false;
  };

  JSIL.MakeType({
      BaseType: $asm01.TypeRef("System.Collections.ObjectModel.ObservableCollection`1", [$asm00.TypeRef("Windows.UI.Xaml.UIElement")]), 
      Name: "Windows.UI.Xaml.Controls.UIElementCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      UIElementCollection__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "ClearItems", 
      JSIL.MethodSignature.Void, 
      UIElementCollection_ClearItems
    );

    $.Method({Static:false, Public:false, Virtual:true }, "OnCollectionChanged", 
      JSIL.MethodSignature.Action($asm01.TypeRef("System.Collections.Specialized.NotifyCollectionChangedEventArgs")), 
      UIElementCollection_OnCollectionChanged
    );

    $['Field']({Static:false, Public:false}, "_suppressCollectionChanged", $.Boolean); 
    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.Canvas */ 

(function Canvas$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Panel)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm06.System.String)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };

  function Canvas__ctor () {
    $T06().prototype['_ctor'].call(this);
  };

  function Canvas_CreateDomElement (parentRef, /* ref */ domElementWhereToPlaceChildren) {
    var obj = $T08()['CreateDomElementAndAppendIt']("div", parentRef, this);
    var domElementStyleForModification = $T08()['GetDomElementStyleForModification'](obj);
    domElementStyleForModification.overflow = "display";
    domElementStyleForModification.position = "relative";
    domElementWhereToPlaceChildren.set(obj);
    return obj;
  };

  function Canvas_GetLeft (element) {
    return $T01().$Cast(element['GetValue']($thisType.LeftProperty));
  };

  function Canvas_GetTop (element) {
    return $T01().$Cast(element['GetValue']($thisType.TopProperty));
  };

  function Canvas_GetZIndex (element) {
    return $T05().$Cast(element['GetValue']($thisType.ZIndexProperty));
  };

  function Canvas_Left_Changed (d, e) {
    var uIElement = $T02().$Cast(d);
    var num = $T01().$Cast(e['get_NewValue']());
    if ($T0B()['IsElementInVisualTree'](uIElement)) {
      var obj = $T08()['GetDomElementStyleForModification'](uIElement.UIElement$INTERNAL_AdditionalOutsideDivForMargins$value);
      obj.left = (JSIL.ConcatString((num).toString(), "px"));
    }
  };

  function Canvas_SetLeft (element, value) {
    element['SetValue']($thisType.LeftProperty, value);
  };

  function Canvas_SetTop (element, value) {
    element['SetValue']($thisType.TopProperty, value);
  };

  function Canvas_SetZIndex (element, value) {
    element['SetValue']($thisType.ZIndexProperty, value);
  };

  function Canvas_Top_Changed (d, e) {
    var uIElement = $T02().$Cast(d);
    var num = $T01().$Cast(e['get_NewValue']());
    if ($T0B()['IsElementInVisualTree'](uIElement)) {
      var obj = $T08()['GetDomElementStyleForModification'](uIElement.UIElement$INTERNAL_AdditionalOutsideDivForMargins$value);
      obj.top = (JSIL.ConcatString((num).toString(), "px"));
    }
  };

  function Canvas_ZIndex_Changed (d, e) {
    var uIElement = $T02().$Cast(d);
    var num = $T05().$Cast(e['get_NewValue']());
    if ($T0B()['IsElementInVisualTree'](uIElement)) {
      var obj = $T08()['GetDomElementStyleForModification'](uIElement.UIElement$INTERNAL_AdditionalOutsideDivForMargins$value);
      obj.zIndex = ((num).toString());
    }
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.Panel"), 
      Name: "Windows.UI.Xaml.Controls.Canvas", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Canvas__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CreateDomElement", 
      new JSIL.MethodSignature($.Object, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]), 
      Canvas_CreateDomElement
    );

    $.Method({Static:true , Public:true }, "GetLeft", 
      new JSIL.MethodSignature($.Double, [$asm00.TypeRef("Windows.UI.Xaml.UIElement")]), 
      Canvas_GetLeft
    );

    $.Method({Static:true , Public:true }, "GetTop", 
      new JSIL.MethodSignature($.Double, [$asm00.TypeRef("Windows.UI.Xaml.UIElement")]), 
      Canvas_GetTop
    );

    $.Method({Static:true , Public:true }, "GetZIndex", 
      new JSIL.MethodSignature($.Int32, [$asm00.TypeRef("Windows.UI.Xaml.UIElement")]), 
      Canvas_GetZIndex
    );

    $.Method({Static:true , Public:false}, "Left_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Canvas_Left_Changed
    );

    $.Method({Static:true , Public:true }, "SetLeft", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.UIElement"), $.Double]), 
      Canvas_SetLeft
    );

    $.Method({Static:true , Public:true }, "SetTop", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.UIElement"), $.Double]), 
      Canvas_SetTop
    );

    $.Method({Static:true , Public:true }, "SetZIndex", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.UIElement"), $.Int32]), 
      Canvas_SetZIndex
    );

    $.Method({Static:true , Public:false}, "Top_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Canvas_Top_Changed
    );

    $.Method({Static:true , Public:false}, "ZIndex_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Canvas_ZIndex_Changed
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "LeftProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "TopProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "ZIndexProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function Canvas__cctor () {
      $thisType.LeftProperty = $T00()['Register']("Left", $T01().__Type__, $T02().__Type__, $S00().Construct(0, $T04()['New']($thisType, $thisType['Left_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Left_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.TopProperty = $T00()['Register']("Top", $T01().__Type__, $T02().__Type__, $S00().Construct(0, $T04()['New']($thisType, $thisType['Top_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Top_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.ZIndexProperty = $T00()['Register']("ZIndex", $T05().__Type__, $T02().__Type__, $S00().Construct(0, $T04()['New']($thisType, $thisType['ZIndex_Changed'], function () { return JSIL.GetMethodInfo($thisType, "ZIndex_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Canvas__cctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.TextBlock */ 

(function TextBlock$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.TextAlignment)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.TextWrapping)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Nullable$b1.Of($asm00.Windows.UI.Text.TextDecorations))) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Control)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };

  function TextBlock__ctor () {
    $T07().prototype['_ctor'].call(this);
  };

  function TextBlock_CreateDomElement (parentRef, /* ref */ domElementWhereToPlaceChildren) {
    var obj = $T09()['CreateDomElementAndAppendIt']("div", parentRef, this);
    var obj2 = $T09()['GetDomElementStyleForModification'](obj);
    if (this['get_TextWrapping']() === $T05().NoWrap) {
      obj2.whiteSpace = "nowrap";
    } else {
      obj2.whiteSpace = "normal";
    }
    obj2.textAlign = "left";
    domElementWhereToPlaceChildren.set(obj);
    return obj;
  };

  function TextBlock_get_Text () {
    return $T01().$Cast(this['GetValue']($thisType.TextProperty));
  };

  function TextBlock_get_TextAlignment () {
    return $T04().$Cast(this['GetValue']($thisType.TextAlignmentProperty));
  };

  function TextBlock_get_TextDecorations () {
    return $T06().$Cast(this['GetValue']($thisType.TextDecorationsProperty));
  };

  function TextBlock_get_TextWrapping () {
    return $T05().$Cast(this['GetValue']($thisType.TextWrappingProperty));
  };

  function TextBlock_set_Text (value) {
    this['SetValue']($thisType.TextProperty, value);
  };

  function TextBlock_set_TextAlignment (value) {
    this['SetValue']($thisType.TextAlignmentProperty, value);
  };

  function TextBlock_set_TextDecorations (value) {
    this['SetValue']($thisType.TextDecorationsProperty, value);
  };

  function TextBlock_set_TextWrapping (value) {
    this['SetValue']($thisType.TextWrappingProperty, value);
  };

  function TextBlock_Text_Changed (d, e) {
    var textBlock = $thisType.$Cast(d);
    var text = $T01().$As(e['get_NewValue']());
    if (!((text !== null) && !(text == $T01().Empty))) {
      text = "\xa0";
    }
    if ($T0C()['IsElementInVisualTree'](textBlock)) {
      $T09()['SetContentString'](textBlock, text, false);
    }
  };

  function TextBlock_TextAlignment_Changed (d, e) {
    var textBlock = $thisType.$Cast(d);
    if ($T04().$Is(e['get_NewValue']())) {
      var textAlignment = $T04().$Cast(e['get_NewValue']());
    } else {
      textAlignment = $T04().Left;
    }
    if ($T0C()['IsElementInVisualTree'](textBlock)) {
      switch (textAlignment['valueOf']()) {
        case 0: 
          $T09()['GetFrameworkElementOuterStyleForModification'](textBlock).textAlign = "center";
          break;

        case 1: 
          $T09()['GetFrameworkElementOuterStyleForModification'](textBlock).textAlign = "left";
          break;

        case 2: 
          $T09()['GetFrameworkElementOuterStyleForModification'](textBlock).textAlign = "right";
          break;

        case 3: 
          $T09()['GetFrameworkElementOuterStyleForModification'](textBlock).textAlign = "justify";
          break;

      }
    }
  };

  function TextBlock_TextDecorations_Changed (d, e) {
    var textBlock = $thisType.$Cast(d);
    var textDecorations = $T06().$Cast(e['get_NewValue']());
    if ($T0C()['IsElementInVisualTree'](textBlock)) {
      if (textDecorations !== null) {

        var $label0 = 0;
      $labelgroup0: 
        while (true) {
          switch ($label0) {
            case 0: /* $entry0 */ 
              switch ((JSIL.Nullable_Value(textDecorations))['valueOf']()) {
                case 2: 
                  var text = "overline";
                  break $labelgroup0;

                case 3: 
                  text = "line-through";
                  break $labelgroup0;

                case 4: 
                  text = "underline";
                  break $labelgroup0;

              }
              text = "";
              break $labelgroup0;

          }
        }
      } else {
        text = "";
      }
      $T09()['GetDomElementStyleForModification'](textBlock.UIElement$INTERNAL_OptionalSpecifyDomElementConcernedByFocus$value).textDecoration = text;
    }
  };

  function TextBlock_TextWrapping_Changed (d, e) {
    var textBlock = $thisType.$Cast(d);
    var textWrapping = $T05().$Cast(e['get_NewValue']());
    if ($T0C()['IsElementInVisualTree'](textBlock)) {
      switch (textWrapping['valueOf']()) {
        case 1: 
          $T09()['GetFrameworkElementOuterStyleForModification'](textBlock).whiteSpace = "nowrap";
          break;

        case 2: 
          $T09()['GetFrameworkElementOuterStyleForModification'](textBlock).whiteSpace = "normal";
          break;

      }
    }
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.Control"), 
      Name: "Windows.UI.Xaml.Controls.TextBlock", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      TextBlock__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CreateDomElement", 
      new JSIL.MethodSignature($.Object, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]), 
      TextBlock_CreateDomElement
    );

    $.Method({Static:false, Public:true }, "get_Text", 
      JSIL.MethodSignature.Return($.String), 
      TextBlock_get_Text
    );

    $.Method({Static:false, Public:true }, "get_TextAlignment", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.TextAlignment")), 
      TextBlock_get_TextAlignment
    );

    $.Method({Static:false, Public:true }, "get_TextDecorations", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Nullable`1", [$asm00.TypeRef("Windows.UI.Text.TextDecorations")])), 
      TextBlock_get_TextDecorations
    );

    $.Method({Static:false, Public:true }, "get_TextWrapping", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.TextWrapping")), 
      TextBlock_get_TextWrapping
    );

    $.Method({Static:false, Public:true }, "set_Text", 
      JSIL.MethodSignature.Action($.String), 
      TextBlock_set_Text
    );

    $.Method({Static:false, Public:true }, "set_TextAlignment", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.TextAlignment")), 
      TextBlock_set_TextAlignment
    );

    $.Method({Static:false, Public:true }, "set_TextDecorations", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Nullable`1", [$asm00.TypeRef("Windows.UI.Text.TextDecorations")])), 
      TextBlock_set_TextDecorations
    );

    $.Method({Static:false, Public:true }, "set_TextWrapping", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.TextWrapping")), 
      TextBlock_set_TextWrapping
    );

    $.Method({Static:true , Public:false}, "Text_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      TextBlock_Text_Changed
    );

    $.Method({Static:true , Public:false}, "TextAlignment_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      TextBlock_TextAlignment_Changed
    );

    $.Method({Static:true , Public:false}, "TextDecorations_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      TextBlock_TextDecorations_Changed
    );

    $.Method({Static:true , Public:false}, "TextWrapping_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      TextBlock_TextWrapping_Changed
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "TextProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "TextAlignmentProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "TextWrappingProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "TextDecorationsProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function TextBlock__cctor () {
      $thisType.TextProperty = $T00()['Register']("Text", $T01().__Type__, $thisType.__Type__, $S00().Construct($T01().Empty, $T03()['New']($thisType, $thisType['Text_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Text_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.TextAlignmentProperty = $T00()['Register']("TextAlignment", $T04().__Type__, $thisType.__Type__, $S00().Construct($T04().Left, $T03()['New']($thisType, $thisType['TextAlignment_Changed'], function () { return JSIL.GetMethodInfo($thisType, "TextAlignment_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.TextWrappingProperty = $T00()['Register']("TextWrapping", $T05().__Type__, $thisType.__Type__, $S00().Construct($T05().NoWrap, $T03()['New']($thisType, $thisType['TextWrapping_Changed'], function () { return JSIL.GetMethodInfo($thisType, "TextWrapping_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.TextDecorationsProperty = $T00()['Register']("TextDecorations", $T06().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['TextDecorations_Changed'], function () { return JSIL.GetMethodInfo($thisType, "TextDecorations_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      TextBlock__cctor
    );

    $.Property({Static:false, Public:true }, "Text", $.String);

    $.Property({Static:false, Public:true }, "TextAlignment", $asm00.TypeRef("Windows.UI.Xaml.TextAlignment"));

    $.Property({Static:false, Public:true }, "TextWrapping", $asm00.TypeRef("Windows.UI.Xaml.TextWrapping"));

    $.Property({Static:false, Public:true }, "TextDecorations", $asm06.TypeRef("System.Nullable`1", [$asm00.TypeRef("Windows.UI.Text.TextDecorations")]));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.Border */ 

(function Border$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.Brush)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.Thickness)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.CornerRadius)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.SolidColorBrush)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm00.Windows.UI.Color)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm06.System.NotSupportedException)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize(System.Array.Of($asm06.System.Object))) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.NotSupportedException"), [$asm06.TypeRef("System.String")]))) ();
  };

  function Border__ctor () {
    $T07().prototype['_ctor'].call(this);
  };

  function Border_Background_Changed (d, e) {
    var border = $thisType.$Cast(d);
    var brush = $T04().$Cast(e['get_NewValue']());
    if ($T0A()['IsElementInVisualTree'](border)) {
      if ($T0B().$Is(brush)) {
        $T0C()['GetFrameworkElementOuterStyleForModification'](border).backgroundColor = (($T0B().$Cast(brush))['get_Color']()['MemberwiseClone']())['INTERNAL_ToHtmlString']();
      } else {
        if (brush !== null) {
          throw $S01().Construct("The specified brush is not supported.");
        }
        $T0C()['GetFrameworkElementOuterStyleForModification'](border).backgroundColor = "";
      }
    }
  };

  function Border_BorderBrush_Changed (d, e) {
    var border = $thisType.$Cast(d);
    var brush = $T04().$Cast(e['get_NewValue']());
    if (!(!$T0A()['IsElementInVisualTree'](border) || !$T0B().$Is(brush))) {
      $T0C()['GetFrameworkElementOuterStyleForModification'](border).borderColor = (($T0B().$Cast(brush))['get_Color']()['MemberwiseClone']())['INTERNAL_ToHtmlString']();
    }
  };

  function Border_BorderThickness_Changed (d, e) {
    var border = $thisType.$Cast(d);
    var thickness = $T05().$Cast(e['get_NewValue']())['MemberwiseClone']();
    if ($T0A()['IsElementInVisualTree'](border)) {
      var frameworkElementOuterStyleForModification = $T0C()['GetFrameworkElementOuterStyleForModification'](border);
      frameworkElementOuterStyleForModification.borderStyle = "solid";
      frameworkElementOuterStyleForModification.borderWidth = (JSIL.ConcatString.apply(null, JSIL.Array.New($T0F(), [thickness['get_Top'](), "px ", thickness['get_Right'](), "px ", thickness['get_Bottom'](), "px ", thickness['get_Left'](), "px "])));
    }
  };

  function Border_Child_Changed (d, e) {
    var parent = $T01().$Cast(d);
    var child = $T01().$Cast(e['get_OldValue']());
    var child2 = $T01().$Cast(e['get_NewValue']());
    $T0A()['DetachVisualChildIfNotNull'](child, parent);
    $T0A()['AttachVisualChildIfNotAlreadyAttached'](child2, parent);
  };

  function Border_CornerRadius_Changed (d, e) {
    var border = $thisType.$Cast(d);
    var cornerRadius = $T06().$Cast(e['get_NewValue']())['MemberwiseClone']();
    if ($T0A()['IsElementInVisualTree'](border)) {
      var frameworkElementOuterStyleForModification = $T0C()['GetFrameworkElementOuterStyleForModification'](border);
      frameworkElementOuterStyleForModification.borderTopLeftRadius = (JSIL.ConcatString(cornerRadius['get_TopLeft'](), "px"));
      frameworkElementOuterStyleForModification.borderTopRightRadius = (JSIL.ConcatString(cornerRadius['get_TopRight'](), "px"));
      frameworkElementOuterStyleForModification.borderBottomRightRadius = (JSIL.ConcatString(cornerRadius['get_BottomRight'](), "px"));
      frameworkElementOuterStyleForModification.borderBottomLeftRadius = (JSIL.ConcatString(cornerRadius['get_BottomLeft'](), "px"));
    }
  };

  function Border_get_Background () {
    return $T04().$Cast(this['GetValue']($thisType.BackgroundProperty));
  };

  function Border_get_BorderBrush () {
    return $T04().$Cast(this['GetValue']($thisType.BorderBrushProperty));
  };

  function Border_get_BorderThickness () {
    return $T05().$Cast(this['GetValue']($thisType.BorderThicknessProperty));
  };

  function Border_get_Child () {
    return $T01().$Cast(this['GetValue']($thisType.ChildProperty));
  };

  function Border_get_CornerRadius () {
    return $T06().$Cast(this['GetValue']($thisType.CornerRadiusProperty));
  };

  function Border_get_Padding () {
    return $T05().$Cast(this['GetValue']($thisType.PaddingProperty));
  };

  function Border_Padding_Changed (d, e) {
    var border = $thisType.$Cast(d);
    var thickness = $T05().$Cast(e['get_NewValue']())['MemberwiseClone']();
    if ($T0A()['IsElementInVisualTree'](border)) {
      var iNTERNAL_InnerDomElement = border.UIElement$INTERNAL_InnerDomElement$value;
      var obj = $T0C()['GetDomElementStyleForModification'](iNTERNAL_InnerDomElement);
      obj.boxSizing = "border-box";
      obj.paddingLeft = (JSIL.ConcatString(thickness['get_Left'](), "px"));
      obj.paddingTop = (JSIL.ConcatString(thickness['get_Top'](), "px"));
      obj.paddingRight = (JSIL.ConcatString(thickness['get_Right'](), "px"));
      obj.paddingBottom = (JSIL.ConcatString(thickness['get_Bottom'](), "px"));
    }
  };

  function Border_set_Background (value) {
    this['SetValue']($thisType.BackgroundProperty, value);
  };

  function Border_set_BorderBrush (value) {
    this['SetValue']($thisType.BorderBrushProperty, value);
  };

  function Border_set_BorderThickness (value) {
    this['SetValue']($thisType.BorderThicknessProperty, value);
  };

  function Border_set_Child (value) {
    this['SetValue']($thisType.ChildProperty, value);
  };

  function Border_set_CornerRadius (value) {
    this['SetValue']($thisType.CornerRadiusProperty, value);
  };

  function Border_set_Padding (value) {
    this['SetValue']($thisType.PaddingProperty, value);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.FrameworkElement"), 
      Name: "Windows.UI.Xaml.Controls.Border", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Border__ctor
    );

    $.Method({Static:true , Public:false}, "Background_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Border_Background_Changed
    );

    $.Method({Static:true , Public:false}, "BorderBrush_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Border_BorderBrush_Changed
    );

    $.Method({Static:true , Public:false}, "BorderThickness_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Border_BorderThickness_Changed
    );

    $.Method({Static:true , Public:false}, "Child_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Border_Child_Changed
    );

    $.Method({Static:true , Public:false}, "CornerRadius_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Border_CornerRadius_Changed
    );

    $.Method({Static:false, Public:true }, "get_Background", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      Border_get_Background
    );

    $.Method({Static:false, Public:true }, "get_BorderBrush", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      Border_get_BorderBrush
    );

    $.Method({Static:false, Public:true }, "get_BorderThickness", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Thickness")), 
      Border_get_BorderThickness
    );

    $.Method({Static:false, Public:true }, "get_Child", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.UIElement")), 
      Border_get_Child
    );

    $.Method({Static:false, Public:true }, "get_CornerRadius", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.CornerRadius")), 
      Border_get_CornerRadius
    );

    $.Method({Static:false, Public:true }, "get_Padding", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Thickness")), 
      Border_get_Padding
    );

    $.Method({Static:true , Public:false}, "Padding_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Border_Padding_Changed
    );

    $.Method({Static:false, Public:true }, "set_Background", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      Border_set_Background
    );

    $.Method({Static:false, Public:true }, "set_BorderBrush", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      Border_set_BorderBrush
    );

    $.Method({Static:false, Public:true }, "set_BorderThickness", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Thickness")), 
      Border_set_BorderThickness
    );

    $.Method({Static:false, Public:true }, "set_Child", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.UIElement")), 
      Border_set_Child
    );

    $.Method({Static:false, Public:true }, "set_CornerRadius", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.CornerRadius")), 
      Border_set_CornerRadius
    );

    $.Method({Static:false, Public:true }, "set_Padding", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Thickness")), 
      Border_set_Padding
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "ChildProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "BackgroundProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "BorderBrushProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "BorderThicknessProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "CornerRadiusProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "PaddingProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function Border__cctor () {
      $thisType.ChildProperty = $T00()['Register']("Child", $T01().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['Child_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Child_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.BackgroundProperty = $T00()['Register']("Background", $T04().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['Background_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Background_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.BorderBrushProperty = $T00()['Register']("BorderBrush", $T04().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['BorderBrush_Changed'], function () { return JSIL.GetMethodInfo($thisType, "BorderBrush_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.BorderThicknessProperty = $T00()['Register']("BorderThickness", $T05().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['BorderThickness_Changed'], function () { return JSIL.GetMethodInfo($thisType, "BorderThickness_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.CornerRadiusProperty = $T00()['Register']("CornerRadius", $T06().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['CornerRadius_Changed'], function () { return JSIL.GetMethodInfo($thisType, "CornerRadius_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.PaddingProperty = $T00()['Register']("Padding", $T05().__Type__, $thisType.__Type__, $S00().Construct(new ($T05())(), $T03()['New']($thisType, $thisType['Padding_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Padding_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Border__cctor
    );

    $.Property({Static:false, Public:true }, "Child", $asm00.TypeRef("Windows.UI.Xaml.UIElement"));

    $.Property({Static:false, Public:true }, "Background", $asm00.TypeRef("Windows.UI.Xaml.Media.Brush"));

    $.Property({Static:false, Public:true }, "BorderBrush", $asm00.TypeRef("Windows.UI.Xaml.Media.Brush"));

    $.Property({Static:false, Public:true }, "BorderThickness", $asm00.TypeRef("Windows.UI.Xaml.Thickness"));

    $.Property({Static:false, Public:true }, "CornerRadius", $asm00.TypeRef("Windows.UI.Xaml.CornerRadius"));

    $.Property({Static:false, Public:true }, "Padding", $asm00.TypeRef("Windows.UI.Xaml.Thickness"));

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm03.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Child"]; });

})();

/* class Windows.UI.Xaml.Controls.UserControl */ 

(function UserControl$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm06.System.String, $asm06.System.Object))) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Control)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.System.ArgumentException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("System.String"), $asm06.TypeRef("System.Object")]), null))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.ArgumentException"), [$asm06.TypeRef("System.String")]))) ();
  };

  function UserControl__ctor () {
    this._nameScopeDictionary = $S01().Construct();
    $T05().prototype['_ctor'].call(this);
  };

  function UserControl_Content_Changed (d, e) {
    var parent = $T01().$Cast(d);
    var child = $T01().$Cast(e['get_OldValue']());
    var child2 = $T01().$Cast(e['get_NewValue']());
    $T08()['DetachVisualChildIfNotNull'](child, parent);
    $T08()['AttachVisualChildIfNotAlreadyAttached'](child2, parent);
  };

  function UserControl_FindName (name) {
    if ((this._nameScopeDictionary)['ContainsKey'](name)) {
      var result = (this._nameScopeDictionary)['get_Item'](name);
    } else {
      result = null;
    }
    return result;
  };

  function UserControl_get_Content () {
    return $T01().$Cast(this['GetValue']($thisType.ContentProperty));
  };

  function UserControl_RegisterName (name, scopedElement) {
    if (!(!(this._nameScopeDictionary)['ContainsKey'](name) || ((this._nameScopeDictionary)['get_Item'](name) === scopedElement))) {
      throw $S02().Construct($T09()['Format']("Cannot register duplicate name '{0}' in this scope.", name));
    }
    (this._nameScopeDictionary)['set_Item'](name, scopedElement);
  };

  function UserControl_set_Content (value) {
    this['SetValue']($thisType.ContentProperty, value);
  };

  function UserControl_UnregisterName (name) {
    if (!(this._nameScopeDictionary)['ContainsKey'](name)) {
      throw $S02().Construct($T09()['Format']("Name '{0}' was not found.", name));
    }
    (this._nameScopeDictionary)['Remove'](name);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.Control"), 
      Name: "Windows.UI.Xaml.Controls.UserControl", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      UserControl__ctor
    );

    $.Method({Static:true , Public:false}, "Content_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      UserControl_Content_Changed
    );

    $.Method({Static:false, Public:true , Virtual:true }, "FindName", 
      new JSIL.MethodSignature($.Object, [$.String]), 
      UserControl_FindName
    );

    $.Method({Static:false, Public:true }, "get_Content", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.UIElement")), 
      UserControl_get_Content
    );

    $.Method({Static:false, Public:true , Virtual:true }, "RegisterName", 
      new JSIL.MethodSignature(null, [$.String, $.Object]), 
      UserControl_RegisterName
    );

    $.Method({Static:false, Public:true }, "set_Content", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.UIElement")), 
      UserControl_set_Content
    );

    $.Method({Static:false, Public:true , Virtual:true }, "UnregisterName", 
      JSIL.MethodSignature.Action($.String), 
      UserControl_UnregisterName
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "ContentProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:false, Public:false}, "_nameScopeDictionary", $asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$.String, $.Object])); 
    function UserControl__cctor () {
      $thisType.ContentProperty = $T00()['Register']("Content", $T01().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['Content_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Content_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      UserControl__cctor
    );

    $.Property({Static:false, Public:true }, "Content", $asm00.TypeRef("Windows.UI.Xaml.UIElement"));

    $.ImplementInterfaces(
      /* 0 */ $asm00.TypeRef("Windows.UI.Xaml.Markup.INameScope")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm03.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Content"]; });

})();

/* class Windows.UI.Xaml.Controls.Page */ 

(function Page$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.UserControl)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.Navigation.NavigationEventArgs)) ();
  };

  function Page__ctor () {
    $T00().prototype['_ctor'].call(this);
  };

  function Page_CreateDomElement (parentRef, /* ref */ domElementWhereToPlaceChildren) {
    var obj = $T02()['CreateDomElementAndAppendIt']("div", parentRef, this);
    var domElementStyleForModification = $T02()['GetDomElementStyleForModification'](obj);
    domElementWhereToPlaceChildren.set(obj);
    domElementStyleForModification.width = "100%";
    domElementStyleForModification.height = "100%";
    return obj;
  };

  function Page_OnNavigatedTo (e) {
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.UserControl"), 
      Name: "Windows.UI.Xaml.Controls.Page", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Page__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CreateDomElement", 
      new JSIL.MethodSignature($.Object, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]), 
      Page_CreateDomElement
    );

    $.Method({Static:false, Public:false, Virtual:true }, "OnNavigatedTo", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Navigation.NavigationEventArgs")), 
      Page_OnNavigatedTo
    );

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.ApplicationModel.Activation.LaunchActivatedEventArgs */ 

(function LaunchActivatedEventArgs$Members () {
  var $, $thisType;
  function LaunchActivatedEventArgs__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.ApplicationModel.Activation.LaunchActivatedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      LaunchActivatedEventArgs__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Navigation.NavigationEventArgs */ 

(function NavigationEventArgs$Members () {
  var $, $thisType;
  function NavigationEventArgs__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.Navigation.NavigationEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      NavigationEventArgs__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Controls.WrapPanel */ 

(function WrapPanel$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Orientation)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Controls.Panel)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.NotSupportedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.NotSupportedException"), [$asm06.TypeRef("System.String")]))) ();
  };

  function WrapPanel__ctor () {
    $T04().prototype['_ctor'].call(this);
  };

  function WrapPanel_CreateDomChildWrapper (parentRef, /* ref */ domElementWhereToPlaceChild) {
    if (this['get_Orientation']() === $T01().Horizontal) {
      var obj = $T06()['CreateDomElementAndAppendIt']("div", parentRef, this);
      var domElementStyleForModification = $T06()['GetDomElementStyleForModification'](obj);
      domElementStyleForModification.display = "inline-block";
      domElementWhereToPlaceChild.set(obj);
      var result = obj;
    } else {
      domElementWhereToPlaceChild.set(null);
      result = null;
    }
    return result;
  };

  function WrapPanel_CreateDomElement (parentRef, /* ref */ domElementWhereToPlaceChildren) {
    var obj = $T06()['CreateDomElementAndAppendIt']("div", parentRef, this);
    $T06()['GetDomElementStyleForModification'](obj).overflow = "auto";
    domElementWhereToPlaceChildren.set(obj);
    return obj;
  };

  function WrapPanel_get_Orientation () {
    return $T01().$Cast(this['GetValue']($thisType.OrientationProperty));
  };

  function WrapPanel_Orientation_Changed (d, e) {
    var wrapPanel = $thisType.$Cast(d);
    var orientation = $T01().$Cast(e['get_NewValue']());
    if ($T09()['IsElementInVisualTree'](wrapPanel)) {
      if (orientation === $T01().Vertical) {
        throw $S01().Construct("Vertical orientation is not yet supported for the WrapPanel");
      }
      $T06()['GetFrameworkElementOuterStyleForModification'](wrapPanel).textAlign = "left";
    }
  };

  function WrapPanel_set_Orientation (value) {
    this['SetValue']($thisType.OrientationProperty, value);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Controls.Panel"), 
      Name: "Windows.UI.Xaml.Controls.WrapPanel", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      WrapPanel__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CreateDomChildWrapper", 
      new JSIL.MethodSignature($.Object, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]), 
      WrapPanel_CreateDomChildWrapper
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CreateDomElement", 
      new JSIL.MethodSignature($.Object, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]), 
      WrapPanel_CreateDomElement
    );

    $.Method({Static:false, Public:true }, "get_Orientation", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Controls.Orientation")), 
      WrapPanel_get_Orientation
    );

    $.Method({Static:true , Public:false}, "Orientation_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      WrapPanel_Orientation_Changed
    );

    $.Method({Static:false, Public:true }, "set_Orientation", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Controls.Orientation")), 
      WrapPanel_set_Orientation
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "OrientationProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function WrapPanel__cctor () {
      $thisType.OrientationProperty = $T00()['Register']("Orientation", $T01().__Type__, $thisType.__Type__, $S00().Construct($T01().Horizontal, $T03()['New']($thisType, $thisType['Orientation_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Orientation_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      WrapPanel__cctor
    );

    $.Property({Static:false, Public:true }, "Orientation", $asm00.TypeRef("Windows.UI.Xaml.Controls.Orientation"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Data.BindingBase */ 

(function BindingBase$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm03.System.Windows.Markup.MarkupExtension)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.IServiceProvider)) ();
  };

  function BindingBase__ctor () {
    $T00().prototype['_ctor'].call(this);
  };

  function BindingBase_ProvideValue (serviceProvider) {
    return this;
  };

  JSIL.MakeType({
      BaseType: $asm03.TypeRef("System.Windows.Markup.MarkupExtension"), 
      Name: "Windows.UI.Xaml.Data.BindingBase", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      BindingBase__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "ProvideValue", 
      new JSIL.MethodSignature($.Object, [$asm06.TypeRef("System.IServiceProvider")]), 
      BindingBase_ProvideValue
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Data.Binding */ 

(function Binding$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.BindingMode)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.BindingBase)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyPath)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IValueConverter)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.RelativeSource)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.Data.Binding"), [$asm06.TypeRef("System.String")]))) ();
  };

  function Binding__ctor$00 () {
    this._converterParameter = null;
    this._mode = $T00().OneWay;
    this._wasModeSetByUserRatherThanDefaultValue = false;
    $T01().prototype['_ctor'].call(this);
  };

  function Binding__ctor$01 (path) {
    this._converterParameter = null;
    this._mode = $T00().OneWay;
    this._wasModeSetByUserRatherThanDefaultValue = false;
    $T01().prototype['_ctor'].call(this);
    if (!$T02()['IsNullOrWhiteSpace'](path)) {
      this['set_Path'](new ($T03())(path));
    }
  };

  function Binding_Clone () {
    var binding = $S00().Construct((this['get_Path']())['get_Path']());
    binding._converter = this._converter;
    binding._converterLanguage = this._converterLanguage;
    binding._converterParameter = this._converterParameter;
    binding._elementName = this._elementName;
    binding._mode = this._mode;
    binding._wasModeSetByUserRatherThanDefaultValue = this._wasModeSetByUserRatherThanDefaultValue;
    binding._relativeSource = this._relativeSource;
    binding._source = this._source;
    return binding;
  };

  function Binding_get_Converter () {
    return this._converter;
  };

  function Binding_get_ConverterLanguage () {
    return this._converterLanguage;
  };

  function Binding_get_ConverterParameter () {
    return this._converterParameter;
  };

  function Binding_get_ElementName () {
    return this._elementName;
  };

  function Binding_get_Mode () {
    return this._mode;
  };

  function Binding_get_Path () {
    if (this._path === null) {
      this._path = new ($T03())("");
    }
    return this._path;
  };

  function Binding_get_RelativeSource () {
    return this._relativeSource;
  };

  function Binding_get_Source () {
    return this._source;
  };

  function Binding_INTERNAL_WasModeSetByUserRatherThanDefaultValue () {
    return this._wasModeSetByUserRatherThanDefaultValue;
  };

  function Binding_set_Converter (value) {
    this._converter = value;
  };

  function Binding_set_ConverterLanguage (value) {
    this._converterLanguage = value;
  };

  function Binding_set_ConverterParameter (value) {
    this._converterParameter = value;
  };

  function Binding_set_ElementName (value) {
    this._elementName = value;
  };

  function Binding_set_Mode (value) {
    this._wasModeSetByUserRatherThanDefaultValue = true;
    this._mode = value;
  };

  function Binding_set_Path (value) {
    this._path = value;
    this.INTERNAL_ComputedPath = value;
  };

  function Binding_set_RelativeSource (value) {
    this._relativeSource = value;
  };

  function Binding_set_Source (value) {
    this._source = value;
    this.INTERNAL_ComputedSource = value;
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Data.BindingBase"), 
      Name: "Windows.UI.Xaml.Data.Binding", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Binding__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String), 
      Binding__ctor$01
    );

    $.Method({Static:false, Public:false}, "Clone", 
      JSIL.MethodSignature.Return($.Type), 
      Binding_Clone
    );

    $.Method({Static:false, Public:true }, "get_Converter", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Data.IValueConverter")), 
      Binding_get_Converter
    );

    $.Method({Static:false, Public:true }, "get_ConverterLanguage", 
      JSIL.MethodSignature.Return($.String), 
      Binding_get_ConverterLanguage
    );

    $.Method({Static:false, Public:true }, "get_ConverterParameter", 
      JSIL.MethodSignature.Return($.Object), 
      Binding_get_ConverterParameter
    );

    $.Method({Static:false, Public:true }, "get_ElementName", 
      JSIL.MethodSignature.Return($.String), 
      Binding_get_ElementName
    );

    $.Method({Static:false, Public:true }, "get_Mode", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Data.BindingMode")), 
      Binding_get_Mode
    );

    $.Method({Static:false, Public:true }, "get_Path", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.PropertyPath")), 
      Binding_get_Path
    );

    $.Method({Static:false, Public:true }, "get_RelativeSource", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Data.RelativeSource")), 
      Binding_get_RelativeSource
    );

    $.Method({Static:false, Public:true }, "get_Source", 
      JSIL.MethodSignature.Return($.Object), 
      Binding_get_Source
    );

    $.Method({Static:false, Public:false}, "INTERNAL_WasModeSetByUserRatherThanDefaultValue", 
      JSIL.MethodSignature.Return($.Boolean), 
      Binding_INTERNAL_WasModeSetByUserRatherThanDefaultValue
    );

    $.Method({Static:false, Public:true }, "set_Converter", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Data.IValueConverter")), 
      Binding_set_Converter
    );

    $.Method({Static:false, Public:true }, "set_ConverterLanguage", 
      JSIL.MethodSignature.Action($.String), 
      Binding_set_ConverterLanguage
    );

    $.Method({Static:false, Public:true }, "set_ConverterParameter", 
      JSIL.MethodSignature.Action($.Object), 
      Binding_set_ConverterParameter
    );

    $.Method({Static:false, Public:true }, "set_ElementName", 
      JSIL.MethodSignature.Action($.String), 
      Binding_set_ElementName
    );

    $.Method({Static:false, Public:true }, "set_Mode", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Data.BindingMode")), 
      Binding_set_Mode
    );

    $.Method({Static:false, Public:true }, "set_Path", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.PropertyPath")), 
      Binding_set_Path
    );

    $.Method({Static:false, Public:true }, "set_RelativeSource", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Data.RelativeSource")), 
      Binding_set_RelativeSource
    );

    $.Method({Static:false, Public:true }, "set_Source", 
      JSIL.MethodSignature.Action($.Object), 
      Binding_set_Source
    );

    $['Field']({Static:false, Public:false}, "_converter", $asm00.TypeRef("Windows.UI.Xaml.Data.IValueConverter")); 
    $['Field']({Static:false, Public:false}, "_converterLanguage", $.String); 
    $['Field']({Static:false, Public:false}, "_converterParameter", $.Object); 
    $['Field']({Static:false, Public:false}, "_elementName", $.String); 
    $['Field']({Static:false, Public:false}, "_mode", $asm00.TypeRef("Windows.UI.Xaml.Data.BindingMode")); 
    $['Field']({Static:false, Public:false}, "_wasModeSetByUserRatherThanDefaultValue", $.Boolean); 
    $['Field']({Static:false, Public:false}, "_path", $asm00.TypeRef("Windows.UI.Xaml.PropertyPath")); 
    $['Field']({Static:false, Public:false}, "INTERNAL_ComputedPath", $asm00.TypeRef("Windows.UI.Xaml.PropertyPath")); 
    $['Field']({Static:false, Public:false}, "_relativeSource", $asm00.TypeRef("Windows.UI.Xaml.Data.RelativeSource")); 
    $['Field']({Static:false, Public:false}, "_source", $.Object); 
    $['Field']({Static:false, Public:false}, "INTERNAL_ComputedSource", $.Object); 
    $.Property({Static:false, Public:true }, "Converter", $asm00.TypeRef("Windows.UI.Xaml.Data.IValueConverter"));

    $.Property({Static:false, Public:true }, "ConverterLanguage", $.String);

    $.Property({Static:false, Public:true }, "ConverterParameter", $.Object);

    $.Property({Static:false, Public:true }, "ElementName", $.String);

    $.Property({Static:false, Public:true }, "Mode", $asm00.TypeRef("Windows.UI.Xaml.Data.BindingMode"));

    $.Property({Static:false, Public:true }, "Path", $asm00.TypeRef("Windows.UI.Xaml.PropertyPath"));

    $.Property({Static:false, Public:true }, "RelativeSource", $asm00.TypeRef("Windows.UI.Xaml.Data.RelativeSource"));

    $.Property({Static:false, Public:true }, "Source", $.Object);

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm03.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Path"]; });

})();

/* class Windows.UI.Xaml.Data.Expression */ 

(function Expression$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_TypeToStringsToDependencyProperties)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Exception"), [$asm06.TypeRef("System.String")]))) ();
  };

  function Expression__ctor () {
  };

  function Expression_GetValue (propd) {
    throw $S00().Construct("Entered a method that should not be called.");
  };

  function Expression_OnAttached (target) {
    this.IsAttached = true;
    var propertyInTypeOrItsBaseTypes = $T03()['GetPropertyInTypeOrItsBaseTypes'](JSIL['GetType'](target), "DataContext");
    if (propertyInTypeOrItsBaseTypes !== null) {
      var value = target['GetValue'](propertyInTypeOrItsBaseTypes);
      this['OnDataContextChanged'](value);
    }
  };

  function Expression_OnDataContextChanged (newDataContext) {
  };

  function Expression_OnDetached (target) {
    this.IsAttached = false;
    this['OnDataContextChanged'](null);
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.Data.Expression", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Expression__ctor
    );

    $.Method({Static:false, Public:false, Virtual:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")]), 
      Expression_GetValue
    );

    $.Method({Static:false, Public:false, Virtual:true }, "OnAttached", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DependencyObject")), 
      Expression_OnAttached
    );

    $.Method({Static:false, Public:false, Virtual:true }, "OnDataContextChanged", 
      JSIL.MethodSignature.Action($.Object), 
      Expression_OnDataContextChanged
    );

    $.Method({Static:false, Public:false, Virtual:true }, "OnDetached", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DependencyObject")), 
      Expression_OnDetached
    );

    $['Field']({Static:false, Public:false}, "IsUpdating", $.Boolean); 
    $['Field']({Static:false, Public:false}, "IsAttached", $.Boolean); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* interface Windows.UI.Xaml.Data.IPropertyPathWalkerListener */ 

JSIL.MakeInterface(
  "Windows.UI.Xaml.Data.IPropertyPathWalkerListener", false, [], function ($) {
    $.Method({}, "IsBrokenChanged", JSIL.MethodSignature.Void);
    $.Method({}, "ValueChanged", JSIL.MethodSignature.Void);
  }, []);

/* class Windows.UI.Xaml.Data.BindingExpression */ 

(function BindingExpression$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.Binding)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.Expression)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyPath)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.PropertyPathWalker)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.BindingMode)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.RelativeSource)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.System.NotSupportedException)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IValueConverter)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm06.System.Type)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm00.DotNetForHtml5.Core.TypeFromStringConverters)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_PropertyStore)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm06.System.Action$b2.Of($asm06.System.Object, $asm00.Windows.UI.Xaml.Data.IDependencyPropertyChangedEventArgs))) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IIsAttachedMonitor)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IPropertyChangedListener)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IDependencyPropertyChangedEventArgs)) ();
  };
  var $T16 = function () {
    return ($T16 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T17 = function () {
    return ($T17 = JSIL.Memoize($asm06.System.Console)) ();
  };
  var $T18 = function () {
    return ($T18 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.PropertyPathNode)) ();
  };
  var $T19 = function () {
    return ($T19 = JSIL.Memoize($asm06.System.Reflection.PropertyInfo)) ();
  };
  var $T1A = function () {
    return ($T1A = JSIL.Memoize(System.Array.Of($asm06.System.Type))) ();
  };
  var $T1B = function () {
    return ($T1B = JSIL.Memoize($asm06.System.Int16)) ();
  };
  var $T1C = function () {
    return ($T1C = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T1D = function () {
    return ($T1D = JSIL.Memoize($asm06.System.Int64)) ();
  };
  var $T1E = function () {
    return ($T1E = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T1F = function () {
    return ($T1F = JSIL.Memoize($asm08.System.Linq.Enumerable)) ();
  };
  var $T20 = function () {
    return ($T20 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerable$b1.Of($asm06.System.Type))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.NotSupportedException"), [$asm06.TypeRef("System.String")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("System.Boolean"), [$asm06.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), "!!0"], ["TSource"]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IValueConverter.Convert)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IIsAttachedMonitor.Detach)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IPropertyChangedListener.Detach)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IValueConverter.ConvertBack)) ();
  };

  function BindingExpression__ctor (binding, target, property) {
    $T03().prototype['_ctor'].call(this);
    this.ParentBinding = binding;
    this.Target = target;
    this.Property = property;
    this._isDataContextBound = !((binding['get_ElementName']() !== null) || 
      (binding['get_Source']() !== null)) && 
    (binding['get_RelativeSource']() === null);
    if (this._isDataContextBound) {
      this.ParentBinding.INTERNAL_ComputedSource = target;
      var text = ((this.ParentBinding)['get_Path']())['get_Path']();
      if (!($T04()['IsNullOrWhiteSpace'](text) || ((text = (text.trim())) == "."))) {
        this.ParentBinding.INTERNAL_ComputedPath = new ($T06())(JSIL.ConcatString("DataContext.", text));
      } else {
        this.ParentBinding.INTERNAL_ComputedPath = new ($T06())("DataContext");
      }
      this._isDataContextBound = false;
    }
    var propertyPathWalker = this.PropertyPathWalker = new ($T07())((binding.INTERNAL_ComputedPath)['get_Path'](), this._isDataContextBound);
    if (binding['get_Mode']() !== $T08().OneTime) {
      propertyPathWalker['Listen'](this);
    }
  };

  function BindingExpression_FindSource () {
    if (this.ParentBinding.INTERNAL_ComputedSource !== null) {
      var result = this.ParentBinding.INTERNAL_ComputedSource;
    } else {
      if ((this.ParentBinding)['get_ElementName']() !== null) {
        if ($T09().$Is(this.Target)) {
          result = ($T09().$Cast(this.Target))['FindName']((this.ParentBinding)['get_ElementName']());
          return result;
        }
      } else if ((this.ParentBinding)['get_RelativeSource']() !== null) {
        var relativeSource = (this.ParentBinding)['get_RelativeSource']();
        switch ((relativeSource['get_Mode']())['valueOf']()) {
          case 1: 
            throw $S00().Construct("TemplatedParent is not supported at the moment");

          case 2: 
            result = this.Target;
            return result;

        }
      }
      result = this._DataContext;
    }
    return result;
  };

  function BindingExpression_GetValue (property) {
    if ((this.PropertyPathWalker)['get_IsPathBroken']()) {
      var result = (
        (property.DependencyProperty$TypeMetadata$value !== null)
           ? property.DependencyProperty$TypeMetadata$value.PropertyMetadata$DefaultValue$value
           : null)
      ;
    } else {
      var obj = this.PropertyPathWalker.ValueInternal;
      if ((this.ParentBinding)['get_Converter']() !== null) {
        obj = $IM00().Call((this.ParentBinding)['get_Converter'](), null, 
          obj, 
          property.DependencyProperty$PropertyType$value, 
          (this.ParentBinding)['get_ConverterParameter'](), 
          (this.ParentBinding)['get_ConverterLanguage']()
        );
      }
      if (!(($T04().$As(obj) === null) || !$T0E()['op_Inequality'](property.DependencyProperty$PropertyType$value, $T04().__Type__))) {
        obj = $T0F()['ConvertFromInvariantString'](property.DependencyProperty$PropertyType$value, $T04().$Cast(obj));
      }
      result = obj;
    }
    return result;
  };

  function BindingExpression_IsBrokenChanged () {
    this['Refresh']();
  };

  function BindingExpression_OnAttached (target) {
    if (!this.IsAttached) {
      $T03().prototype['OnAttached'].call(this, target);
      var source = this['FindSource']();
      (this.PropertyPathWalker)['Update'](source);
      if ((this.ParentBinding)['get_Mode']() === $T08().TwoWay) {
        this.PropertyListener = $T10()['ListenToChanged'](this.Target, this.Property, $T11()['New'](this, $thisType.prototype['UpdateSourceCallback'], function () { return JSIL.GetMethodInfo($thisType, "UpdateSourceCallback", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm00.Windows.UI.Xaml.Data.IDependencyPropertyChangedEventArgs]), false); }));
      }
    }
  };

  function BindingExpression_OnDataContextChanged (newDataContext) {
    if (this._DataContext !== newDataContext) {
      this._DataContext = newDataContext;
      if (this._isDataContextBound) {
        (this.PropertyPathWalker)['Update'](newDataContext);
        if ((this.ParentBinding)['get_Mode']() === $T08().OneTime) {
          this['Refresh']();
        }
        if (this._SourceAvailableMonitor !== null) {
          $IM01().Call(this._SourceAvailableMonitor, null);
        }
      }
    }
  };

  function BindingExpression_OnDetached (element) {
    if (this.IsAttached) {
      $T03().prototype['OnDetached'].call(this, element);
      if (this.PropertyListener !== null) {
        $IM02().Call(this.PropertyListener, null);
        this.PropertyListener = null;
      }
      (this.PropertyPathWalker)['Update'](null);
      this.Target = null;
    }
  };

  function BindingExpression_OnSourceAvailable () {
    var obj = this['FindSource']();
    if (obj !== null) {
      (this.PropertyPathWalker)['Update'](obj);
    }
    (this.Target)['SetValue'](this.Property, this);
  };

  function BindingExpression_Refresh () {
    if (this.IsAttached) {
      var isUpdating = this.IsUpdating;
      this.IsUpdating = true;
      (this.Target)['SetValue'](this.Property, this);
      this.IsUpdating = isUpdating;
    }
  };

  function BindingExpression_TryUpdateSourceObject (value) {
    if (!this.IsUpdating) {
      this['UpdateSourceObject'](value);
    }
  };

  function BindingExpression_UpdateSourceCallback (sender, args, $exception) {
    try {
      if (!this.IsUpdating) {
        this['UpdateSourceObject']((this.Target)['GetValue'](this.Property));
      }
    } catch ($exception) {
      var ex = $exception;
      $T17()['WriteLine'](JSIL.ConcatString("[BINDING] UpdateSource: ", ex['toString']()));
    }
  };

  function BindingExpression_UpdateSourceObject (value, $exception) {
    if (!(this.PropertyPathWalker)['get_IsPathBroken']()) {
      var propertyPathNode = $T18().$Cast(this.PropertyPathWalker.FinalNode);
      var isUpdating = this.IsUpdating;
      try {
        try {
          var obj = value;
          if ((this.ParentBinding)['get_Converter']() !== null) {
            if (propertyPathNode.DependencyProperty !== null) {
              obj = $IM03().Call((this.ParentBinding)['get_Converter'](), null, 
                value, 
                propertyPathNode.DependencyProperty.DependencyProperty$PropertyType$value, 
                (this.ParentBinding)['get_ConverterParameter'](), 
                (this.ParentBinding)['get_ConverterLanguage']()
              );
            } else if ($T19()['op_Inequality'](propertyPathNode.PropertyInfo, null)) {
              obj = $IM03().Call((this.ParentBinding)['get_Converter'](), null, 
                value, 
                (propertyPathNode.PropertyInfo)['get_PropertyType'](), 
                (this.ParentBinding)['get_ConverterParameter'](), 
                (this.ParentBinding)['get_ConverterLanguage']()
              );
            }
          }
          this.IsUpdating = true;
          var source = JSIL.Array.New($T0E(), [$T1B().__Type__, $T1C().__Type__, $T1D().__Type__, $T1E().__Type__]);
          if (!(!$T19()['op_Inequality'](propertyPathNode.PropertyInfo, null) || 
              !$S01().CallStatic($T1F(), "Contains$b1", [$asm06.System.Type], $T20().$Cast(source), (propertyPathNode.PropertyInfo)['get_PropertyType']()) || !$T04().$Is(obj))) {
            var propertyType = (propertyPathNode.PropertyInfo)['get_PropertyType']();
            if ($T0E()['op_Equality'](propertyType, $T1B().__Type__)) {
              obj = $T1B()['Parse']($T04().$Cast(obj));
            } else if ($T0E()['op_Equality'](propertyType, $T1C().__Type__)) {
              obj = $T1C()['Parse']($T04().$Cast(obj));
            } else if ($T0E()['op_Equality'](propertyType, $T1D().__Type__)) {
              obj = $T1D()['Parse']($T04().$Cast(obj));
            } else if ($T0E()['op_Equality'](propertyType, $T1E().__Type__)) {
              obj = $T1E()['Parse']($T04().$Cast(obj));
            }
          }
          propertyPathNode['SetValue'](obj);
        } catch ($exception) {
        }
      } finally {
        this.IsUpdating = isUpdating;
      }
    }
  };

  function BindingExpression_ValueChanged () {
    this['Refresh']();
  };

  function BindingExpression_Windows_UI_Xaml_Data_IPropertyPathWalkerListener_IsBrokenChanged () {
    this['IsBrokenChanged']();
  };

  function BindingExpression_Windows_UI_Xaml_Data_IPropertyPathWalkerListener_ValueChanged () {
    this['ValueChanged']();
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Data.Expression"), 
      Name: "Windows.UI.Xaml.Data.BindingExpression", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $asm00.TypeRef("Windows.UI.Xaml.Data.Binding"), $asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), 
          $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")
        ]), 
      BindingExpression__ctor
    );

    $.Method({Static:false, Public:false}, "FindSource", 
      JSIL.MethodSignature.Return($.Object), 
      BindingExpression_FindSource
    );

    $.Method({Static:false, Public:false, Virtual:true }, "GetValue", 
      new JSIL.MethodSignature($.Object, [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")]), 
      BindingExpression_GetValue
    );

    $.Method({Static:false, Public:false}, "IsBrokenChanged", 
      JSIL.MethodSignature.Void, 
      BindingExpression_IsBrokenChanged
    );

    $.Method({Static:false, Public:false, Virtual:true }, "OnAttached", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DependencyObject")), 
      BindingExpression_OnAttached
    );

    $.Method({Static:false, Public:false, Virtual:true }, "OnDataContextChanged", 
      JSIL.MethodSignature.Action($.Object), 
      BindingExpression_OnDataContextChanged
    );

    $.Method({Static:false, Public:false, Virtual:true }, "OnDetached", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DependencyObject")), 
      BindingExpression_OnDetached
    );

    $.Method({Static:false, Public:false}, "OnSourceAvailable", 
      JSIL.MethodSignature.Void, 
      BindingExpression_OnSourceAvailable
    );

    $.Method({Static:false, Public:false}, "Refresh", 
      JSIL.MethodSignature.Void, 
      BindingExpression_Refresh
    );

    $.Method({Static:false, Public:false}, "TryUpdateSourceObject", 
      JSIL.MethodSignature.Action($.Object), 
      BindingExpression_TryUpdateSourceObject
    );

    $.Method({Static:false, Public:false}, "UpdateSourceCallback", 
      new JSIL.MethodSignature(null, [$.Object, $asm00.TypeRef("Windows.UI.Xaml.Data.IDependencyPropertyChangedEventArgs")]), 
      BindingExpression_UpdateSourceCallback
    );

    $.Method({Static:false, Public:false}, "UpdateSourceObject", 
      JSIL.MethodSignature.Action($.Object), 
      BindingExpression_UpdateSourceObject
    );

    $.Method({Static:false, Public:false}, "ValueChanged", 
      JSIL.MethodSignature.Void, 
      BindingExpression_ValueChanged
    );

    $.Method({Static:false, Public:false, Virtual:true }, "Windows.UI.Xaml.Data.IPropertyPathWalkerListener.IsBrokenChanged", 
      JSIL.MethodSignature.Void, 
      BindingExpression_Windows_UI_Xaml_Data_IPropertyPathWalkerListener_IsBrokenChanged
    )
      .Overrides($asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathWalkerListener"), "IsBrokenChanged");

    $.Method({Static:false, Public:false, Virtual:true }, "Windows.UI.Xaml.Data.IPropertyPathWalkerListener.ValueChanged", 
      JSIL.MethodSignature.Void, 
      BindingExpression_Windows_UI_Xaml_Data_IPropertyPathWalkerListener_ValueChanged
    )
      .Overrides($asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathWalkerListener"), "ValueChanged");

    $['Field']({Static:false, Public:true }, "Property", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:false, Public:true }, "ParentBinding", $asm00.TypeRef("Windows.UI.Xaml.Data.Binding")); 
    $['Field']({Static:false, Public:true }, "Target", $asm00.TypeRef("Windows.UI.Xaml.DependencyObject")); 
    $['Field']({Static:false, Public:false}, "PropertyPathWalker", $asm00.TypeRef("Windows.UI.Xaml.Data.PropertyPathWalker")); 
    $['Field']({Static:false, Public:false}, "PropertyListener", $asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyChangedListener")); 
    $['Field']({Static:false, Public:false}, "_SourceAvailableMonitor", $asm00.TypeRef("Windows.UI.Xaml.Data.IIsAttachedMonitor")); 
    $['Field']({Static:false, Public:false}, "_isDataContextBound", $.Boolean); 
    $['Field']({Static:false, Public:false}, "_DataContext", $.Object); 
    $.ImplementInterfaces(
      /* 0 */ $asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathWalkerListener")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum Windows.UI.Xaml.Data.BindingMode */ 

JSIL.MakeEnum(
  {
    FullName: "Windows.UI.Xaml.Data.BindingMode", 
    BaseType: $asm06.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    OneWay: 1, 
    OneTime: 2, 
    TwoWay: 3, 
  }
);

/* interface Windows.UI.Xaml.Data.IDependencyPropertyChangedEventArgs */ 

JSIL.MakeInterface(
  "Windows.UI.Xaml.Data.IDependencyPropertyChangedEventArgs", false, [], function ($) {
    $.Method({}, "get_Property", JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")));
    $.Method({}, "get_OldValue", JSIL.MethodSignature.Return($.Object));
    $.Method({}, "get_NewValue", JSIL.MethodSignature.Return($.Object));
    $.Property({}, "Property");
    $.Property({}, "OldValue");
    $.Property({}, "NewValue");
  }, []);

/* delegate Windows.UI.Xaml.Data.Callback */ 

JSIL.MakeDelegate("Windows.UI.Xaml.Data.Callback", false, [], 
  JSIL.MethodSignature.Action($asm06.TypeRef("System.Boolean")));

/* interface Windows.UI.Xaml.Data.IIsAttachedMonitor */ 

JSIL.MakeInterface(
  "Windows.UI.Xaml.Data.IIsAttachedMonitor", false, [], function ($) {
    $.Method({}, "Detach", JSIL.MethodSignature.Void);
  }, []);

/* interface Windows.UI.Xaml.Data.IPropertyChangedListener */ 

JSIL.MakeInterface(
  "Windows.UI.Xaml.Data.IPropertyChangedListener", false, [], function ($) {
    $.Method({}, "get_Property", JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")));
    $.Method({}, "set_Property", JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")));
    $.Method({}, "OnPropertyChanged", new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.Data.IDependencyPropertyChangedEventArgs")]));
    $.Method({}, "Detach", JSIL.MethodSignature.Void);
    $.Property({}, "Property");
  }, []);

/* interface Windows.UI.Xaml.Data.IPropertyPathNode */ 

JSIL.MakeInterface(
  "Windows.UI.Xaml.Data.IPropertyPathNode", false, [], function ($) {
    $.Method({}, "get_Next", JSIL.MethodSignature.Return($.Type));
    $.Method({}, "set_Next", JSIL.MethodSignature.Action($.Type));
    $.Method({}, "get_Value", JSIL.MethodSignature.Return($.Object));
    $.Method({}, "get_IsBroken", JSIL.MethodSignature.Return($.Boolean));
    $.Method({}, "SetSource", JSIL.MethodSignature.Action($.Object));
    $.Method({}, "SetValue", JSIL.MethodSignature.Action($.Object));
    $.Method({}, "Listen", JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathNodeListener")));
    $.Method({}, "Unlisten", JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathNodeListener")));
    $.Property({}, "Next");
    $.Property({}, "Value");
    $.Property({}, "IsBroken");
  }, []);

/* interface Windows.UI.Xaml.Data.IPropertyPathNodeListener */ 

JSIL.MakeInterface(
  "Windows.UI.Xaml.Data.IPropertyPathNodeListener", false, [], function ($) {
    $.Method({}, "IsBrokenChanged", JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathNode")));
    $.Method({}, "ValueChanged", JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathNode")));
  }, []);

/* interface Windows.UI.Xaml.Data.IValueConverter */ 

JSIL.MakeInterface(
  "Windows.UI.Xaml.Data.IValueConverter", true, [], function ($) {
    $.Method({}, "Convert", new JSIL.MethodSignature($.Object, [
          $.Object, $asm06.TypeRef("System.Type"), 
          $.Object, $.String
        ]));
    $.Method({}, "ConvertBack", new JSIL.MethodSignature($.Object, [
          $.Object, $asm06.TypeRef("System.Type"), 
          $.Object, $.String
        ]));
  }, []);

/* class Windows.UI.Xaml.Data.PropertyChangedListener */ 

(function PropertyChangedListener$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_PropertyStorage)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Action$b2.Of($asm06.System.Object, $asm00.Windows.UI.Xaml.Data.IDependencyPropertyChangedEventArgs))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Collections.Generic.List$b1.Of($asm00.Windows.UI.Xaml.Data.IPropertyChangedListener))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IDependencyPropertyChangedEventArgs)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };

  function PropertyChangedListener__ctor (storage, sourceCallBack) {
    this._storage = storage;
    this._sourceCallBack = sourceCallBack;
  };

  function PropertyChangedListener_Detach () {
    (this._storage.INTERNAL_PropertyStorage$PropertyListeners$value)['Remove'](this);
  };

  function PropertyChangedListener_get_Property () {
    return this.PropertyChangedListener$Property$value;
  };

  function PropertyChangedListener_OnPropertyChanged (sender, args) {
    this._sourceCallBack(sender, args);
  };

  function PropertyChangedListener_set_Property (value) {
    this.PropertyChangedListener$Property$value = value;
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.Data.PropertyChangedListener", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_PropertyStorage"), $asm06.TypeRef("System.Action`2", [$.Object, $asm00.TypeRef("Windows.UI.Xaml.Data.IDependencyPropertyChangedEventArgs")])]), 
      PropertyChangedListener__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Detach", 
      JSIL.MethodSignature.Void, 
      PropertyChangedListener_Detach
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Property", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")), 
      PropertyChangedListener_get_Property
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "OnPropertyChanged", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.Data.IDependencyPropertyChangedEventArgs")]), 
      PropertyChangedListener_OnPropertyChanged
    );

    $.Method({Static:false, Public:true , Virtual:true }, "set_Property", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")), 
      PropertyChangedListener_set_Property
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $['Field']({Static:false, Public:false}, "_storage", $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_PropertyStorage")); 
    $['Field']({Static:false, Public:false}, "_sourceCallBack", $asm06.TypeRef("System.Action`2", [$.Object, $asm00.TypeRef("Windows.UI.Xaml.Data.IDependencyPropertyChangedEventArgs")])); 
    $['Field']({Static:false, Public:false}, "PropertyChangedListener$Property$value", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true , Virtual:true }, "Property", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"));

    $.ImplementInterfaces(
      /* 0 */ $asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyChangedListener")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Data.PropertyPathNode */ 

(function PropertyPathNode$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Reflection.PropertyInfo)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IPropertyPathNodeListener)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm01.System.ComponentModel.PropertyChangedEventArgs)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IPropertyPathNode)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm01.System.ComponentModel.INotifyPropertyChanged)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm01.System.ComponentModel.PropertyChangedEventHandler)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm01.System.ComponentModel.INotifyPropertyChanged.remove_PropertyChanged)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm01.System.ComponentModel.INotifyPropertyChanged.add_PropertyChanged)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IPropertyPathNode.SetSource)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IPropertyPathNodeListener.ValueChanged)) ();
  };
  var $IM04 = function () {
    return ($IM04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IPropertyPathNodeListener.IsBrokenChanged)) ();
  };

  function PropertyPathNode__ctor () {
  };

  function PropertyPathNode_CheckIsBroken () {
    return ((this['get_Source']() === null) || ($T01()['op_Equality'](this.PropertyInfo, null) && 
        (this.DependencyProperty === null)));
  };

  function PropertyPathNode_get_IsBroken () {
    return this._isBroken;
  };

  function PropertyPathNode_get_Next () {
    return this._next;
  };

  function PropertyPathNode_get_Source () {
    return this._source;
  };

  function PropertyPathNode_get_Value () {
    return this._value;
  };

  function PropertyPathNode_Listen (listener) {
    this._nodeListener = listener;
  };

  function PropertyPathNode_OnSourceChanged (oldSource, newSource) {
  };

  function PropertyPathNode_OnSourcePropertyChanged (o, e) {
  };

  function PropertyPathNode_set_Next (value) {
    this._next = value;
  };

  function PropertyPathNode_SetSource (value) {
    if (!((value !== null) && (value === this._source))) {
      var source = this._source;
      var notifyPropertyChanged = $T05().$As(source);
      if (notifyPropertyChanged !== null) {
        $IM00().Call(notifyPropertyChanged, null, $T06()['New'](this, this['OnSourcePropertyChanged'], function () { return JSIL.GetMethodInfo($thisType, "OnSourcePropertyChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm01.System.ComponentModel.PropertyChangedEventArgs]), false); }));
      }
      this._source = value;
      var notifyPropertyChanged2 = $T05().$As(this._source);
      if (notifyPropertyChanged2 !== null) {
        $IM01().Call(notifyPropertyChanged2, null, $T06()['New'](this, this['OnSourcePropertyChanged'], function () { return JSIL.GetMethodInfo($thisType, "OnSourcePropertyChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm01.System.ComponentModel.PropertyChangedEventArgs]), false); }));
      }
      this['OnSourceChanged'](source, this._source);
      this['UpdateValue']();
      if (this['get_Next']() !== null) {
        $IM02().Call(this['get_Next'](), null, this._value);
      }
    }
  };

  function PropertyPathNode_Unlisten (listener) {
    if (this._nodeListener === listener) {
      this._nodeListener = null;
    }
  };

  function PropertyPathNode_UpdateValueAndIsBroken (newValue, isBroken) {
    var flag = this._isBroken !== isBroken;
    var flag2 = this['get_Value']() !== newValue;
    this._isBroken = isBroken;
    this._value = newValue;
    if (flag2) {
      var nodeListener = this._nodeListener;
      if (nodeListener !== null) {
        $IM03().Call(nodeListener, null, this);
      }
    } else if (flag) {
      nodeListener = this._nodeListener;
      if (nodeListener !== null) {
        $IM04().Call(nodeListener, null, this);
      }
    }
  };

  function PropertyPathNode_Windows_UI_Xaml_Data_IPropertyPathNode_Listen (listener) {
    this['Listen'](listener);
  };

  function PropertyPathNode_Windows_UI_Xaml_Data_IPropertyPathNode_SetSource (source) {
    this['SetSource'](source);
  };

  function PropertyPathNode_Windows_UI_Xaml_Data_IPropertyPathNode_SetValue (value) {
    this['SetValue'](value);
  };

  function PropertyPathNode_Windows_UI_Xaml_Data_IPropertyPathNode_Unlisten (listener) {
    this['Unlisten'](listener);
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.Data.PropertyPathNode", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void, 
      PropertyPathNode__ctor
    );

    $.Method({Static:false, Public:false}, "CheckIsBroken", 
      JSIL.MethodSignature.Return($.Boolean), 
      PropertyPathNode_CheckIsBroken
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_IsBroken", 
      JSIL.MethodSignature.Return($.Boolean), 
      PropertyPathNode_get_IsBroken
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Next", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathNode")), 
      PropertyPathNode_get_Next
    );

    $.Method({Static:false, Public:true }, "get_Source", 
      JSIL.MethodSignature.Return($.Object), 
      PropertyPathNode_get_Source
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Value", 
      JSIL.MethodSignature.Return($.Object), 
      PropertyPathNode_get_Value
    );

    $.Method({Static:false, Public:false}, "Listen", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathNodeListener")), 
      PropertyPathNode_Listen
    );

    $.Method({Static:false, Public:false, Virtual:true }, "OnSourceChanged", 
      new JSIL.MethodSignature(null, [$.Object, $.Object]), 
      PropertyPathNode_OnSourceChanged
    );

    $.Method({Static:false, Public:false, Virtual:true }, "OnSourcePropertyChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm01.TypeRef("System.ComponentModel.PropertyChangedEventArgs")]), 
      PropertyPathNode_OnSourcePropertyChanged
    );

    $.Method({Static:false, Public:true , Virtual:true }, "set_Next", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathNode")), 
      PropertyPathNode_set_Next
    );

    $.Method({Static:false, Public:false}, "SetSource", 
      JSIL.MethodSignature.Action($.Object), 
      PropertyPathNode_SetSource
    );

    $.Method({Static:false, Public:false}, "Unlisten", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathNodeListener")), 
      PropertyPathNode_Unlisten
    );

    $.Method({Static:false, Public:false}, "UpdateValueAndIsBroken", 
      new JSIL.MethodSignature(null, [$.Object, $.Boolean]), 
      PropertyPathNode_UpdateValueAndIsBroken
    );

    $.Method({Static:false, Public:false, Virtual:true }, "Windows.UI.Xaml.Data.IPropertyPathNode.Listen", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathNodeListener")), 
      PropertyPathNode_Windows_UI_Xaml_Data_IPropertyPathNode_Listen
    )
      .Overrides($asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathNode"), "Listen");

    $.Method({Static:false, Public:false, Virtual:true }, "Windows.UI.Xaml.Data.IPropertyPathNode.SetSource", 
      JSIL.MethodSignature.Action($.Object), 
      PropertyPathNode_Windows_UI_Xaml_Data_IPropertyPathNode_SetSource
    )
      .Overrides($asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathNode"), "SetSource");

    $.Method({Static:false, Public:false, Virtual:true }, "Windows.UI.Xaml.Data.IPropertyPathNode.SetValue", 
      JSIL.MethodSignature.Action($.Object), 
      PropertyPathNode_Windows_UI_Xaml_Data_IPropertyPathNode_SetValue
    )
      .Overrides($asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathNode"), "SetValue");

    $.Method({Static:false, Public:false, Virtual:true }, "Windows.UI.Xaml.Data.IPropertyPathNode.Unlisten", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathNodeListener")), 
      PropertyPathNode_Windows_UI_Xaml_Data_IPropertyPathNode_Unlisten
    )
      .Overrides($asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathNode"), "Unlisten");

    $['Field']({Static:false, Public:true }, "_next", $asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathNode")); 
    $['Field']({Static:false, Public:false}, "_isBroken", $.Boolean); 
    $['Field']({Static:false, Public:false}, "_source", $.Object); 
    $['Field']({Static:false, Public:false}, "_value", $.Object); 
    $['Field']({Static:false, Public:false}, "DependencyProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:false, Public:false}, "PropertyInfo", $asm06.TypeRef("System.Reflection.PropertyInfo")); 
    $['Field']({Static:false, Public:false}, "_nodeListener", $asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathNodeListener")); 
    $.Property({Static:false, Public:true , Virtual:true }, "IsBroken", $.Boolean);

    $.Property({Static:false, Public:true }, "Source", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "Value", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "Next", $asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathNode"));

    $.ImplementInterfaces(
      /* 0 */ $asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathNode")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

JSIL.DeclareNamespace("DotNetForHtml5.Core.Windows");
JSIL.DeclareNamespace("DotNetForHtml5.Core.Windows.UI");
JSIL.DeclareNamespace("DotNetForHtml5.Core.Windows.UI.Xaml");
JSIL.DeclareNamespace("DotNetForHtml5.Core.Windows.UI.Xaml.Data");
/* enum DotNetForHtml5.Core.Windows.UI.Xaml.Data.PropertyNodeType */ 

JSIL.MakeEnum(
  {
    FullName: "DotNetForHtml5.Core.Windows.UI.Xaml.Data.PropertyNodeType", 
    BaseType: $asm06.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    None: 0, 
    AttachedProperty: 1, 
    Indexed: 2, 
    Property: 3, 
  }
);

/* class DotNetForHtml5.Core.Windows.UI.Xaml.Data.PropertyPathParser */ 

(function PropertyPathParser$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.DotNetForHtml5.Core.Windows.UI.Xaml.Data.PropertyNodeType)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Char)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.ArgumentException)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize(System.Array.Of($asm06.System.Char))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.ArgumentException"), [$asm06.TypeRef("System.String")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Exception"), [$asm06.TypeRef("System.String")]))) ();
  };

  function PropertyPathParser__ctor (path) {
    this.Path = path;
  };

  function PropertyPathParser_Step (/* ref */ typeName, /* ref */ propertyName, /* ref */ index) {
    var propertyNodeType = $T02().None;
    var text = this.Path;
    if ((text.length | 0) === 0) {
      typeName.set(null);
      propertyName.set(null);
      index.set(-1);
      var result = propertyNodeType;
    } else {
      if (((text[0])['charCodeAt'](0) | 0) === (("(")['charCodeAt'](0) | 0)) {
        propertyNodeType = $T02().AttachedProperty;
        var num = (text.indexOf(")"));
        if (num === -1) {
          throw $S00().Construct("Invalid property path. Attached property is missing the closing bracket");
        }
        var num2 = (text.indexOf("'"));
        var num3 = (text.indexOf("'"));
        if (num3 > 0) {
          num3 = ((num3 + 1) | 0);
          var num4 = (text.indexOf("'", ((num3 + 1) | 0)));
          if (num4 < 0) {
            throw $S01().Construct(("Invalid property path, Unclosed type name '" + text + "'."));
          }
          var num5 = (text.indexOf(".", num4));
          if (num5 < 0) {
            throw $S01().Construct(("Invalid properth path, No property indexer found '" + text + "'."));
          }
          num5 = ((num5 + 1) | 0);
        } else {
          num3 = 1;
          num4 = (text.indexOf(".", num3));
          if (num4 < 0) {
            throw $S01().Construct(("Invalid property path, No property indexer found on '" + text + "'."));
          }
          num5 = ((num4 + 1) | 0);
        }
        var num6 = num;
        typeName.set((text.substr(num3, ((num4 - num3) | 0))));
        propertyName.set((text.substr(num5, ((num6 - num5) | 0))));
        index.set(-1);
        if (!(((text.length | 0) <= ((num + 1) | 0)) || (((text[((num + 1) | 0)])['charCodeAt'](0) | 0) !== ((".")['charCodeAt'](0) | 0)))) {
          num = ((num + 1) | 0);
        }
        text = (text.substr(((num + 1) | 0)));
      } else if (((text[0])['charCodeAt'](0) | 0) === (("[")['charCodeAt'](0) | 0)) {
        propertyNodeType = $T02().Indexed;
        num = (text.indexOf("]"));
        typeName.set(null);
        propertyName.set(null);
        index.set($T01()['Parse'](text.substr(1, ((num - 1) | 0))));
        text = (text.substr(((num + 1) | 0)));
        if (((text[0])['charCodeAt'](0) | 0) === ((".")['charCodeAt'](0) | 0)) {
          text = (text.substr(1));
        }
      } else {
        propertyNodeType = $T02().Property;
        var anyOf = JSIL.Array.New($T03(), [".", "["]);
        num = (System.String.IndexOfAny(text, anyOf));
        if (num === -1) {
          propertyName.set(text);
          text = "";
        } else {
          propertyName.set((text.substr(0, num)));
          if (((text[num])['charCodeAt'](0) | 0) === ((".")['charCodeAt'](0) | 0)) {
            text = (text.substr(((num + 1) | 0)));
          } else {
            text = (text.substr(num));
          }
        }
        typeName.set(null);
        index.set(-1);
      }
      this.Path = text;
      result = propertyNodeType;
    }
    return result;
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "DotNetForHtml5.Core.Windows.UI.Xaml.Data.PropertyPathParser", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Action($.String), 
      PropertyPathParser__ctor
    );

    $.Method({Static:false, Public:false}, "Step", 
      new JSIL.MethodSignature($asm00.TypeRef("DotNetForHtml5.Core.Windows.UI.Xaml.Data.PropertyNodeType"), [
          $jsilcore.TypeRef("JSIL.Reference", [$.String]), $jsilcore.TypeRef("JSIL.Reference", [$.String]), 
          $jsilcore.TypeRef("JSIL.Reference", [$.Int32])
        ]), 
      PropertyPathParser_Step
    );

    $['Field']({Static:false, Public:false}, "Path", $.String); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Data.PropertyPathWalker */ 

(function PropertyPathWalker$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.DotNetForHtml5.Core.Windows.UI.Xaml.Data.PropertyNodeType)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.StandardPropertyPathNode)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.DotNetForHtml5.Core.Windows.UI.Xaml.Data.PropertyPathParser)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IPropertyPathNode)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.NotImplementedException)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IPropertyPathWalkerListener)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.Data.StandardPropertyPathNode"), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.Data.StandardPropertyPathNode"), [$asm06.TypeRef("System.String"), $asm06.TypeRef("System.String")]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.NotImplementedException"), [$asm06.TypeRef("System.String")]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IPropertyPathNode.set_Next)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IPropertyPathNode.get_Next)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IPropertyPathNode.Listen)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IPropertyPathNode.get_IsBroken)) ();
  };
  var $IM04 = function () {
    return ($IM04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IPropertyPathNode.SetSource)) ();
  };
  var $IM05 = function () {
    return ($IM05 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IPropertyPathNode.get_Value)) ();
  };
  var $IM06 = function () {
    return ($IM06 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IPropertyPathWalkerListener.IsBrokenChanged)) ();
  };
  var $IM07 = function () {
    return ($IM07 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IPropertyPathWalkerListener.ValueChanged)) ();
  };

  function PropertyPathWalker__ctor (path, isDatacontextBound) {
    var typeName = new JSIL.BoxedVariable(null);
    var propertyName = new JSIL.BoxedVariable(null);
    var num = new JSIL.BoxedVariable(0);
    var propertyNodeType = $asm00.DotNetForHtml5.Core.Windows.UI.Xaml.Data.PropertyNodeType.None;
    this.FirstNode = null;
    this.FinalNode = null;
    this.Path = path;
    this.IsDataContextBound = isDatacontextBound;
    if (!((path !== null) && !(path == "."))) {
      var standardPropertyPathNode = $S00().Construct();
      this.FirstNode = standardPropertyPathNode;
      this.FinalNode = standardPropertyPathNode;
    } else {

      for (var propertyPathParser = new ($T05())(path); (propertyNodeType = propertyPathParser['Step'](/* ref */ typeName, /* ref */ propertyName, /* ref */ num)) !== $T03().None; ) {
        switch (propertyNodeType['valueOf']()) {
          case 1: 
          case 3: 
            if (this.FinalNode === null) {
              this.FinalNode = $S01().Construct(typeName.get(), propertyName.get());
            } else {
              $IM00().Call(this.FinalNode, null, $S01().Construct(typeName.get(), propertyName.get()));
            }
            break;

          case 2: 
            throw $S02().Construct("Indexed properties are not supported yet.");

        }
        if (this.FirstNode === null) {
          this.FirstNode = this.FinalNode;
        }
        if ($IM01().Call(this.FinalNode, null) !== null) {
          this.FinalNode = $IM01().Call(this.FinalNode, null);
        }
      }
    }
    $IM02().Call(this.FinalNode, null, this);
  };

  function PropertyPathWalker_get_IsPathBroken () {
    var path = this.Path;
    if (!(!this.IsDataContextBound || ((path !== null) && 
          ((path.length | 0) >= 1)))) {
      var result = false;
    } else {

      for (var propertyPathNode = this.FirstNode; propertyPathNode !== null; propertyPathNode = $IM01().Call(propertyPathNode, null)) {
        if ($IM03().Call(propertyPathNode, null)) {
          result = true;
          return result;
        }
      }
      result = false;
    }
    return result;
  };

  function PropertyPathWalker_Listen (listener) {
    this._listener = listener;
  };

  function PropertyPathWalker_Unlisten (listener) {
    if (this._listener === listener) {
      this._listener = null;
    }
  };

  function PropertyPathWalker_Update (source) {
    this.Source = source;
    $IM04().Call(this.FirstNode, null, source);
  };

  function PropertyPathWalker_Windows_UI_Xaml_Data_IPropertyPathNodeListener_IsBrokenChanged (node) {
    this.ValueInternal = $IM05().Call(node, null);
    var listener = this._listener;
    if (listener !== null) {
      $IM06().Call(listener, null);
    }
  };

  function PropertyPathWalker_Windows_UI_Xaml_Data_IPropertyPathNodeListener_ValueChanged (node) {
    this.ValueInternal = $IM05().Call(node, null);
    var listener = this._listener;
    if (listener !== null) {
      $IM07().Call(listener, null);
    }
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.Data.PropertyPathWalker", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.Boolean]), 
      PropertyPathWalker__ctor
    );

    $.Method({Static:false, Public:false}, "get_IsPathBroken", 
      JSIL.MethodSignature.Return($.Boolean), 
      PropertyPathWalker_get_IsPathBroken
    );

    $.Method({Static:false, Public:false}, "Listen", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathWalkerListener")), 
      PropertyPathWalker_Listen
    );

    $.Method({Static:false, Public:false}, "Unlisten", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathWalkerListener")), 
      PropertyPathWalker_Unlisten
    );

    $.Method({Static:false, Public:false}, "Update", 
      JSIL.MethodSignature.Action($.Object), 
      PropertyPathWalker_Update
    );

    $.Method({Static:false, Public:false, Virtual:true }, "Windows.UI.Xaml.Data.IPropertyPathNodeListener.IsBrokenChanged", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathNode")), 
      PropertyPathWalker_Windows_UI_Xaml_Data_IPropertyPathNodeListener_IsBrokenChanged
    )
      .Overrides($asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathNodeListener"), "IsBrokenChanged");

    $.Method({Static:false, Public:false, Virtual:true }, "Windows.UI.Xaml.Data.IPropertyPathNodeListener.ValueChanged", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathNode")), 
      PropertyPathWalker_Windows_UI_Xaml_Data_IPropertyPathNodeListener_ValueChanged
    )
      .Overrides($asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathNodeListener"), "ValueChanged");

    $['Field']({Static:false, Public:false}, "Path", $.String); 
    $['Field']({Static:false, Public:false}, "IsDataContextBound", $.Boolean); 
    $['Field']({Static:false, Public:false}, "Source", $.Object); 
    $['Field']({Static:false, Public:false}, "ValueInternal", $.Object); 
    $['Field']({Static:false, Public:false}, "FirstNode", $asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathNode")); 
    $['Field']({Static:false, Public:false}, "FinalNode", $asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathNode")); 
    $['Field']({Static:false, Public:false}, "_listener", $asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathWalkerListener")); 
    $.Property({Static:false, Public:false}, "IsPathBroken", $.Boolean);

    $.ImplementInterfaces(
      /* 0 */ $asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyPathNodeListener")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Data.RelativeSource */ 

(function RelativeSource$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.RelativeSourceMode)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };

  function RelativeSource__ctor () {
    this._mode = $T00().None;
    $T01().prototype['_ctor'].call(this);
  };

  function RelativeSource_get_Mode () {
    return this._mode;
  };

  function RelativeSource_set_Mode (value) {
    this._mode = value;
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), 
      Name: "Windows.UI.Xaml.Data.RelativeSource", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      RelativeSource__ctor
    );

    $.Method({Static:false, Public:true }, "get_Mode", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Data.RelativeSourceMode")), 
      RelativeSource_get_Mode
    );

    $.Method({Static:false, Public:true }, "set_Mode", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Data.RelativeSourceMode")), 
      RelativeSource_set_Mode
    );

    $['Field']({Static:false, Public:false}, "_mode", $asm00.TypeRef("Windows.UI.Xaml.Data.RelativeSourceMode")); 
    $.Property({Static:false, Public:true }, "Mode", $asm00.TypeRef("Windows.UI.Xaml.Data.RelativeSourceMode"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum Windows.UI.Xaml.Data.RelativeSourceMode */ 

JSIL.MakeEnum(
  {
    FullName: "Windows.UI.Xaml.Data.RelativeSourceMode", 
    BaseType: $asm06.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    None: 0, 
    TemplatedParent: 1, 
    Self: 2, 
  }
);

/* class Windows.UI.Xaml.Data.StandardPropertyPathNode */ 

(function StandardPropertyPathNode$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.PropertyPathNode)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IDependencyPropertyChangedEventArgs)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IPropertyPathNode)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.System.Windows.Markup.XamlParseException)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.CSharpXamlForHtml5_Environment)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.System.Windows.MessageBox)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm01.System.Diagnostics.Debug)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IPropertyChangedListener)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_TypeToStringsToDependencyProperties)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_PropertyStore)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm06.System.Action$b2.Of($asm06.System.Object, $asm00.Windows.UI.Xaml.Data.IDependencyPropertyChangedEventArgs))) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm06.System.Type)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm01.System.ComponentModel.PropertyChangedEventArgs)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm06.System.Reflection.PropertyInfo)) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IPropertyPathNode.SetSource)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm00.Windows.UI.Xaml.Data.IPropertyChangedListener.Detach)) ();
  };

  function StandardPropertyPathNode__ctor$00 (typeName, propertyName) {
    this.BindsDirectlyToSource = false;
    $T01().prototype['_ctor'].call(this);
    this._propertyName = propertyName;
  };

  function StandardPropertyPathNode__ctor$01 () {
    this.BindsDirectlyToSource = false;
    $T01().prototype['_ctor'].call(this);
    this.BindsDirectlyToSource = true;
  };

  function StandardPropertyPathNode_OnPropertyChanged (sender, args, $exception) {
    try {
      this['UpdateValue']();
      if ($T01().prototype['get_Next'].call(this) !== null) {
        $IM00().Call($T01().prototype['get_Next'].call(this), null, $T01().prototype['get_Value'].call(this));
      }
    } catch ($exception) {
      if ($T06().$Is($exception)) {
        var ex = $exception;
        if (true) {
          throw ex;
        }
        alert(ex['toString']());
      } else {
        var ex2 = $exception;
        console.log(JSIL.ConcatString("Binding exception: ", ex2['toString']()));
      }
    }
  };

  function StandardPropertyPathNode_OnSourceChanged (oldvalue, newValue) {
    var dependencyObject = null;
    if ($T0A().$Is(oldvalue)) {
      var dependencyObject2 = $T0A().$Cast(oldvalue);
    }
    if ($T0A().$Is(newValue)) {
      dependencyObject = $T0A().$Cast(newValue);
    }
    var dependencyPropertyListener = this._dependencyPropertyListener;
    if (dependencyPropertyListener !== null) {
      $IM01().Call(dependencyPropertyListener, null);
      this._dependencyPropertyListener = null;
    }
    this.DependencyProperty = null;
    this.PropertyInfo = null;
    if (this['get_Source']() !== null) {
      if (dependencyObject !== null) {
        if (!this.BindsDirectlyToSource) {
          var propertyInTypeOrItsBaseTypes = $T0D()['GetPropertyInTypeOrItsBaseTypes'](JSIL['GetType'](this['get_Source']()), this._propertyName);
          if (propertyInTypeOrItsBaseTypes !== null) {
            this.DependencyProperty = propertyInTypeOrItsBaseTypes;
            this._dependencyPropertyListener = $T0E()['ListenToChanged'](dependencyObject, propertyInTypeOrItsBaseTypes, $T0F()['New'](this, $thisType.prototype['OnPropertyChanged'], function () { return JSIL.GetMethodInfo($thisType, "OnPropertyChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm00.Windows.UI.Xaml.Data.IDependencyPropertyChangedEventArgs]), false); }));
          }
        }
      }
      if (this.DependencyProperty === null) {
        this.PropertyInfo = (JSIL['GetType'](this['get_Source']()))['GetProperty'](this._propertyName);
      }
    }
  };

  function StandardPropertyPathNode_OnSourcePropertyChanged (sender, e) {
    if (!(!(e['get_PropertyName']() == this._propertyName) || !$T12()['op_Inequality'](this.PropertyInfo, null))) {
      this['UpdateValue']();
      var next = $T01().prototype['get_Next'].call(this);
      if (next !== null) {
        $IM00().Call(next, null, $T01().prototype['get_Value'].call(this));
      }
    }
  };

  function StandardPropertyPathNode_SetValue (value) {
    if (this.DependencyProperty !== null) {
      ($T0A().$Cast(this['get_Source']()))['SetValue'](this.DependencyProperty, value);
    } else if ($T12()['op_Inequality'](this.PropertyInfo, null)) {
      (this.PropertyInfo)['SetValue'](this['get_Source'](), value);
    }
  };

  function StandardPropertyPathNode_UpdateValue ($exception) {
    if (this.DependencyProperty !== null) {
      this['UpdateValueAndIsBroken'](
        ($T0A().$Cast(this['get_Source']()))['GetValue'](this.DependencyProperty), 
        this['CheckIsBroken']()
      );
    } else if ($T12()['op_Inequality'](this.PropertyInfo, null)) {
      try {
        this['UpdateValueAndIsBroken'](
          (this.PropertyInfo)['GetValue'](this['get_Source']()), 
          this['CheckIsBroken']()
        );
      } catch ($exception) {
        this['UpdateValueAndIsBroken'](null, this['CheckIsBroken']());
      }
    } else {
      this['UpdateValueAndIsBroken'](null, this['CheckIsBroken']());
    }
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Data.PropertyPathNode"), 
      Name: "Windows.UI.Xaml.Data.StandardPropertyPathNode", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [$.String, $.String]), 
      StandardPropertyPathNode__ctor$00
    );

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void, 
      StandardPropertyPathNode__ctor$01
    );

    $.Method({Static:false, Public:false}, "OnPropertyChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm00.TypeRef("Windows.UI.Xaml.Data.IDependencyPropertyChangedEventArgs")]), 
      StandardPropertyPathNode_OnPropertyChanged
    );

    $.Method({Static:false, Public:false, Virtual:true }, "OnSourceChanged", 
      new JSIL.MethodSignature(null, [$.Object, $.Object]), 
      StandardPropertyPathNode_OnSourceChanged
    );

    $.Method({Static:false, Public:false, Virtual:true }, "OnSourcePropertyChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm01.TypeRef("System.ComponentModel.PropertyChangedEventArgs")]), 
      StandardPropertyPathNode_OnSourcePropertyChanged
    );

    $.Method({Static:false, Public:false, Virtual:true }, "SetValue", 
      JSIL.MethodSignature.Action($.Object), 
      StandardPropertyPathNode_SetValue
    );

    $.Method({Static:false, Public:false, Virtual:true }, "UpdateValue", 
      JSIL.MethodSignature.Void, 
      StandardPropertyPathNode_UpdateValue
    );

    $['Field']({Static:false, Public:false}, "_propertyName", $.String); 
    $['Field']({Static:false, Public:false}, "BindsDirectlyToSource", $.Boolean); 
    $['Field']({Static:false, Public:false}, "_dependencyPropertyListener", $asm00.TypeRef("Windows.UI.Xaml.Data.IPropertyChangedListener")); 
    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Input.KeyRoutedEventArgs */ 

(function KeyRoutedEventArgs$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventArgs)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.System.VirtualKey)) ();
  };

  function KeyRoutedEventArgs__ctor () {
    this._handled = false;
    $T00().prototype['_ctor'].call(this);
  };

  function KeyRoutedEventArgs_get_Handled () {
    return this._handled;
  };

  function KeyRoutedEventArgs_get_Key () {
    return this._key;
  };

  function KeyRoutedEventArgs_set_Handled (value) {
    this._handled = value;
  };

  function KeyRoutedEventArgs_set_Key (value) {
    this._key = value;
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs"), 
      Name: "Windows.UI.Xaml.Input.KeyRoutedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      KeyRoutedEventArgs__ctor
    );

    $.Method({Static:false, Public:true }, "get_Handled", 
      JSIL.MethodSignature.Return($.Boolean), 
      KeyRoutedEventArgs_get_Handled
    );

    $.Method({Static:false, Public:true }, "get_Key", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.System.VirtualKey")), 
      KeyRoutedEventArgs_get_Key
    );

    $.Method({Static:false, Public:true }, "set_Handled", 
      JSIL.MethodSignature.Action($.Boolean), 
      KeyRoutedEventArgs_set_Handled
    );

    $.Method({Static:false, Public:false}, "set_Key", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.System.VirtualKey")), 
      KeyRoutedEventArgs_set_Key
    );

    $['Field']({Static:false, Public:false}, "_handled", $.Boolean); 
    $['Field']({Static:false, Public:false}, "_key", $asm00.TypeRef("Windows.System.VirtualKey")); 
    $.Property({Static:false, Public:true }, "Handled", $.Boolean);

    $.Property({Static:false, Public:true }, "Key", $asm00.TypeRef("Windows.System.VirtualKey"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate Windows.UI.Xaml.Input.KeyEventHandler */ 

JSIL.MakeDelegate("Windows.UI.Xaml.Input.KeyEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.Input.KeyRoutedEventArgs")]));

/* class Windows.UI.Xaml.Input.Pointer */ 

(function Pointer$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.Devices.Input.PointerDeviceType)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.UInt32)) ();
  };

  function Pointer__ctor () {
    this._isInContact = false;
    this._isInRange = false;
  };

  function Pointer_get_IsInContact () {
    return this._isInContact;
  };

  function Pointer_get_IsInRange () {
    return this._isInRange;
  };

  function Pointer_get_PointerDeviceType () {
    return this._pointerDeviceType;
  };

  function Pointer_get_PointerId () {
    return this._pointerId;
  };

  function Pointer_set_IsInContact (value) {
    this._isInContact = value;
  };

  function Pointer_set_IsInRange (value) {
    this._isInRange = value;
  };

  function Pointer_set_PointerDeviceType (value) {
    this._pointerDeviceType = value;
  };

  function Pointer_set_PointerId (value) {
    this._pointerId = (value >>> 0);
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.Input.Pointer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Pointer__ctor
    );

    $.Method({Static:false, Public:true }, "get_IsInContact", 
      JSIL.MethodSignature.Return($.Boolean), 
      Pointer_get_IsInContact
    );

    $.Method({Static:false, Public:true }, "get_IsInRange", 
      JSIL.MethodSignature.Return($.Boolean), 
      Pointer_get_IsInRange
    );

    $.Method({Static:false, Public:true }, "get_PointerDeviceType", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.Devices.Input.PointerDeviceType")), 
      Pointer_get_PointerDeviceType
    );

    $.Method({Static:false, Public:true }, "get_PointerId", 
      JSIL.MethodSignature.Return($.UInt32), 
      Pointer_get_PointerId
    );

    $.Method({Static:false, Public:false}, "set_IsInContact", 
      JSIL.MethodSignature.Action($.Boolean), 
      Pointer_set_IsInContact
    );

    $.Method({Static:false, Public:false}, "set_IsInRange", 
      JSIL.MethodSignature.Action($.Boolean), 
      Pointer_set_IsInRange
    );

    $.Method({Static:false, Public:false}, "set_PointerDeviceType", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.Devices.Input.PointerDeviceType")), 
      Pointer_set_PointerDeviceType
    );

    $.Method({Static:false, Public:false}, "set_PointerId", 
      JSIL.MethodSignature.Action($.UInt32), 
      Pointer_set_PointerId
    );

    $['Field']({Static:true , Public:false}, "INTERNAL_captured", $asm00.TypeRef("Windows.UI.Xaml.UIElement")); 
    $['Field']({Static:false, Public:false}, "_isInContact", $.Boolean); 
    $['Field']({Static:false, Public:false}, "_isInRange", $.Boolean); 
    $['Field']({Static:false, Public:false}, "_pointerDeviceType", $asm00.TypeRef("Windows.Devices.Input.PointerDeviceType")); 
    $['Field']({Static:false, Public:false}, "_pointerId", $.UInt32); 
    $.Property({Static:false, Public:true }, "IsInContact", $.Boolean);

    $.Property({Static:false, Public:true }, "IsInRange", $.Boolean);

    $.Property({Static:false, Public:true }, "PointerDeviceType", $asm00.TypeRef("Windows.Devices.Input.PointerDeviceType"));

    $.Property({Static:false, Public:true }, "PointerId", $.UInt32);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate Windows.UI.Xaml.Input.PointerEventHandler */ 

JSIL.MakeDelegate("Windows.UI.Xaml.Input.PointerEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.Input.PointerRoutedEventArgs")]));

/* class Windows.UI.Input.PointerPoint */ 

(function PointerPoint$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.Foundation.Point)) ();
  };

  function PointerPoint__ctor () {
  };

  function PointerPoint_get_Position () {
    return this._position;
  };

  function PointerPoint_set_Position (value) {
    this._position = value['MemberwiseClone']();
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Input.PointerPoint", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      PointerPoint__ctor
    );

    $.Method({Static:false, Public:true }, "get_Position", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.Foundation.Point")), 
      PointerPoint_get_Position
    );

    $.Method({Static:false, Public:false}, "set_Position", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.Foundation.Point")), 
      PointerPoint_set_Position
    );

    $['Field']({Static:false, Public:false}, "_position", $asm00.TypeRef("Windows.Foundation.Point")); 
    $.Property({Static:false, Public:true }, "Position", $asm00.TypeRef("Windows.Foundation.Point"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Input.PointerRoutedEventArgs */ 

(function PointerRoutedEventArgs$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventArgs)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.System.VirtualKeyModifiers)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Input.Pointer)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Input.PointerPoint)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.Foundation.Point)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.GeneralTransform)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Windows.UI.Xaml.Window)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.Double)) ();
  };

  function PointerRoutedEventArgs__ctor () {
    this._pointerAbsoluteX = 0;
    this._pointerAbsoluteY = 0;
    this._handled = false;
    $T00().prototype['_ctor'].call(this);
  };

  function PointerRoutedEventArgs_AddKeyModifiers (e) {
    var virtualKeyModifiers = $T02().None;
    if (e.shiftKey) {
      virtualKeyModifiers = $T02().$Cast(virtualKeyModifiers | $T02().Shift);
    }
    if (e.altKey) {
      virtualKeyModifiers = $T02().$Cast(virtualKeyModifiers | $T02().Menu);
    }
    if (e.ctrlKey) {
      virtualKeyModifiers = $T02().$Cast(virtualKeyModifiers | $T02().Control);
    }
    this['set_KeyModifiers'](virtualKeyModifiers);
  };

  function PointerRoutedEventArgs_CheckIfEventShouldBeTreated (element, e) {
    if ($T04().INTERNAL_captured === null) {
      e.doNotReroute = true;
      var result = true;
    } else if ($T04().INTERNAL_captured === element) {
      e.doNotReroute = true;
      result = true;
    } else {
      result = e.doNotReroute === true;
    }
    return result;
  };

  function PointerRoutedEventArgs_FillPointerRoutedEventArgs (element, e) {
    if (!(($T04().INTERNAL_captured !== null) && ($T04().INTERNAL_captured !== element))) {
      e.doNotReroute = true;
    }
    this['AddKeyModifiers'](e);
    this['SetPointerAbsolutePosition'](e);
  };

  function PointerRoutedEventArgs_get_Handled () {
    return this._handled;
  };

  function PointerRoutedEventArgs_get_KeyModifiers () {
    return this._keyModifiers;
  };

  function PointerRoutedEventArgs_get_Pointer () {
    return this._pointer;
  };

  function PointerRoutedEventArgs_GetCurrentPoint (relativeTo) {
    if (relativeTo === null) {
      var pointerPoint = new ($T06())();
      (pointerPoint.Position = new ($T07())(this._pointerAbsoluteX, this._pointerAbsoluteY));
      var pointerPoint2 = pointerPoint;
      var result = pointerPoint2;
    } else {
      var generalTransform = $T09().Window$Current$value['get_Content']()['TransformToVisual'](relativeTo);
      var pointerPoint3 = new ($T06())();
      (pointerPoint3.Position = generalTransform['TransformPoint'](new ($T07())(this._pointerAbsoluteX, this._pointerAbsoluteY))['MemberwiseClone']());
      pointerPoint2 = pointerPoint3;
      result = pointerPoint2;
    }
    return result;
  };

  function PointerRoutedEventArgs_set_Handled (value) {
    this._handled = value;
  };

  function PointerRoutedEventArgs_set_KeyModifiers (value) {
    this._keyModifiers = value;
  };

  function PointerRoutedEventArgs_set_Pointer (value) {
    this._pointer = value;
  };

  function PointerRoutedEventArgs_SetPointerAbsolutePosition (e) {
    this._pointerAbsoluteX = $T0A().$Cast(e.pageX);
    this._pointerAbsoluteY = $T0A().$Cast(e.pageY);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs"), 
      Name: "Windows.UI.Xaml.Input.PointerRoutedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      PointerRoutedEventArgs__ctor
    );

    $.Method({Static:false, Public:false}, "AddKeyModifiers", 
      JSIL.MethodSignature.Action($.Object), 
      PointerRoutedEventArgs_AddKeyModifiers
    )
      .Parameter(0, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false}, "CheckIfEventShouldBeTreated", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Windows.UI.Xaml.UIElement"), $.Object]), 
      PointerRoutedEventArgs_CheckIfEventShouldBeTreated
    )
      .Parameter(1, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false}, "FillPointerRoutedEventArgs", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.UIElement"), $.Object]), 
      PointerRoutedEventArgs_FillPointerRoutedEventArgs
    )
      .Parameter(1, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:true }, "get_Handled", 
      JSIL.MethodSignature.Return($.Boolean), 
      PointerRoutedEventArgs_get_Handled
    );

    $.Method({Static:false, Public:true }, "get_KeyModifiers", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.System.VirtualKeyModifiers")), 
      PointerRoutedEventArgs_get_KeyModifiers
    );

    $.Method({Static:false, Public:true }, "get_Pointer", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Input.Pointer")), 
      PointerRoutedEventArgs_get_Pointer
    );

    $.Method({Static:false, Public:true }, "GetCurrentPoint", 
      new JSIL.MethodSignature($asm00.TypeRef("Windows.UI.Input.PointerPoint"), [$asm00.TypeRef("Windows.UI.Xaml.UIElement")]), 
      PointerRoutedEventArgs_GetCurrentPoint
    );

    $.Method({Static:false, Public:true }, "set_Handled", 
      JSIL.MethodSignature.Action($.Boolean), 
      PointerRoutedEventArgs_set_Handled
    );

    $.Method({Static:false, Public:false}, "set_KeyModifiers", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.System.VirtualKeyModifiers")), 
      PointerRoutedEventArgs_set_KeyModifiers
    );

    $.Method({Static:false, Public:false}, "set_Pointer", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Input.Pointer")), 
      PointerRoutedEventArgs_set_Pointer
    );

    $.Method({Static:false, Public:false}, "SetPointerAbsolutePosition", 
      JSIL.MethodSignature.Action($.Object), 
      PointerRoutedEventArgs_SetPointerAbsolutePosition
    )
      .Parameter(0, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $['Field']({Static:false, Public:false}, "_pointerAbsoluteX", $.Double); 
    $['Field']({Static:false, Public:false}, "_pointerAbsoluteY", $.Double); 
    $['Field']({Static:false, Public:false}, "_handled", $.Boolean); 
    $['Field']({Static:false, Public:false}, "_keyModifiers", $asm00.TypeRef("Windows.System.VirtualKeyModifiers")); 
    $['Field']({Static:false, Public:false}, "_pointer", $asm00.TypeRef("Windows.UI.Xaml.Input.Pointer")); 
    $.Property({Static:false, Public:true }, "Handled", $.Boolean);

    $.Property({Static:false, Public:true }, "KeyModifiers", $asm00.TypeRef("Windows.System.VirtualKeyModifiers"));

    $.Property({Static:false, Public:true }, "Pointer", $asm00.TypeRef("Windows.UI.Xaml.Input.Pointer"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate Windows.UI.Xaml.Input.TappedEventHandler */ 

JSIL.MakeDelegate("Windows.UI.Xaml.Input.TappedEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.Input.TappedRoutedEventArgs")]));

/* class Windows.UI.Xaml.Input.TappedRoutedEventArgs */ 

(function TappedRoutedEventArgs$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventArgs)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.Input.Pointer)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.Foundation.Point)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.GeneralTransform)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Double)) ();
  };

  function TappedRoutedEventArgs__ctor () {
    this._pointerAbsoluteX = 0;
    this._pointerAbsoluteY = 0;
    this._handled = false;
    $T00().prototype['_ctor'].call(this);
  };

  function TappedRoutedEventArgs_CheckIfEventShouldBeTreated (element, e) {
    if ($T03().INTERNAL_captured === null) {
      e.doNotReroute = true;
      var result = true;
    } else if ($T03().INTERNAL_captured === element) {
      e.doNotReroute = true;
      result = true;
    } else {
      result = e.doNotReroute === true;
    }
    return result;
  };

  function TappedRoutedEventArgs_FillTappedRoutedEventArgs (element, e) {
    if (!(($T03().INTERNAL_captured !== null) && ($T03().INTERNAL_captured !== element))) {
      e.doNotReroute = true;
    }
    this['SetTapAbsolutePosition'](e);
  };

  function TappedRoutedEventArgs_get_Handled () {
    return this._handled;
  };

  function TappedRoutedEventArgs_GetPosition (relativeTo) {
    if (relativeTo === null) {
      var result = new ($T05())(this._pointerAbsoluteX, this._pointerAbsoluteY);
    } else {
      var point = (relativeTo['TransformToVisual'](null))['TransformPoint'](new ($T05())(0, 0));
      result = new ($T05())((+this._pointerAbsoluteX - +point['get_X']()), (+this._pointerAbsoluteY - +point['get_Y']()));
    }
    return result;
  };

  function TappedRoutedEventArgs_set_Handled (value) {
    this._handled = value;
  };

  function TappedRoutedEventArgs_SetTapAbsolutePosition (e) {
    this._pointerAbsoluteX = $T07().$Cast(e.pageX);
    this._pointerAbsoluteY = $T07().$Cast(e.pageY);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs"), 
      Name: "Windows.UI.Xaml.Input.TappedRoutedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      TappedRoutedEventArgs__ctor
    );

    $.Method({Static:false, Public:false}, "CheckIfEventShouldBeTreated", 
      new JSIL.MethodSignature($.Boolean, [$asm00.TypeRef("Windows.UI.Xaml.UIElement"), $.Object]), 
      TappedRoutedEventArgs_CheckIfEventShouldBeTreated
    )
      .Parameter(1, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false}, "FillTappedRoutedEventArgs", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.UIElement"), $.Object]), 
      TappedRoutedEventArgs_FillTappedRoutedEventArgs
    )
      .Parameter(1, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:true }, "get_Handled", 
      JSIL.MethodSignature.Return($.Boolean), 
      TappedRoutedEventArgs_get_Handled
    );

    $.Method({Static:false, Public:true }, "GetPosition", 
      new JSIL.MethodSignature($asm00.TypeRef("Windows.Foundation.Point"), [$asm00.TypeRef("Windows.UI.Xaml.UIElement")]), 
      TappedRoutedEventArgs_GetPosition
    );

    $.Method({Static:false, Public:true }, "set_Handled", 
      JSIL.MethodSignature.Action($.Boolean), 
      TappedRoutedEventArgs_set_Handled
    );

    $.Method({Static:false, Public:false}, "SetTapAbsolutePosition", 
      JSIL.MethodSignature.Action($.Object), 
      TappedRoutedEventArgs_SetTapAbsolutePosition
    )
      .Parameter(0, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $['Field']({Static:false, Public:false}, "_pointerAbsoluteX", $.Double); 
    $['Field']({Static:false, Public:false}, "_pointerAbsoluteY", $.Double); 
    $['Field']({Static:false, Public:false}, "_handled", $.Boolean); 
    $['Field']({Static:false, Public:false}, "_position", $asm00.TypeRef("Windows.Foundation.Point")); 
    $.Property({Static:false, Public:true }, "Handled", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Media.ImageSource */ 

(function ImageSource$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.DotNetForHtml5.Core.TypeFromStringConverters)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Func$b2.Of($asm06.System.String, $asm06.System.Object))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm01.System.UriKind)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.Imaging.BitmapImage)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm01.System.Uri)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.Media.Imaging.BitmapImage"), [$asm01.TypeRef("System.Uri")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm01.TypeRef("System.Uri"), [$asm06.TypeRef("System.String"), $asm01.TypeRef("System.UriKind")]))) ();
  };

  function ImageSource__ctor () {
    $T02().prototype['_ctor'].call(this);
  };

  function ImageSource_INTERNAL_ConvertFromString (str) {
    if ((str.indexOf(":/") != -1)) {
      var uriKind = $T04().Absolute;
    } else {
      uriKind = $T04().Relative;
    }
    return $S00().Construct($S01().Construct(str, uriKind));
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), 
      Name: "Windows.UI.Xaml.Media.ImageSource", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ImageSource__ctor
    );

    $.Method({Static:true , Public:false}, "INTERNAL_ConvertFromString", 
      new JSIL.MethodSignature($.Object, [$.String]), 
      ImageSource_INTERNAL_ConvertFromString
    );

    function ImageSource__cctor () {
      $T00()['RegisterConverter']($thisType.__Type__, $T01()['New']($thisType, $thisType['INTERNAL_ConvertFromString'], function () { return JSIL.GetMethodInfo($thisType, "INTERNAL_ConvertFromString", new JSIL.MethodSignature($asm06.System.Object, [$asm06.System.String]), true); }));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      ImageSource__cctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Media.Imaging.BitmapSource */ 

(function BitmapSource$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.ImageSource)) ();
  };

  function BitmapSource__ctor () {
    $T00().prototype['_ctor'].call(this);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Media.ImageSource"), 
      Name: "Windows.UI.Xaml.Media.Imaging.BitmapSource", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void, 
      BitmapSource__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Media.Imaging.BitmapImage */ 

(function BitmapImage$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm01.System.Uri)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.Imaging.BitmapSource)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.ExceptionRoutedEventHandler)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Delegate)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Threading.Interlocked)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventHandler)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.EventHandler)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Windows.UI.Xaml.ExceptionRoutedEventArgs)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventArgs)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.System.EventArgs)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.ExceptionRoutedEventArgs"), null))) ();
  };

  function BitmapImage__ctor$00 () {
    $T04().prototype['_ctor'].call(this);
  };

  function BitmapImage__ctor$01 (uriSource) {
    $T04().prototype['_ctor'].call(this);
    this['set_UriSource'](uriSource);
  };

  function BitmapImage_add_ImageFailed (value) {
    var exceptionRoutedEventHandler = this.ImageFailed;

    do {
      var exceptionRoutedEventHandler2 = exceptionRoutedEventHandler;
      var value2 = $T06()['Combine'](exceptionRoutedEventHandler2, value);
      exceptionRoutedEventHandler = $T07()['CompareExchange$b1']($T05())(/* ref */ new JSIL['MemberReference'](this, "ImageFailed"), value2, exceptionRoutedEventHandler2);
    } while (exceptionRoutedEventHandler !== exceptionRoutedEventHandler2);
  };

  function BitmapImage_add_ImageOpened (value) {
    var routedEventHandler = this.ImageOpened;

    do {
      var routedEventHandler2 = routedEventHandler;
      var value2 = $T06()['Combine'](routedEventHandler2, value);
      routedEventHandler = $T07()['CompareExchange$b1']($T08())(/* ref */ new JSIL['MemberReference'](this, "ImageOpened"), value2, routedEventHandler2);
    } while (routedEventHandler !== routedEventHandler2);
  };

  function BitmapImage_add_UriSourceChanged (value) {
    var eventHandler = this.UriSourceChanged;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T06()['Combine'](eventHandler2, value);
      eventHandler = $T07()['CompareExchange$b1']($T09())(/* ref */ new JSIL['MemberReference'](this, "UriSourceChanged"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  };

  function BitmapImage_get_UriSource () {
    return $T01().$Cast(this['GetValue']($thisType.UriSourceProperty));
  };

  function BitmapImage_OnImageFailed () {
    if (this.ImageFailed !== null) {
      var exceptionRoutedEventArgs = $S01().Construct();
      exceptionRoutedEventArgs['set_OriginalSource'](this);
      this.ImageFailed(this, exceptionRoutedEventArgs);
    }
  };

  function BitmapImage_OnImageOpened () {
    if (this.ImageOpened !== null) {
      var routedEventArgs = new ($T0C())();
      routedEventArgs['set_OriginalSource'](this);
      this.ImageOpened(this, routedEventArgs);
    }
  };

  function BitmapImage_OnUriSourceChanged () {
    if (this.UriSourceChanged !== null) {
      this.UriSourceChanged(this, new ($T0D())());
    }
  };

  function BitmapImage_remove_ImageFailed (value) {
    var exceptionRoutedEventHandler = this.ImageFailed;

    do {
      var exceptionRoutedEventHandler2 = exceptionRoutedEventHandler;
      var value2 = $T06()['Remove'](exceptionRoutedEventHandler2, value);
      exceptionRoutedEventHandler = $T07()['CompareExchange$b1']($T05())(/* ref */ new JSIL['MemberReference'](this, "ImageFailed"), value2, exceptionRoutedEventHandler2);
    } while (exceptionRoutedEventHandler !== exceptionRoutedEventHandler2);
  };

  function BitmapImage_remove_ImageOpened (value) {
    var routedEventHandler = this.ImageOpened;

    do {
      var routedEventHandler2 = routedEventHandler;
      var value2 = $T06()['Remove'](routedEventHandler2, value);
      routedEventHandler = $T07()['CompareExchange$b1']($T08())(/* ref */ new JSIL['MemberReference'](this, "ImageOpened"), value2, routedEventHandler2);
    } while (routedEventHandler !== routedEventHandler2);
  };

  function BitmapImage_remove_UriSourceChanged (value) {
    var eventHandler = this.UriSourceChanged;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T06()['Remove'](eventHandler2, value);
      eventHandler = $T07()['CompareExchange$b1']($T09())(/* ref */ new JSIL['MemberReference'](this, "UriSourceChanged"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  };

  function BitmapImage_set_UriSource (value) {
    this['SetValue']($thisType.UriSourceProperty, value);
  };

  function BitmapImage_UriSource_Changed (i, e) {
    var bitmapImage = $thisType.$Cast(i);
    var uri = $T01().$Cast(e['get_NewValue']());
    bitmapImage['OnUriSourceChanged']();
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Media.Imaging.BitmapSource"), 
      Name: "Windows.UI.Xaml.Media.Imaging.BitmapImage", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      BitmapImage__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm01.TypeRef("System.Uri")), 
      BitmapImage__ctor$01
    );

    $.Method({Static:false, Public:true }, "add_ImageFailed", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.ExceptionRoutedEventHandler")), 
      BitmapImage_add_ImageFailed
    );

    $.Method({Static:false, Public:true }, "add_ImageOpened", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")), 
      BitmapImage_add_ImageOpened
    );

    $.Method({Static:false, Public:true }, "add_UriSourceChanged", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.EventHandler")), 
      BitmapImage_add_UriSourceChanged
    );

    $.Method({Static:false, Public:true }, "get_UriSource", 
      JSIL.MethodSignature.Return($asm01.TypeRef("System.Uri")), 
      BitmapImage_get_UriSource
    );

    $.Method({Static:false, Public:false}, "OnImageFailed", 
      JSIL.MethodSignature.Void, 
      BitmapImage_OnImageFailed
    );

    $.Method({Static:false, Public:false}, "OnImageOpened", 
      JSIL.MethodSignature.Void, 
      BitmapImage_OnImageOpened
    );

    $.Method({Static:false, Public:false}, "OnUriSourceChanged", 
      JSIL.MethodSignature.Void, 
      BitmapImage_OnUriSourceChanged
    );

    $.Method({Static:false, Public:true }, "remove_ImageFailed", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.ExceptionRoutedEventHandler")), 
      BitmapImage_remove_ImageFailed
    );

    $.Method({Static:false, Public:true }, "remove_ImageOpened", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")), 
      BitmapImage_remove_ImageOpened
    );

    $.Method({Static:false, Public:true }, "remove_UriSourceChanged", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.EventHandler")), 
      BitmapImage_remove_UriSourceChanged
    );

    $.Method({Static:false, Public:true }, "set_UriSource", 
      JSIL.MethodSignature.Action($asm01.TypeRef("System.Uri")), 
      BitmapImage_set_UriSource
    );

    $.Method({Static:true , Public:false}, "UriSource_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      BitmapImage_UriSource_Changed
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "UriSourceProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:false, Public:false}, "ImageFailed", $asm00.TypeRef("Windows.UI.Xaml.ExceptionRoutedEventHandler")); 
    $['Field']({Static:false, Public:false}, "ImageOpened", $asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")); 
    $['Field']({Static:false, Public:false}, "UriSourceChanged", $asm06.TypeRef("System.EventHandler")); 
    function BitmapImage__cctor () {
      $thisType.UriSourceProperty = $T00()['Register']("UriSource", $T01().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['UriSource_Changed'], function () { return JSIL.GetMethodInfo($thisType, "UriSource_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      BitmapImage__cctor
    );

    $.Property({Static:false, Public:true }, "UriSource", $asm01.TypeRef("System.Uri"));

    $.Event({Static:false, Public:true }, "ImageFailed", $asm00.TypeRef("Windows.UI.Xaml.ExceptionRoutedEventHandler"));

    $.Event({Static:false, Public:true }, "ImageOpened", $asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler"));

    $.Event({Static:false, Public:true }, "UriSourceChanged", $asm06.TypeRef("System.EventHandler"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Media.FontFamily */ 

(function FontFamily$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.DotNetForHtml5.Core.TypeFromStringConverters)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Func$b2.Of($asm06.System.String, $asm06.System.Object))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.String)) ();
  };

  function FontFamily__ctor (familyName) {
    this._source = familyName;
  };

  function FontFamily_get_Source () {
    return this._source;
  };

  function FontFamily_INTERNAL_ConvertFromString (fontCode) {
    return new $thisType(fontCode);
  };

  function FontFamily_INTERNAL_ToHtmlString () {
    return this['get_Source']();
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.Media.FontFamily", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String), 
      FontFamily__ctor
    );

    $.Method({Static:false, Public:true }, "get_Source", 
      JSIL.MethodSignature.Return($.String), 
      FontFamily_get_Source
    );

    $.Method({Static:true , Public:false}, "INTERNAL_ConvertFromString", 
      new JSIL.MethodSignature($.Object, [$.String]), 
      FontFamily_INTERNAL_ConvertFromString
    );

    $.Method({Static:false, Public:false}, "INTERNAL_ToHtmlString", 
      JSIL.MethodSignature.Return($.String), 
      FontFamily_INTERNAL_ToHtmlString
    );

    $['Field']({Static:false, Public:false}, "_source", $.String); 
    function FontFamily__cctor () {
      $T00()['RegisterConverter']($thisType.__Type__, $T01()['New']($thisType, $thisType['INTERNAL_ConvertFromString'], function () { return JSIL.GetMethodInfo($thisType, "INTERNAL_ConvertFromString", new JSIL.MethodSignature($asm06.System.Object, [$asm06.System.String]), true); }));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      FontFamily__cctor
    );

    $.Property({Static:false, Public:true }, "Source", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum Windows.UI.Xaml.Media.MediaCanPlayResponse */ 

JSIL.MakeEnum(
  {
    FullName: "Windows.UI.Xaml.Media.MediaCanPlayResponse", 
    BaseType: $asm06.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    NotSupported: 0, 
    Maybe: 1, 
    Probably: 2, 
  }
);

/* class Windows.UI.Xaml.Media.GeneralTransform */ 

(function GeneralTransform$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.Foundation.Point)) ();
  };

  function GeneralTransform__ctor () {
    $T00().prototype['_ctor'].call(this);
  };

  function GeneralTransform_Transform (point) {
    return this['TransformPoint'](point['MemberwiseClone']());
  };

  function GeneralTransform_TransformPoint (point) {
    return this['INTERNAL_TransformPoint'](point['MemberwiseClone']());
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), 
      Name: "Windows.UI.Xaml.Media.GeneralTransform", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void, 
      GeneralTransform__ctor
    );

    $.Method({Static:false, Public:true }, "Transform", 
      new JSIL.MethodSignature($asm00.TypeRef("Windows.Foundation.Point"), [$asm00.TypeRef("Windows.Foundation.Point")]), 
      GeneralTransform_Transform
    );

    $.Method({Static:false, Public:true }, "TransformPoint", 
      new JSIL.MethodSignature($asm00.TypeRef("Windows.Foundation.Point"), [$asm00.TypeRef("Windows.Foundation.Point")]), 
      GeneralTransform_TransformPoint
    );

    $['Field']({Static:false, Public:false}, "INTERNAL_parent", $asm00.TypeRef("Windows.UI.Xaml.UIElement")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Media.Transform */ 

(function Transform$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.GeneralTransform)) ();
  };

  function Transform__ctor () {
    $T00().prototype['_ctor'].call(this);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Media.GeneralTransform"), 
      Name: "Windows.UI.Xaml.Media.Transform", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void, 
      Transform__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Media.RotateTransform */ 

(function RotateTransform$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.Transform)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm00.Windows.Foundation.Point)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm06.System.NotImplementedException)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.NotImplementedException"), [$asm06.TypeRef("System.String")]))) ();
  };

  function RotateTransform__ctor () {
    $T04().prototype['_ctor'].call(this);
  };

  function RotateTransform_Angle_Changed (d, e, $exception) {
    var rotateTransform = $thisType.$Cast(d);
    if (!((rotateTransform.INTERNAL_parent === null) || !$T09()['IsElementInVisualTree'](rotateTransform.INTERNAL_parent))) {
      var num = $T01().$Cast(e['get_NewValue']());
      var frameworkElementOuterStyleForModification = $T0B()['GetFrameworkElementOuterStyleForModification'](rotateTransform.INTERNAL_parent);
      try {
        frameworkElementOuterStyleForModification.transform = (JSIL.ConcatString("rotate(", num, "deg)"));
      } catch ($exception) {
      }
      try {
        frameworkElementOuterStyleForModification.msTransform = (JSIL.ConcatString("rotate(", num, "deg)"));
      } catch ($exception) {
      }
      try {
        frameworkElementOuterStyleForModification.WebkitTransform = (JSIL.ConcatString("rotate(", num, "deg)"));
      } catch ($exception) {
      }
    }
  };

  function RotateTransform_CenterX_Changed (d, e, $exception) {
    var rotateTransform = $thisType.$Cast(d);
    if (!((rotateTransform.INTERNAL_parent === null) || !$T09()['IsElementInVisualTree'](rotateTransform.INTERNAL_parent))) {
      var num = $T01().$Cast(e['get_NewValue']());
      var frameworkElementOuterStyleForModification = $T0B()['GetFrameworkElementOuterStyleForModification'](rotateTransform.INTERNAL_parent);
      try {
        frameworkElementOuterStyleForModification.transformOrigin = (JSIL.ConcatString(num, " ", rotateTransform['get_CenterY']()));
      } catch ($exception) {
      }
      try {
        frameworkElementOuterStyleForModification.msTransformOrigin = (JSIL.ConcatString(num, " ", rotateTransform['get_CenterY']()));
      } catch ($exception) {
      }
      try {
        frameworkElementOuterStyleForModification.WebkitTransformOrigin = (JSIL.ConcatString(num, " ", rotateTransform['get_CenterY']()));
      } catch ($exception) {
      }
    }
  };

  function RotateTransform_CenterY_Changed (d, e, $exception) {
    var rotateTransform = $thisType.$Cast(d);
    if (!((rotateTransform.INTERNAL_parent === null) || !$T09()['IsElementInVisualTree'](rotateTransform.INTERNAL_parent))) {
      var num = $T01().$Cast(e['get_NewValue']());
      var frameworkElementOuterStyleForModification = $T0B()['GetFrameworkElementOuterStyleForModification'](rotateTransform.INTERNAL_parent);
      try {
        frameworkElementOuterStyleForModification.transformOrigin = (JSIL.ConcatString(num, " ", rotateTransform['get_CenterY']()));
      } catch ($exception) {
      }
      try {
        frameworkElementOuterStyleForModification.msTransformOrigin = (JSIL.ConcatString(num, " ", rotateTransform['get_CenterY']()));
      } catch ($exception) {
      }
      try {
        frameworkElementOuterStyleForModification.WebkitTransformOrigin = (JSIL.ConcatString(num, " ", rotateTransform['get_CenterY']()));
      } catch ($exception) {
      }
    }
  };

  function RotateTransform_get_Angle () {
    return $T01().$Cast(this['GetValue']($thisType.AngleProperty));
  };

  function RotateTransform_get_CenterX () {
    return $T01().$Cast(this['GetValue']($thisType.CenterXProperty));
  };

  function RotateTransform_get_CenterY () {
    return $T01().$Cast(this['GetValue']($thisType.CenterYProperty));
  };

  function RotateTransform_INTERNAL_TransformPoint (point) {
    throw $S01().Construct("Please contact support@cshtml5.com");
  };

  function RotateTransform_set_Angle (value) {
    this['SetValue']($thisType.AngleProperty, value);
  };

  function RotateTransform_set_CenterX (value) {
    this['SetValue']($thisType.CenterXProperty, value);
  };

  function RotateTransform_set_CenterY (value) {
    this['SetValue']($thisType.CenterYProperty, value);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Media.Transform"), 
      Name: "Windows.UI.Xaml.Media.RotateTransform", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      RotateTransform__ctor
    );

    $.Method({Static:true , Public:false}, "Angle_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      RotateTransform_Angle_Changed
    );

    $.Method({Static:true , Public:false}, "CenterX_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      RotateTransform_CenterX_Changed
    );

    $.Method({Static:true , Public:false}, "CenterY_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      RotateTransform_CenterY_Changed
    );

    $.Method({Static:false, Public:true }, "get_Angle", 
      JSIL.MethodSignature.Return($.Double), 
      RotateTransform_get_Angle
    );

    $.Method({Static:false, Public:true }, "get_CenterX", 
      JSIL.MethodSignature.Return($.Double), 
      RotateTransform_get_CenterX
    );

    $.Method({Static:false, Public:true }, "get_CenterY", 
      JSIL.MethodSignature.Return($.Double), 
      RotateTransform_get_CenterY
    );

    $.Method({Static:false, Public:false, Virtual:true }, "INTERNAL_TransformPoint", 
      new JSIL.MethodSignature($asm00.TypeRef("Windows.Foundation.Point"), [$asm00.TypeRef("Windows.Foundation.Point")]), 
      RotateTransform_INTERNAL_TransformPoint
    );

    $.Method({Static:false, Public:true }, "set_Angle", 
      JSIL.MethodSignature.Action($.Double), 
      RotateTransform_set_Angle
    );

    $.Method({Static:false, Public:true }, "set_CenterX", 
      JSIL.MethodSignature.Action($.Double), 
      RotateTransform_set_CenterX
    );

    $.Method({Static:false, Public:true }, "set_CenterY", 
      JSIL.MethodSignature.Action($.Double), 
      RotateTransform_set_CenterY
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "AngleProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "CenterXProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "CenterYProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function RotateTransform__cctor () {
      $thisType.AngleProperty = $T00()['Register']("Angle", $T01().__Type__, $thisType.__Type__, $S00().Construct(0, $T03()['New']($thisType, $thisType['Angle_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Angle_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.CenterXProperty = $T00()['Register']("CenterX", $T01().__Type__, $thisType.__Type__, $S00().Construct(0, $T03()['New']($thisType, $thisType['CenterX_Changed'], function () { return JSIL.GetMethodInfo($thisType, "CenterX_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.CenterYProperty = $T00()['Register']("CenterY", $T01().__Type__, $thisType.__Type__, $S00().Construct(0, $T03()['New']($thisType, $thisType['CenterY_Changed'], function () { return JSIL.GetMethodInfo($thisType, "CenterY_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      RotateTransform__cctor
    );

    $.Property({Static:false, Public:true }, "Angle", $.Double);

    $.Property({Static:false, Public:true }, "CenterX", $.Double);

    $.Property({Static:false, Public:true }, "CenterY", $.Double);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Media.TranslateTransform */ 

(function TranslateTransform$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.Transform)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.Foundation.Point)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize(System.Array.Of($asm06.System.Object))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };

  function TranslateTransform__ctor () {
    $T04().prototype['_ctor'].call(this);
  };

  function TranslateTransform_get_X () {
    return $T01().$Cast(this['GetValue']($thisType.XProperty));
  };

  function TranslateTransform_get_Y () {
    return $T01().$Cast(this['GetValue']($thisType.YProperty));
  };

  function TranslateTransform_INTERNAL_TransformPoint (point) {
    return new ($T06())((+point['get_X']() + +this['get_X']()), (+point['get_Y']() + +this['get_Y']()));
  };

  function TranslateTransform_set_X (value) {
    this['SetValue']($thisType.XProperty, value);
  };

  function TranslateTransform_set_Y (value) {
    this['SetValue']($thisType.YProperty, value);
  };

  function TranslateTransform_X_Changed (d, e, $exception) {
    var translateTransform = $thisType.$Cast(d);
    if (!((translateTransform.INTERNAL_parent === null) || !$T0A()['IsElementInVisualTree'](translateTransform.INTERNAL_parent))) {
      var num = $T01().$Cast(e['get_NewValue']());
      var frameworkElementOuterStyleForModification = $T0C()['GetFrameworkElementOuterStyleForModification'](translateTransform.INTERNAL_parent);
      try {
        frameworkElementOuterStyleForModification.transform = (JSIL.ConcatString.apply(null, JSIL.Array.New($T0B(), ["translate(", num, "px, ", translateTransform['get_Y'](), "px)"])));
      } catch ($exception) {
      }
      try {
        frameworkElementOuterStyleForModification.msTransform = (JSIL.ConcatString.apply(null, JSIL.Array.New($T0B(), ["translate(", num, "px, ", translateTransform['get_Y'](), "px)"])));
      } catch ($exception) {
      }
      try {
        frameworkElementOuterStyleForModification.WebkitTransform = (JSIL.ConcatString.apply(null, JSIL.Array.New($T0B(), ["translate(", num, "px, ", translateTransform['get_Y'](), "px)"])));
      } catch ($exception) {
      }
    }
  };

  function TranslateTransform_Y_Changed (d, e, $exception) {
    var translateTransform = $thisType.$Cast(d);
    if (!((translateTransform.INTERNAL_parent === null) || !$T0A()['IsElementInVisualTree'](translateTransform.INTERNAL_parent))) {
      var num = $T01().$Cast(e['get_NewValue']());
      var frameworkElementOuterStyleForModification = $T0C()['GetFrameworkElementOuterStyleForModification'](translateTransform.INTERNAL_parent);
      try {
        frameworkElementOuterStyleForModification.transform = (JSIL.ConcatString.apply(null, JSIL.Array.New($T0B(), ["translate(", translateTransform['get_X'](), "px, ", num, "px)"])));
      } catch ($exception) {
      }
      try {
        frameworkElementOuterStyleForModification.msTransform = (JSIL.ConcatString.apply(null, JSIL.Array.New($T0B(), ["translate(", translateTransform['get_X'](), "px, ", num, "px)"])));
      } catch ($exception) {
      }
      try {
        frameworkElementOuterStyleForModification.WebkitTransform = (JSIL.ConcatString.apply(null, JSIL.Array.New($T0B(), ["translate(", translateTransform['get_X'](), "px, ", num, "px)"])));
      } catch ($exception) {
      }
    }
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Media.Transform"), 
      Name: "Windows.UI.Xaml.Media.TranslateTransform", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      TranslateTransform__ctor
    );

    $.Method({Static:false, Public:true }, "get_X", 
      JSIL.MethodSignature.Return($.Double), 
      TranslateTransform_get_X
    );

    $.Method({Static:false, Public:true }, "get_Y", 
      JSIL.MethodSignature.Return($.Double), 
      TranslateTransform_get_Y
    );

    $.Method({Static:false, Public:false, Virtual:true }, "INTERNAL_TransformPoint", 
      new JSIL.MethodSignature($asm00.TypeRef("Windows.Foundation.Point"), [$asm00.TypeRef("Windows.Foundation.Point")]), 
      TranslateTransform_INTERNAL_TransformPoint
    );

    $.Method({Static:false, Public:true }, "set_X", 
      JSIL.MethodSignature.Action($.Double), 
      TranslateTransform_set_X
    );

    $.Method({Static:false, Public:true }, "set_Y", 
      JSIL.MethodSignature.Action($.Double), 
      TranslateTransform_set_Y
    );

    $.Method({Static:true , Public:false}, "X_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      TranslateTransform_X_Changed
    );

    $.Method({Static:true , Public:false}, "Y_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      TranslateTransform_Y_Changed
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "XProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "YProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function TranslateTransform__cctor () {
      $thisType.XProperty = $T00()['Register']("X", $T01().__Type__, $thisType.__Type__, $S00().Construct(0, $T03()['New']($thisType, $thisType['X_Changed'], function () { return JSIL.GetMethodInfo($thisType, "X_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.YProperty = $T00()['Register']("Y", $T01().__Type__, $thisType.__Type__, $S00().Construct(0, $T03()['New']($thisType, $thisType['Y_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Y_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      TranslateTransform__cctor
    );

    $.Property({Static:false, Public:true }, "X", $.Double);

    $.Property({Static:false, Public:true }, "Y", $.Double);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum Windows.UI.Xaml.Media.Stretch */ 

JSIL.MakeEnum(
  {
    FullName: "Windows.UI.Xaml.Media.Stretch", 
    BaseType: $asm06.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    None: 0, 
    Fill: 1, 
    Uniform: 2, 
    UniformToFill: 3, 
  }
);

/* class Windows.UI.Xaml.Media.Brush */ 

(function Brush$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.DotNetForHtml5.Core.TypeFromStringConverters)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Func$b2.Of($asm06.System.String, $asm06.System.Object))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.SolidColorBrush)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Color)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.Media.SolidColorBrush"), [$asm00.TypeRef("Windows.UI.Color")]))) ();
  };

  function Brush__ctor () {
    $T02().prototype['_ctor'].call(this);
  };

  function Brush_INTERNAL_ConvertFromString (colorcode) {
    return $S00().Construct($T05().$Cast($T05()['INTERNAL_ConvertFromString'](colorcode))['MemberwiseClone']());
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), 
      Name: "Windows.UI.Xaml.Media.Brush", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Brush__ctor
    );

    $.Method({Static:true , Public:false}, "INTERNAL_ConvertFromString", 
      new JSIL.MethodSignature($.Object, [$.String]), 
      Brush_INTERNAL_ConvertFromString
    );

    function Brush__cctor () {
      $T00()['RegisterConverter']($thisType.__Type__, $T01()['New']($thisType, $thisType['INTERNAL_ConvertFromString'], function () { return JSIL.GetMethodInfo($thisType, "INTERNAL_ConvertFromString", new JSIL.MethodSignature($asm06.System.Object, [$asm06.System.String]), true); }));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Brush__cctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Media.SolidColorBrush */ 

(function SolidColorBrush$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Color)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.Brush)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object")]))) ();
  };

  function SolidColorBrush__ctor$00 () {
    $T03().prototype['_ctor'].call(this);
  };

  function SolidColorBrush__ctor$01 (color) {
    $T03().prototype['_ctor'].call(this);
    (this.Color = color['MemberwiseClone']());
  };

  function SolidColorBrush_get_Color () {
    return $T01().$Cast(this['GetValue']($thisType.ColorProperty));
  };

  function SolidColorBrush_set_Color (value) {
    this['SetValue']($thisType.ColorProperty, value);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Media.Brush"), 
      Name: "Windows.UI.Xaml.Media.SolidColorBrush", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      SolidColorBrush__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Color")), 
      SolidColorBrush__ctor$01
    );

    $.Method({Static:false, Public:true }, "get_Color", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      SolidColorBrush_get_Color
    );

    $.Method({Static:false, Public:true }, "set_Color", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Color")), 
      SolidColorBrush_set_Color
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "ColorProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function SolidColorBrush__cctor () {
      $thisType.ColorProperty = $T00()['Register']("Color", $T01().__Type__, $thisType.__Type__, $S00().Construct(null));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      SolidColorBrush__cctor
    );

    $.Property({Static:false, Public:true }, "Color", $asm00.TypeRef("Windows.UI.Color"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Shapes.Shape */ 

(function Shape$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.Brush)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.Stretch)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm00.Windows.UI.Xaml.Media.SolidColorBrush)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Windows.UI.Color)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };

  function Shape__ctor () {
    $T05().prototype['_ctor'].call(this);
  };

  function Shape_Fill_Changed (d, e) {
    var shape = $thisType.$Cast(d);
    var brush = $T01().$Cast(e['get_NewValue']());
    if (!(!$T08()['IsElementInVisualTree'](shape) || !$T09().$Is(brush))) {
      $T0A()['GetFrameworkElementOuterStyleForModification'](shape).backgroundColor = (($T09().$Cast(brush))['get_Color']()['MemberwiseClone']())['INTERNAL_ToHtmlString']();
    }
  };

  function Shape_get_Fill () {
    return $T01().$Cast(this['GetValue']($thisType.FillProperty));
  };

  function Shape_get_Stretch () {
    return $T04().$Cast(this['GetValue']($thisType.StretchProperty));
  };

  function Shape_set_Fill (value) {
    this['SetValue']($thisType.FillProperty, value);
  };

  function Shape_set_Stretch (value) {
    this['SetValue']($thisType.StretchProperty, value);
  };

  function Shape_Stretch_Changed (i, e) {
    var shape = $thisType.$Cast(i);
    var stretch = $T04().$Cast(e['get_NewValue']());
    if ($T08()['IsElementInVisualTree'](shape)) {
      var frameworkElementOuterStyleForModification = $T0A()['GetFrameworkElementOuterStyleForModification'](shape);
      switch (stretch['valueOf']()) {
        case 0: 
          frameworkElementOuterStyleForModification.width = "auto";
          frameworkElementOuterStyleForModification.height = "auto";
          break;

        case 1: 
          frameworkElementOuterStyleForModification.width = "100%";
          frameworkElementOuterStyleForModification.height = "100%";
          break;

        case 2: 
          frameworkElementOuterStyleForModification.maxWidth = "100%";
          frameworkElementOuterStyleForModification.maxHeight = "100%";
          break;

        case 3: 
          frameworkElementOuterStyleForModification.minWidth = "100%";
          frameworkElementOuterStyleForModification.minHeight = "100%";
          break;

      }
    }
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.FrameworkElement"), 
      Name: "Windows.UI.Xaml.Shapes.Shape", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false}, ".ctor", 
      JSIL.MethodSignature.Void, 
      Shape__ctor
    );

    $.Method({Static:true , Public:false}, "Fill_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Shape_Fill_Changed
    );

    $.Method({Static:false, Public:true }, "get_Fill", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      Shape_get_Fill
    );

    $.Method({Static:false, Public:true }, "get_Stretch", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.Media.Stretch")), 
      Shape_get_Stretch
    );

    $.Method({Static:false, Public:true }, "set_Fill", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Media.Brush")), 
      Shape_set_Fill
    );

    $.Method({Static:false, Public:true }, "set_Stretch", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Media.Stretch")), 
      Shape_set_Stretch
    );

    $.Method({Static:true , Public:false}, "Stretch_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Shape_Stretch_Changed
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "FillProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "StretchProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function Shape__cctor () {
      $thisType.FillProperty = $T00()['Register']("Fill", $T01().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['Fill_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Fill_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.StretchProperty = $T00()['Register']("Stretch", $T04().__Type__, $thisType.__Type__, $S00().Construct($T04().Uniform, $T03()['New']($thisType, $thisType['Stretch_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Stretch_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Shape__cctor
    );

    $.Property({Static:false, Public:true }, "Fill", $asm00.TypeRef("Windows.UI.Xaml.Media.Brush"));

    $.Property({Static:false, Public:true }, "Stretch", $asm00.TypeRef("Windows.UI.Xaml.Media.Stretch"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Shapes.Rectangle */ 

(function Rectangle$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.Shapes.Shape)) ();
  };

  function Rectangle__ctor () {
    $T00().prototype['_ctor'].call(this);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.Shapes.Shape"), 
      Name: "Windows.UI.Xaml.Shapes.Rectangle", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Rectangle__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.ResourceDictionary */ 

(function ResourceDictionary$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm06.System.Object, $asm06.System.Object))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Collections.Generic.KeyValuePair$b2.Of($asm06.System.Object, $asm06.System.Object))) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm08.System.Linq.Enumerable)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize(System.Array.Of($asm06.System.Collections.Generic.KeyValuePair$b2.Of($asm06.System.Object, $asm06.System.Object)))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Array)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.NotImplementedException)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm01.System.Uri)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$asm06.TypeRef("System.Object"), $asm06.TypeRef("System.Object")]), null))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("System.Boolean"), [$asm06.TypeRef("System.Collections.Generic.IEnumerable`1", ["!!0"]), "!!0"], ["TSource"]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Array"), $asm06.TypeRef("System.Int32")]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.NotImplementedException"), null))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("System.Boolean"), [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm06.TypeRef("System.Object"), $asm06.TypeRef("System.Object")])]))) ();
  };
  var $S05 = function () {
    return ($S05 = JSIL.Memoize(new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm06.TypeRef("System.Object"), $asm06.TypeRef("System.Object")])]), $asm06.TypeRef("System.Int32")]))) ();
  };
  var $S06 = function () {
    return ($S06 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("System.Boolean"), [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm06.TypeRef("System.Object"), $asm06.TypeRef("System.Object")])]))) ();
  };
  var $S07 = function () {
    return ($S07 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("System.Boolean"), [$asm06.TypeRef("System.Object")]))) ();
  };

  function ResourceDictionary__ctor () {
    $T00().prototype['_ctor'].call(this);
    this._resourcesContainer = $S00().Construct();
  };

  function ResourceDictionary_Add$00 (item) {
    (this._resourcesContainer)['Add'](
      item['get_Key'](), 
      item['get_Value']()
    );
  };

  function ResourceDictionary_Add$01 (key, value) {
    (this._resourcesContainer)['Add'](key, value);
  };

  function ResourceDictionary_Clear () {
    (this._resourcesContainer)['Clear']();
  };

  function ResourceDictionary_Contains$02 (item) {
    return $S01().CallStatic($T04(), "Contains$b1", [$asm06.System.Collections.Generic.KeyValuePair$b2.Of($asm06.System.Object, $asm06.System.Object)], this._resourcesContainer, item['MemberwiseClone']());
  };

  function ResourceDictionary_Contains$03 (key) {
    return (this._resourcesContainer)['ContainsKey'](key);
  };

  function ResourceDictionary_ContainsKey (key) {
    return (this._resourcesContainer)['ContainsKey'](key);
  };

  function ResourceDictionary_CopyTo$04 (array, arrayIndex) {
    if (this._resourcesContainer !== null) {

      for (var i = 0; i < ((this._resourcesContainer)['get_Count']() | 0); i = ((i + 1) | 0)) {
        array[(((arrayIndex | 0) + i) | 0)] = $T04()['ElementAt$b1']($T02())(this._resourcesContainer, i)['MemberwiseClone']();
      }
    }
  };

  function ResourceDictionary_CopyTo$05 (array, index) {
    $S02().CallVirtual("CopyTo", null, this, array, index);
  };

  function ResourceDictionary_get_Count () {
    return (this._resourcesContainer)['get_Count']();
  };

  function ResourceDictionary_get_IsFixedSize () {
    return false;
  };

  function ResourceDictionary_get_IsReadOnly () {
    return false;
  };

  function ResourceDictionary_get_IsSynchronized () {
    return false;
  };

  function ResourceDictionary_get_Item (key) {
    return (this._resourcesContainer)['get_Item'](key);
  };

  function ResourceDictionary_get_Keys () {
    return (this._resourcesContainer)['get_Keys']();
  };

  function ResourceDictionary_get_Source () {
    return this.ResourceDictionary$Source$value;
  };

  function ResourceDictionary_get_SyncRoot () {
    throw $S03().Construct();
  };

  function ResourceDictionary_get_Values () {
    return (this._resourcesContainer)['get_Values']();
  };

  function ResourceDictionary_GetEnumerator () {
    return $T01().prototype['GetEnumerator'].call(this._resourcesContainer);
  };

  function ResourceDictionary_Remove$06 (item) {
    return (this._resourcesContainer)['Remove'](item['get_Key']());
  };

  function ResourceDictionary_Remove$07 (key) {
    return (this._resourcesContainer)['Remove'](key);
  };

  function ResourceDictionary_set_Item (key, value) {
    (this._resourcesContainer)['set_Item'](key, value);
  };

  function ResourceDictionary_set_Source (value) {
    this.ResourceDictionary$Source$value = value;
  };

  function ResourceDictionary_System_Collections_Generic_ICollection$lSystem_Collections_Generic_KeyValuePair$lSystem_Object$cmSystem_Object$g$g_Add (item) {
    this['Add'](item['MemberwiseClone']());
  };

  function ResourceDictionary_System_Collections_Generic_ICollection$lSystem_Collections_Generic_KeyValuePair$lSystem_Object$cmSystem_Object$g$g_Clear () {
    this['Clear']();
  };

  function ResourceDictionary_System_Collections_Generic_ICollection$lSystem_Collections_Generic_KeyValuePair$lSystem_Object$cmSystem_Object$g$g_Contains (item) {
    return $S04().CallVirtual("Contains", null, this, item['MemberwiseClone']());
  };

  function ResourceDictionary_System_Collections_Generic_ICollection$lSystem_Collections_Generic_KeyValuePair$lSystem_Object$cmSystem_Object$g$g_CopyTo (array, arrayIndex) {
    $S05().CallVirtual("CopyTo", null, this, array, arrayIndex);
  };

  function ResourceDictionary_System_Collections_Generic_ICollection$lSystem_Collections_Generic_KeyValuePair$lSystem_Object$cmSystem_Object$g$g_Remove (item) {
    return $S06().CallVirtual("Remove", null, this, item['MemberwiseClone']());
  };

  function ResourceDictionary_System_Collections_Generic_IDictionary$lSystem_Object$cmSystem_Object$g_Add (key, value) {
    this['Add'](key, value);
  };

  function ResourceDictionary_System_Collections_Generic_IDictionary$lSystem_Object$cmSystem_Object$g_ContainsKey (key) {
    return this['ContainsKey'](key);
  };

  function ResourceDictionary_System_Collections_Generic_IDictionary$lSystem_Object$cmSystem_Object$g_get_Item (key) {
    return (this._resourcesContainer)['get_Item'](key);
  };

  function ResourceDictionary_System_Collections_Generic_IDictionary$lSystem_Object$cmSystem_Object$g_get_Keys () {
    return this['get_Keys']();
  };

  function ResourceDictionary_System_Collections_Generic_IDictionary$lSystem_Object$cmSystem_Object$g_get_Values () {
    return (this._resourcesContainer)['get_Values']();
  };

  function ResourceDictionary_System_Collections_Generic_IDictionary$lSystem_Object$cmSystem_Object$g_Remove (key) {
    return $S07().CallVirtual("Remove", null, this, key);
  };

  function ResourceDictionary_System_Collections_Generic_IDictionary$lSystem_Object$cmSystem_Object$g_set_Item (key, value) {
    (this._resourcesContainer)['set_Item'](key, value);
  };

  function ResourceDictionary_System_Collections_Generic_IDictionary$lSystem_Object$cmSystem_Object$g_TryGetValue (key, /* ref */ value) {
    return this['TryGetValue'](key, /* ref */ value);
  };

  function ResourceDictionary_System_Collections_IDictionary_get_Keys () {
    return (this._resourcesContainer)['get_Keys']();
  };

  function ResourceDictionary_System_Collections_IDictionary_get_Values () {
    return (this._resourcesContainer)['get_Values']();
  };

  function ResourceDictionary_System_Collections_IDictionary_GetEnumerator () {
    return $T01().prototype['GetEnumerator'].call(this._resourcesContainer);
  };

  function ResourceDictionary_System_Collections_IDictionary_Remove (key) {
    (this._resourcesContainer)['Remove'](key);
  };

  function ResourceDictionary_System_Collections_IEnumerable_GetEnumerator () {
    return $T01().prototype['GetEnumerator'].call(this._resourcesContainer);
  };

  function ResourceDictionary_TryGetValue (key, /* ref */ value) {
    return (this._resourcesContainer)['TryGetValue'](key, /* ref */ value);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), 
      Name: "Windows.UI.Xaml.ResourceDictionary", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ResourceDictionary__ctor
    );

    $.Method({Static:false, Public:true }, "Add", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.Object, $.Object])), 
      ResourceDictionary_Add$00
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Add", 
      new JSIL.MethodSignature(null, [$.Object, $.Object]), 
      ResourceDictionary_Add$01
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Clear", 
      JSIL.MethodSignature.Void, 
      ResourceDictionary_Clear
    );

    $.Method({Static:false, Public:true }, "Contains", 
      new JSIL.MethodSignature($.Boolean, [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.Object, $.Object])]), 
      ResourceDictionary_Contains$02
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Contains", 
      new JSIL.MethodSignature($.Boolean, [$.Object]), 
      ResourceDictionary_Contains$03
    );

    $.Method({Static:false, Public:true }, "ContainsKey", 
      new JSIL.MethodSignature($.Boolean, [$.Object]), 
      ResourceDictionary_ContainsKey
    );

    $.Method({Static:false, Public:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.Object, $.Object])]), $.Int32]), 
      ResourceDictionary_CopyTo$04
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CopyTo", 
      new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Array"), $.Int32]), 
      ResourceDictionary_CopyTo$05
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Count", 
      JSIL.MethodSignature.Return($.Int32), 
      ResourceDictionary_get_Count
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_IsFixedSize", 
      JSIL.MethodSignature.Return($.Boolean), 
      ResourceDictionary_get_IsFixedSize
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_IsReadOnly", 
      JSIL.MethodSignature.Return($.Boolean), 
      ResourceDictionary_get_IsReadOnly
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_IsSynchronized", 
      JSIL.MethodSignature.Return($.Boolean), 
      ResourceDictionary_get_IsSynchronized
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_Item", 
      new JSIL.MethodSignature($.Object, [$.Object]), 
      ResourceDictionary_get_Item
    );

    $.Method({Static:false, Public:true }, "get_Keys", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.ICollection`1", [$.Object])), 
      ResourceDictionary_get_Keys
    );

    $.Method({Static:false, Public:true }, "get_Source", 
      JSIL.MethodSignature.Return($asm01.TypeRef("System.Uri")), 
      ResourceDictionary_get_Source
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "get_SyncRoot", 
      JSIL.MethodSignature.Return($.Object), 
      ResourceDictionary_get_SyncRoot
    );

    $.Method({Static:false, Public:true }, "get_Values", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.ICollection`1", [$.Object])), 
      ResourceDictionary_get_Values
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.IEnumerator`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.Object, $.Object])])), 
      ResourceDictionary_GetEnumerator
    );

    $.Method({Static:false, Public:true }, "Remove", 
      new JSIL.MethodSignature($.Boolean, [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.Object, $.Object])]), 
      ResourceDictionary_Remove$06
    );

    $.Method({Static:false, Public:true }, "Remove", 
      new JSIL.MethodSignature($.Boolean, [$.Object]), 
      ResourceDictionary_Remove$07
    );

    $.Method({Static:false, Public:true , Virtual:true }, "set_Item", 
      new JSIL.MethodSignature(null, [$.Object, $.Object]), 
      ResourceDictionary_set_Item
    );

    $.Method({Static:false, Public:true }, "set_Source", 
      JSIL.MethodSignature.Action($asm01.TypeRef("System.Uri")), 
      ResourceDictionary_set_Source
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lSystem.Collections.Generic.KeyValuePair$lSystem.Object$cmSystem.Object$g$g.Add", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.Object, $.Object])), 
      ResourceDictionary_System_Collections_Generic_ICollection$lSystem_Collections_Generic_KeyValuePair$lSystem_Object$cmSystem_Object$g$g_Add
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm06.TypeRef("System.Object"), $asm06.TypeRef("System.Object")])]), "Add");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lSystem.Collections.Generic.KeyValuePair$lSystem.Object$cmSystem.Object$g$g.Clear", 
      JSIL.MethodSignature.Void, 
      ResourceDictionary_System_Collections_Generic_ICollection$lSystem_Collections_Generic_KeyValuePair$lSystem_Object$cmSystem_Object$g$g_Clear
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm06.TypeRef("System.Object"), $asm06.TypeRef("System.Object")])]), "Clear");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lSystem.Collections.Generic.KeyValuePair$lSystem.Object$cmSystem.Object$g$g.Contains", 
      new JSIL.MethodSignature($.Boolean, [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.Object, $.Object])]), 
      ResourceDictionary_System_Collections_Generic_ICollection$lSystem_Collections_Generic_KeyValuePair$lSystem_Object$cmSystem_Object$g$g_Contains
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm06.TypeRef("System.Object"), $asm06.TypeRef("System.Object")])]), "Contains");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lSystem.Collections.Generic.KeyValuePair$lSystem.Object$cmSystem.Object$g$g.CopyTo", 
      new JSIL.MethodSignature(null, [$jsilcore.TypeRef("System.Array", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.Object, $.Object])]), $.Int32]), 
      ResourceDictionary_System_Collections_Generic_ICollection$lSystem_Collections_Generic_KeyValuePair$lSystem_Object$cmSystem_Object$g$g_CopyTo
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm06.TypeRef("System.Object"), $asm06.TypeRef("System.Object")])]), "CopyTo");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.ICollection$lSystem.Collections.Generic.KeyValuePair$lSystem.Object$cmSystem.Object$g$g.Remove", 
      new JSIL.MethodSignature($.Boolean, [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.Object, $.Object])]), 
      ResourceDictionary_System_Collections_Generic_ICollection$lSystem_Collections_Generic_KeyValuePair$lSystem_Object$cmSystem_Object$g$g_Remove
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$asm06.TypeRef("System.Object"), $asm06.TypeRef("System.Object")])]), "Remove");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IDictionary$lSystem.Object$cmSystem.Object$g.Add", 
      new JSIL.MethodSignature(null, [$.Object, $.Object]), 
      ResourceDictionary_System_Collections_Generic_IDictionary$lSystem_Object$cmSystem_Object$g_Add
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IDictionary`2", [$asm06.TypeRef("System.Object"), $asm06.TypeRef("System.Object")]), "Add");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IDictionary$lSystem.Object$cmSystem.Object$g.ContainsKey", 
      new JSIL.MethodSignature($.Boolean, [$.Object]), 
      ResourceDictionary_System_Collections_Generic_IDictionary$lSystem_Object$cmSystem_Object$g_ContainsKey
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IDictionary`2", [$asm06.TypeRef("System.Object"), $asm06.TypeRef("System.Object")]), "ContainsKey");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IDictionary$lSystem.Object$cmSystem.Object$g.get_Item", 
      new JSIL.MethodSignature($.Object, [$.Object]), 
      ResourceDictionary_System_Collections_Generic_IDictionary$lSystem_Object$cmSystem_Object$g_get_Item
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IDictionary`2", [$asm06.TypeRef("System.Object"), $asm06.TypeRef("System.Object")]), "get_Item");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IDictionary$lSystem.Object$cmSystem.Object$g.get_Keys", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.ICollection`1", [$.Object])), 
      ResourceDictionary_System_Collections_Generic_IDictionary$lSystem_Object$cmSystem_Object$g_get_Keys
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IDictionary`2", [$asm06.TypeRef("System.Object"), $asm06.TypeRef("System.Object")]), "get_Keys");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IDictionary$lSystem.Object$cmSystem.Object$g.get_Values", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.Generic.ICollection`1", [$.Object])), 
      ResourceDictionary_System_Collections_Generic_IDictionary$lSystem_Object$cmSystem_Object$g_get_Values
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IDictionary`2", [$asm06.TypeRef("System.Object"), $asm06.TypeRef("System.Object")]), "get_Values");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IDictionary$lSystem.Object$cmSystem.Object$g.Remove", 
      new JSIL.MethodSignature($.Boolean, [$.Object]), 
      ResourceDictionary_System_Collections_Generic_IDictionary$lSystem_Object$cmSystem_Object$g_Remove
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IDictionary`2", [$asm06.TypeRef("System.Object"), $asm06.TypeRef("System.Object")]), "Remove");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IDictionary$lSystem.Object$cmSystem.Object$g.set_Item", 
      new JSIL.MethodSignature(null, [$.Object, $.Object]), 
      ResourceDictionary_System_Collections_Generic_IDictionary$lSystem_Object$cmSystem_Object$g_set_Item
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IDictionary`2", [$asm06.TypeRef("System.Object"), $asm06.TypeRef("System.Object")]), "set_Item");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IDictionary$lSystem.Object$cmSystem.Object$g.TryGetValue", 
      new JSIL.MethodSignature($.Boolean, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]), 
      ResourceDictionary_System_Collections_Generic_IDictionary$lSystem_Object$cmSystem_Object$g_TryGetValue
    )
      .Overrides($asm06.TypeRef("System.Collections.Generic.IDictionary`2", [$asm06.TypeRef("System.Object"), $asm06.TypeRef("System.Object")]), "TryGetValue");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IDictionary.get_Keys", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.ICollection")), 
      ResourceDictionary_System_Collections_IDictionary_get_Keys
    )
      .Overrides($asm06.TypeRef("System.Collections.IDictionary"), "get_Keys");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IDictionary.get_Values", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.ICollection")), 
      ResourceDictionary_System_Collections_IDictionary_get_Values
    )
      .Overrides($asm06.TypeRef("System.Collections.IDictionary"), "get_Values");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IDictionary.GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.IDictionaryEnumerator")), 
      ResourceDictionary_System_Collections_IDictionary_GetEnumerator
    )
      .Overrides($asm06.TypeRef("System.Collections.IDictionary"), "GetEnumerator");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IDictionary.Remove", 
      JSIL.MethodSignature.Action($.Object), 
      ResourceDictionary_System_Collections_IDictionary_Remove
    )
      .Overrides($asm06.TypeRef("System.Collections.IDictionary"), "Remove");

    $.Method({Static:false, Public:false, Virtual:true }, "System.Collections.IEnumerable.GetEnumerator", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Collections.IEnumerator")), 
      ResourceDictionary_System_Collections_IEnumerable_GetEnumerator
    )
      .Overrides($asm06.TypeRef("System.Collections.IEnumerable"), "GetEnumerator");

    $.Method({Static:false, Public:true }, "TryGetValue", 
      new JSIL.MethodSignature($.Boolean, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]), 
      ResourceDictionary_TryGetValue
    );

    $['Field']({Static:false, Public:false}, "_resourcesContainer", $asm06.TypeRef("System.Collections.Generic.Dictionary`2", [$.Object, $.Object])); 
    $['Field']({Static:false, Public:false}, "ResourceDictionary$Source$value", $asm01.TypeRef("System.Uri"))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true , Virtual:true }, "Count", $.Int32);

    $.Property({Static:false, Public:true }, "Keys", $asm06.TypeRef("System.Collections.Generic.ICollection`1", [$.Object]));

    $.Property({Static:false, Public:true }, "Source", $asm01.TypeRef("System.Uri"));

    $.Property({Static:false, Public:true }, "Values", $asm06.TypeRef("System.Collections.Generic.ICollection`1", [$.Object]));

    $.Property({Static:false, Public:true , Virtual:true }, "Item", $.Object);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IDictionary$lSystem.Object$cmSystem.Object$g.Keys", $asm06.TypeRef("System.Collections.Generic.ICollection`1", [$.Object]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IDictionary$lSystem.Object$cmSystem.Object$g.Values", $asm06.TypeRef("System.Collections.Generic.ICollection`1", [$.Object]));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.Generic.IDictionary$lSystem.Object$cmSystem.Object$g.Item", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "IsReadOnly", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "IsSynchronized", $.Boolean);

    $.Property({Static:false, Public:true , Virtual:true }, "SyncRoot", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "IsFixedSize", $.Boolean);

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IDictionary.Keys", $asm06.TypeRef("System.Collections.ICollection"));

    $.Property({Static:false, Public:false, Virtual:true }, "System.Collections.IDictionary.Values", $asm06.TypeRef("System.Collections.ICollection"));

    $.ImplementInterfaces(
      /* 0 */ $asm06.TypeRef("System.Collections.IDictionary"), 
      /* 1 */ $asm06.TypeRef("System.Collections.ICollection"), 
      /* 2 */ $asm06.TypeRef("System.Collections.Generic.IDictionary`2", [$.Object, $.Object]), 
      /* 3 */ $asm06.TypeRef("System.Collections.Generic.ICollection`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.Object, $.Object])]), 
      /* 4 */ $asm06.TypeRef("System.Collections.Generic.IEnumerable`1", [$asm06.TypeRef("System.Collections.Generic.KeyValuePair`2", [$.Object, $.Object])]), 
      /* 5 */ $asm06.TypeRef("System.Collections.IEnumerable")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Reflection.DefaultMemberAttribute"), function () { return ["Item"]; });

})();

/* class Windows.UI.Xaml.SetterBase */ 

(function SetterBase$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };

  function SetterBase__ctor () {
    $T04().prototype['_ctor'].call(this);
  };

  function SetterBase_get_IsSealed () {
    return $T01().$Cast(this['GetValue']($thisType.IsSealedProperty));
  };

  function SetterBase_IsSealed_Changed (d, e) {
  };

  function SetterBase_set_IsSealed (value) {
    this['SetValue']($thisType.IsSealedProperty, value);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), 
      Name: "Windows.UI.Xaml.SetterBase", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      SetterBase__ctor
    );

    $.Method({Static:false, Public:true }, "get_IsSealed", 
      JSIL.MethodSignature.Return($.Boolean), 
      SetterBase_get_IsSealed
    );

    $.Method({Static:true , Public:false}, "IsSealed_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      SetterBase_IsSealed_Changed
    );

    $.Method({Static:false, Public:false}, "set_IsSealed", 
      JSIL.MethodSignature.Action($.Boolean), 
      SetterBase_set_IsSealed
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "IsSealedProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function SetterBase__cctor () {
      $thisType.IsSealedProperty = $T00()['Register']("IsSealed", $T01().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['IsSealed_Changed'], function () { return JSIL.GetMethodInfo($thisType, "IsSealed_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      SetterBase__cctor
    );

    $.Property({Static:false, Public:true }, "IsSealed", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Setter */ 

(function Setter$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.SetterBase)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.Style)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };

  function Setter__ctor$00 () {
    $T04().prototype['_ctor'].call(this);
  };

  function Setter__ctor$01 (targetProperty, value) {
    $T04().prototype['_ctor'].call(this);
    this['set_Property'](targetProperty);
    this['set_Value'](value);
  };

  function Setter_get_Property () {
    return $T00().$Cast(this['GetValue']($thisType.PropertyProperty));
  };

  function Setter_get_Value () {
    return this['GetValue']($thisType.ValueProperty);
  };

  function Setter_Property_Changed (d, e) {
  };

  function Setter_set_Property (value) {
    this['SetValue']($thisType.PropertyProperty, value);
  };

  function Setter_set_Value (value) {
    this['SetValue']($thisType.ValueProperty, value);
  };

  function Setter_Value_Changed (d, e) {
    var setter = $thisType.$Cast(d);
    if (setter.INTERNAL_ParentStyle !== null) {
      (setter.INTERNAL_ParentStyle)['NotifySetterValueChanged'](setter);
    }
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.SetterBase"), 
      Name: "Windows.UI.Xaml.Setter", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Setter__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"), $.Object]), 
      Setter__ctor$01
    );

    $.Method({Static:false, Public:true }, "get_Property", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")), 
      Setter_get_Property
    );

    $.Method({Static:false, Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($.Object), 
      Setter_get_Value
    );

    $.Method({Static:true , Public:false}, "Property_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Setter_Property_Changed
    );

    $.Method({Static:false, Public:true }, "set_Property", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")), 
      Setter_set_Property
    );

    $.Method({Static:false, Public:true }, "set_Value", 
      JSIL.MethodSignature.Action($.Object), 
      Setter_set_Value
    );

    $.Method({Static:true , Public:false}, "Value_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Setter_Value_Changed
    );

    $['Field']({Static:false, Public:false}, "INTERNAL_ParentStyle", $asm00.TypeRef("Windows.UI.Xaml.Style")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "PropertyProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "ValueProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function Setter__cctor () {
      $thisType.PropertyProperty = $T00()['Register']("Property", $T00().__Type__, $thisType.__Type__, $S00().Construct(null, $T02()['New']($thisType, $thisType['Property_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Property_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.ValueProperty = $T00()['Register']("Value", $T03().__Type__, $thisType.__Type__, $S00().Construct(null, $T02()['New']($thisType, $thisType['Value_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Value_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Setter__cctor
    );

    $.Property({Static:false, Public:true }, "Property", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"));

    $.Property({Static:false, Public:true }, "Value", $.Object);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.DataTemplate */ 

(function DataTemplate$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkTemplate)) ();
  };

  function DataTemplate__ctor () {
    $T00().prototype['_ctor'].call(this);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.FrameworkTemplate"), 
      Name: "Windows.UI.Xaml.DataTemplate", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      DataTemplate__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.DispatcherTimer */ 

(function DispatcherTimer$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.TimeSpan)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.EventHandler$b1.Of($asm06.System.Object))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Delegate)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Threading.Interlocked)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.EventArgs)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Int64)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Action)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Object)) ();
  };

  function DispatcherTimer__ctor () {
    this._interval = new ($T00())();
  };

  function DispatcherTimer_add_Tick (value) {
    var eventHandler = this.Tick;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T02()['Combine'](eventHandler2, value);
      eventHandler = $T03()['CompareExchange$b1']($T01())(/* ref */ new JSIL['MemberReference'](this, "Tick"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  };

  function DispatcherTimer_get_Interval () {
    return this._interval;
  };

  function DispatcherTimer_get_IsEnabled () {
    return (this._timer !== null);
  };

  function DispatcherTimer_OnTick () {
    if (this.Tick !== null) {
      this.Tick(this, new ($T04())());
    }
  };

  function DispatcherTimer_remove_Tick (value) {
    var eventHandler = this.Tick;

    do {
      var eventHandler2 = eventHandler;
      var value2 = $T02()['Remove'](eventHandler2, value);
      eventHandler = $T03()['CompareExchange$b1']($T01())(/* ref */ new JSIL['MemberReference'](this, "Tick"), value2, eventHandler2);
    } while (eventHandler !== eventHandler2);
  };

  function DispatcherTimer_set_Interval (value) {
    this._interval = value['MemberwiseClone']();
  };

  function DispatcherTimer_Start () {
    if (this._timer === null) {
      var intervalInMilliseconds = $T05()['FromNumber']((this._interval)['get_TotalMilliseconds']());
      this._timer = (setInterval($T06()['New'](this, $thisType.prototype['OnTick'], function () { return JSIL.GetMethodInfo($thisType, "OnTick", JSIL.MethodSignature.Void, false); }),intervalInMilliseconds));
    }
  };

  function DispatcherTimer_Stop () {
    if (this._timer !== null) {
      clearInterval(this._timer);
      this._timer = null;
    }
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.DispatcherTimer", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      DispatcherTimer__ctor
    );

    $.Method({Static:false, Public:true }, "add_Tick", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.EventHandler`1", [$.Object])), 
      DispatcherTimer_add_Tick
    );

    $.Method({Static:false, Public:true }, "get_Interval", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.TimeSpan")), 
      DispatcherTimer_get_Interval
    );

    $.Method({Static:false, Public:true }, "get_IsEnabled", 
      JSIL.MethodSignature.Return($.Boolean), 
      DispatcherTimer_get_IsEnabled
    );

    $.Method({Static:false, Public:false}, "OnTick", 
      JSIL.MethodSignature.Void, 
      DispatcherTimer_OnTick
    );

    $.Method({Static:false, Public:true }, "remove_Tick", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.EventHandler`1", [$.Object])), 
      DispatcherTimer_remove_Tick
    );

    $.Method({Static:false, Public:true }, "set_Interval", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.TimeSpan")), 
      DispatcherTimer_set_Interval
    );

    $.Method({Static:false, Public:true }, "Start", 
      JSIL.MethodSignature.Void, 
      DispatcherTimer_Start
    );

    $.Method({Static:false, Public:true }, "Stop", 
      JSIL.MethodSignature.Void, 
      DispatcherTimer_Stop
    );

    $['Field']({Static:false, Public:false}, "_timer", $.Object)
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute")); 
    $['Field']({Static:false, Public:false}, "_interval", $asm06.TypeRef("System.TimeSpan")); 
    $['Field']({Static:false, Public:false}, "Tick", $asm06.TypeRef("System.EventHandler`1", [$.Object])); 
    $.Property({Static:false, Public:true }, "Interval", $asm06.TypeRef("System.TimeSpan"));

    $.Property({Static:false, Public:true }, "IsEnabled", $.Boolean);

    $.Event({Static:false, Public:true }, "Tick", $asm06.TypeRef("System.EventHandler`1", [$.Object]));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.DispatcherTimer+<>c__DisplayClassf */ 

(function $l$gc__DisplayClassf$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_Simulator)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Action)) ();
  };

  function $l$gc__DisplayClassf__ctor () {
  };

  function $l$gc__DisplayClassf_$lStartTimer$gb__c (state) {
    $T01()['get_WebControl']().Dispatcher['BeginInvoke']($T02()['New'](this, $thisType.prototype['$lStartTimer$gb__d'], function () { return JSIL.GetMethodInfo($thisType, "$lStartTimer$gb__d", JSIL.MethodSignature.Void, false); }));
  };

  function $l$gc__DisplayClassf_$lStartTimer$gb__d () {
    this.action();
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.DispatcherTimer+<>c__DisplayClassf", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClassf__ctor
    );

    $.Method({Static:false, Public:true }, "$lStartTimer$gb__c", 
      JSIL.MethodSignature.Action($.Object), 
      $l$gc__DisplayClassf_$lStartTimer$gb__c
    );

    $.Method({Static:false, Public:true }, "$lStartTimer$gb__d", 
      JSIL.MethodSignature.Void, 
      $l$gc__DisplayClassf_$lStartTimer$gb__d
    );

    $['Field']({Static:false, Public:true }, "action", $asm06.TypeRef("System.Action")); 
    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

})();

/* enum Windows.UI.Xaml.GridUnitType */ 

JSIL.MakeEnum(
  {
    FullName: "Windows.UI.Xaml.GridUnitType", 
    BaseType: $asm06.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Auto: 0, 
    Pixel: 1, 
    Star: 2, 
  }
);

/* struct Windows.UI.Xaml.CornerRadius */ 

(function CornerRadius$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.DotNetForHtml5.Core.TypeFromStringConverters)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Func$b2.Of($asm06.System.String, $asm06.System.Object))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize(System.Array.Of($asm06.System.String))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Char)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize(System.Array.Of($asm06.System.Char))) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.FormatException)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize(System.Array.Of($asm06.System.Object))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.CornerRadius"), [$asm06.TypeRef("System.Double")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.CornerRadius"), [
        $asm06.TypeRef("System.Double"), $asm06.TypeRef("System.Double"), 
        $asm06.TypeRef("System.Double"), $asm06.TypeRef("System.Double")
      ]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.FormatException"), [$asm06.TypeRef("System.String")]))) ();
  };

  function CornerRadius__ctor$00 (uniformRadius) {
    this._topLeftRadius = +uniformRadius;
    this._bottomLeftRadius = +uniformRadius;
    this._topRightRadius = +uniformRadius;
    this._bottomRightRadius = +uniformRadius;
  };

  function CornerRadius__ctor$01 (topLeft, topRight, bottomRight, bottomLeft) {
    this._topLeftRadius = +topLeft;
    this._bottomLeftRadius = +bottomLeft;
    this._topRightRadius = +topRight;
    this._bottomRightRadius = +bottomRight;
  };

  function CornerRadius_Equals$02 (cornerRadius) {
    return $thisType['op_Equality'](this, cornerRadius);
  };

  function CornerRadius_Object_Equals (obj) {
    return ($thisType.$Is(obj) && $thisType['op_Equality']($thisType.$Cast(obj), this));
  };

  function CornerRadius_get_BottomLeft () {
    return this._bottomLeftRadius;
  };

  function CornerRadius_get_BottomRight () {
    return this._bottomRightRadius;
  };

  function CornerRadius_get_TopLeft () {
    return this._topLeftRadius;
  };

  function CornerRadius_get_TopRight () {
    return this._topRightRadius;
  };

  function CornerRadius_GetHashCode () {
    return (((((this['get_TopLeft']())['GetHashCode']() | 0) ^ ((this['get_TopRight']())['GetHashCode']() | 0)) ^ ((this['get_BottomRight']())['GetHashCode']() | 0)) ^ ((this['get_BottomLeft']())['GetHashCode']() | 0));
  };

  function CornerRadius_INTERNAL_ConvertFromString (cornerRadiusAsString) {
    var array = (JSIL.SplitString(cornerRadiusAsString, JSIL.Array.New($T06(), [","])));
    var uniformRadius = new JSIL.BoxedVariable(0);
    var topLeft = new JSIL.BoxedVariable(0);
    var topRight = new JSIL.BoxedVariable(0);
    var bottomRight = new JSIL.BoxedVariable(0);
    var bottomLeft = new JSIL.BoxedVariable(0);
    if ((array.length | 0) === 1) {
      uniformRadius.set(0);
      if ($T02()['TryParse'](array[0], /* ref */ uniformRadius)) {
        var result = $S00().Construct(uniformRadius.get());
        return result;
      }
    } else if ((array.length | 0) === 4) {
      topLeft.set(0);
      topRight.set(0);
      bottomRight.set(0);
      bottomLeft.set(0);
      var flag = $T02()['TryParse'](array[0], /* ref */ topLeft);
      flag = flag && 
      $T02()['TryParse'](array[1], /* ref */ topRight);
      flag = flag && 
      $T02()['TryParse'](array[2], /* ref */ bottomRight);
      flag = flag && 
      $T02()['TryParse'](array[3], /* ref */ bottomLeft);
      if (flag) {
        result = $S01().Construct(topLeft.get(), topRight.get(), bottomRight.get(), bottomLeft.get());
        return result;
      }
    }
    throw $S02().Construct(JSIL.ConcatString(cornerRadiusAsString, "is not an elligible value for a CornerRadius"));
  };

  function CornerRadius_op_Equality (cr1, cr2) {
    return (!((+cr1['get_TopLeft']() !== +cr2['get_TopLeft']()) || 
        (+cr1['get_TopRight']() !== +cr2['get_TopRight']()) || 
        (+cr1['get_BottomRight']() !== +cr2['get_BottomRight']())) && (+cr1['get_BottomLeft']() === +cr2['get_BottomLeft']()));
  };

  function CornerRadius_op_Inequality (cr1, cr2) {
    return ((+cr1['get_TopLeft']() !== +cr2['get_TopLeft']()) || 
      (+cr1['get_TopRight']() !== +cr2['get_TopRight']()) || 
      (+cr1['get_BottomRight']() !== +cr2['get_BottomRight']()) || (+cr1['get_BottomLeft']() !== +cr2['get_BottomLeft']()));
  };

  function CornerRadius_set_BottomLeft (value) {
    this._bottomLeftRadius = +value;
  };

  function CornerRadius_set_BottomRight (value) {
    this._bottomRightRadius = +value;
  };

  function CornerRadius_set_TopLeft (value) {
    this._topLeftRadius = +value;
  };

  function CornerRadius_set_TopRight (value) {
    this._topRightRadius = +value;
  };

  function CornerRadius_toString () {
    return JSIL.ConcatString.apply(null, JSIL.Array.New($T03(), [this['get_TopLeft'](), ",", this['get_TopRight'](), ",", this['get_BottomRight'](), ",", this['get_BottomLeft']()]));
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "Windows.UI.Xaml.CornerRadius", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 4, 
      SequentialLayout: true, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Double), 
      CornerRadius__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Double, $.Double, 
          $.Double, $.Double
        ]), 
      CornerRadius__ctor$01
    );

    $.Method({Static:false, Public:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Type]), 
      CornerRadius_Equals$02
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object]), 
      CornerRadius_Object_Equals
    );

    $.Method({Static:false, Public:true }, "get_BottomLeft", 
      JSIL.MethodSignature.Return($.Double), 
      CornerRadius_get_BottomLeft
    );

    $.Method({Static:false, Public:true }, "get_BottomRight", 
      JSIL.MethodSignature.Return($.Double), 
      CornerRadius_get_BottomRight
    );

    $.Method({Static:false, Public:true }, "get_TopLeft", 
      JSIL.MethodSignature.Return($.Double), 
      CornerRadius_get_TopLeft
    );

    $.Method({Static:false, Public:true }, "get_TopRight", 
      JSIL.MethodSignature.Return($.Double), 
      CornerRadius_get_TopRight
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32), 
      CornerRadius_GetHashCode
    );

    $.Method({Static:true , Public:false}, "INTERNAL_ConvertFromString", 
      new JSIL.MethodSignature($.Object, [$.String]), 
      CornerRadius_INTERNAL_ConvertFromString
    );

    $.Method({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      CornerRadius_op_Equality
    );

    $.Method({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      CornerRadius_op_Inequality
    );

    $.Method({Static:false, Public:true }, "set_BottomLeft", 
      JSIL.MethodSignature.Action($.Double), 
      CornerRadius_set_BottomLeft
    );

    $.Method({Static:false, Public:true }, "set_BottomRight", 
      JSIL.MethodSignature.Action($.Double), 
      CornerRadius_set_BottomRight
    );

    $.Method({Static:false, Public:true }, "set_TopLeft", 
      JSIL.MethodSignature.Action($.Double), 
      CornerRadius_set_TopLeft
    );

    $.Method({Static:false, Public:true }, "set_TopRight", 
      JSIL.MethodSignature.Action($.Double), 
      CornerRadius_set_TopRight
    );

    $.Method({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String), 
      CornerRadius_toString
    );

    $['Field']({Static:false, Public:false}, "_topLeftRadius", $.Double); 
    $['Field']({Static:false, Public:false}, "_bottomLeftRadius", $.Double); 
    $['Field']({Static:false, Public:false}, "_topRightRadius", $.Double); 
    $['Field']({Static:false, Public:false}, "_bottomRightRadius", $.Double); 
    function CornerRadius__cctor () {
      $T00()['RegisterConverter']($thisType.__Type__, $T01()['New']($thisType, $thisType['INTERNAL_ConvertFromString'], function () { return JSIL.GetMethodInfo($thisType, "INTERNAL_ConvertFromString", new JSIL.MethodSignature($asm06.System.Object, [$asm06.System.String]), true); }));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      CornerRadius__cctor
    );

    $.Property({Static:false, Public:true }, "BottomLeft", $.Double);

    $.Property({Static:false, Public:true }, "BottomRight", $.Double);

    $.Property({Static:false, Public:true }, "TopLeft", $.Double);

    $.Property({Static:false, Public:true }, "TopRight", $.Double);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct Windows.UI.Xaml.Thickness */ 

(function Thickness$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.DotNetForHtml5.Core.TypeFromStringConverters)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Func$b2.Of($asm06.System.String, $asm06.System.Object))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize(System.Array.Of($asm06.System.String))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Char)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize(System.Array.Of($asm06.System.Char))) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.FormatException)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize(System.Array.Of($asm06.System.Object))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.Thickness"), [$asm06.TypeRef("System.Double")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.Thickness"), [
        $asm06.TypeRef("System.Double"), $asm06.TypeRef("System.Double"), 
        $asm06.TypeRef("System.Double"), $asm06.TypeRef("System.Double")
      ]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.FormatException"), [$asm06.TypeRef("System.String")]))) ();
  };

  function Thickness__ctor$00 (uniformLength) {
    this._left = +uniformLength;
    this._top = +uniformLength;
    this._right = +uniformLength;
    this._bottom = +uniformLength;
  };

  function Thickness__ctor$01 (left, top, right, bottom) {
    this._left = +left;
    this._top = +top;
    this._right = +right;
    this._bottom = +bottom;
  };

  function Thickness_Object_Equals (obj) {
    return ($thisType.$Is(obj) && $thisType['op_Equality']($thisType.$Cast(obj), this));
  };

  function Thickness_Equals$02 (thickness) {
    return $thisType['op_Equality'](thickness, this);
  };

  function Thickness_get_Bottom () {
    return this._bottom;
  };

  function Thickness_get_Left () {
    return this._left;
  };

  function Thickness_get_Right () {
    return this._right;
  };

  function Thickness_get_Top () {
    return this._top;
  };

  function Thickness_GetHashCode () {
    return (((((this['get_Left']())['GetHashCode']() | 0) ^ ((this['get_Top']())['GetHashCode']() | 0)) ^ ((this['get_Right']())['GetHashCode']() | 0)) ^ ((this['get_Bottom']())['GetHashCode']() | 0));
  };

  function Thickness_INTERNAL_ConvertFromString (thicknessAsString) {
    var array = (JSIL.SplitString(thicknessAsString, JSIL.Array.New($T06(), [","])));
    var uniformLength = new JSIL.BoxedVariable(0);
    var num = new JSIL.BoxedVariable(0);
    var num2 = new JSIL.BoxedVariable(0);
    var left = new JSIL.BoxedVariable(0);
    var top = new JSIL.BoxedVariable(0);
    var right = new JSIL.BoxedVariable(0);
    var bottom = new JSIL.BoxedVariable(0);
    if ((array.length | 0) === 1) {
      uniformLength.set(0);
      if ($T02()['TryParse'](array[0], /* ref */ uniformLength)) {
        var result = $S00().Construct(uniformLength.get());
        return result;
      }
    } else if ((array.length | 0) === 2) {
      num.set(0);
      num2.set(0);
      var flag = $T02()['TryParse'](array[0], /* ref */ num);
      flag = flag && 
      $T02()['TryParse'](array[1], /* ref */ num2);
      if (flag) {
        result = $S01().Construct(num.get(), num2.get(), num.get(), num2.get());
        return result;
      }
    } else if ((array.length | 0) === 4) {
      left.set(0);
      top.set(0);
      right.set(0);
      bottom.set(0);
      flag = $T02()['TryParse'](array[0], /* ref */ left);
      flag = flag && 
      $T02()['TryParse'](array[1], /* ref */ top);
      flag = flag && 
      $T02()['TryParse'](array[2], /* ref */ right);
      flag = flag && 
      $T02()['TryParse'](array[3], /* ref */ bottom);
      if (flag) {
        result = $S01().Construct(left.get(), top.get(), right.get(), bottom.get());
        return result;
      }
    }
    throw $S02().Construct(JSIL.ConcatString(thicknessAsString, " is not an eligible value for a Thickness"));
  };

  function Thickness_op_Equality (t1, t2) {
    return (!((+t1['get_Left']() !== +t2['get_Left']()) || 
        (+t1['get_Top']() !== +t2['get_Top']()) || 
        (+t1['get_Bottom']() !== +t2['get_Bottom']())) && (+t1['get_Right']() === +t2['get_Right']()));
  };

  function Thickness_op_Inequality (t1, t2) {
    return ((+t1['get_Left']() !== +t2['get_Left']()) || 
      (+t1['get_Top']() !== +t2['get_Top']()) || 
      (+t1['get_Bottom']() !== +t2['get_Bottom']()) || (+t1['get_Right']() !== +t2['get_Right']()));
  };

  function Thickness_set_Bottom (value) {
    this._bottom = +value;
  };

  function Thickness_set_Left (value) {
    this._left = +value;
  };

  function Thickness_set_Right (value) {
    this._right = +value;
  };

  function Thickness_set_Top (value) {
    this._top = +value;
  };

  function Thickness_toString () {
    return JSIL.ConcatString.apply(null, JSIL.Array.New($T03(), [this['get_Left'](), ",", this['get_Top'](), ",", this['get_Right'](), ",", this['get_Bottom']()]));
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "Windows.UI.Xaml.Thickness", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 4, 
      SequentialLayout: true, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Double), 
      Thickness__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Double, $.Double, 
          $.Double, $.Double
        ]), 
      Thickness__ctor$01
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object]), 
      Thickness_Object_Equals
    );

    $.Method({Static:false, Public:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Type]), 
      Thickness_Equals$02
    );

    $.Method({Static:false, Public:true }, "get_Bottom", 
      JSIL.MethodSignature.Return($.Double), 
      Thickness_get_Bottom
    );

    $.Method({Static:false, Public:true }, "get_Left", 
      JSIL.MethodSignature.Return($.Double), 
      Thickness_get_Left
    );

    $.Method({Static:false, Public:true }, "get_Right", 
      JSIL.MethodSignature.Return($.Double), 
      Thickness_get_Right
    );

    $.Method({Static:false, Public:true }, "get_Top", 
      JSIL.MethodSignature.Return($.Double), 
      Thickness_get_Top
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32), 
      Thickness_GetHashCode
    );

    $.Method({Static:true , Public:false}, "INTERNAL_ConvertFromString", 
      new JSIL.MethodSignature($.Object, [$.String]), 
      Thickness_INTERNAL_ConvertFromString
    );

    $.Method({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      Thickness_op_Equality
    );

    $.Method({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      Thickness_op_Inequality
    );

    $.Method({Static:false, Public:true }, "set_Bottom", 
      JSIL.MethodSignature.Action($.Double), 
      Thickness_set_Bottom
    );

    $.Method({Static:false, Public:true }, "set_Left", 
      JSIL.MethodSignature.Action($.Double), 
      Thickness_set_Left
    );

    $.Method({Static:false, Public:true }, "set_Right", 
      JSIL.MethodSignature.Action($.Double), 
      Thickness_set_Right
    );

    $.Method({Static:false, Public:true }, "set_Top", 
      JSIL.MethodSignature.Action($.Double), 
      Thickness_set_Top
    );

    $.Method({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String), 
      Thickness_toString
    );

    $['Field']({Static:false, Public:false}, "_left", $.Double); 
    $['Field']({Static:false, Public:false}, "_top", $.Double); 
    $['Field']({Static:false, Public:false}, "_right", $.Double); 
    $['Field']({Static:false, Public:false}, "_bottom", $.Double); 
    function Thickness__cctor () {
      $T00()['RegisterConverter']($thisType.__Type__, $T01()['New']($thisType, $thisType['INTERNAL_ConvertFromString'], function () { return JSIL.GetMethodInfo($thisType, "INTERNAL_ConvertFromString", new JSIL.MethodSignature($asm06.System.Object, [$asm06.System.String]), true); }));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Thickness__cctor
    );

    $.Property({Static:false, Public:true }, "Bottom", $.Double);

    $.Property({Static:false, Public:true }, "Left", $.Double);

    $.Property({Static:false, Public:true }, "Right", $.Double);

    $.Property({Static:false, Public:true }, "Top", $.Double);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.ExceptionRoutedEventArgs */ 

(function ExceptionRoutedEventArgs$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventArgs)) ();
  };

  function ExceptionRoutedEventArgs__ctor$00 (errorMessage) {
    this._errorMessage = "";
    $T01().prototype['_ctor'].call(this);
    this._errorMessage = errorMessage;
  };

  function ExceptionRoutedEventArgs__ctor$01 () {
    this._errorMessage = "";
    $T01().prototype['_ctor'].call(this);
  };

  function ExceptionRoutedEventArgs_get_ErrorMessage () {
    return this._errorMessage;
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs"), 
      Name: "Windows.UI.Xaml.ExceptionRoutedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String), 
      ExceptionRoutedEventArgs__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      ExceptionRoutedEventArgs__ctor$01
    );

    $.Method({Static:false, Public:true }, "get_ErrorMessage", 
      JSIL.MethodSignature.Return($.String), 
      ExceptionRoutedEventArgs_get_ErrorMessage
    );

    $['Field']({Static:false, Public:false}, "_errorMessage", $.String); 
    $.Property({Static:false, Public:true }, "ErrorMessage", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate Windows.UI.Xaml.ExceptionRoutedEventHandler */ 

JSIL.MakeDelegate("Windows.UI.Xaml.ExceptionRoutedEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.ExceptionRoutedEventArgs")]));

/* class Windows.UI.Xaml.PropertyPath */ 

(function PropertyPath$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.DotNetForHtml5.Core.TypeFromStringConverters)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Func$b2.Of($asm06.System.String, $asm06.System.Object))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };

  function PropertyPath__ctor (path) {
    $T03().prototype['_ctor'].call(this);
    this._path = path;
  };

  function PropertyPath_get_Path () {
    return this._path;
  };

  function PropertyPath_INTERNAL_ConvertFromString (path) {
    return new $thisType(path);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), 
      Name: "Windows.UI.Xaml.PropertyPath", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.String), 
      PropertyPath__ctor
    );

    $.Method({Static:false, Public:true }, "get_Path", 
      JSIL.MethodSignature.Return($.String), 
      PropertyPath_get_Path
    );

    $.Method({Static:true , Public:false}, "INTERNAL_ConvertFromString", 
      new JSIL.MethodSignature($.Object, [$.String]), 
      PropertyPath_INTERNAL_ConvertFromString
    );

    $['Field']({Static:false, Public:false}, "_path", $.String); 
    function PropertyPath__cctor () {
      $T00()['RegisterConverter']($thisType.__Type__, $T01()['New']($thisType, $thisType['INTERNAL_ConvertFromString'], function () { return JSIL.GetMethodInfo($thisType, "INTERNAL_ConvertFromString", new JSIL.MethodSignature($asm06.System.Object, [$asm06.System.String]), true); }));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      PropertyPath__cctor
    );

    $.Property({Static:false, Public:true }, "Path", $.String);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* struct Windows.UI.Xaml.GridLength */ 

(function GridLength$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.DotNetForHtml5.Core.TypeFromStringConverters)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Func$b2.Of($asm06.System.String, $asm06.System.Object))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.GridUnitType)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.GridLength"), [$asm06.TypeRef("System.Double"), $asm00.TypeRef("Windows.UI.Xaml.GridUnitType")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Exception"), [$asm06.TypeRef("System.String")]))) ();
  };

  function GridLength__ctor$00 (pixels) {
    this._value = +pixels;
    this._type = $T03().Pixel;
  };

  function GridLength__ctor$01 (value, type) {
    this._value = +(
      ((type['valueOf']() | 0) === 0)
         ? 0
         : value)
    ;
    this._type = type;
  };

  function GridLength_Clone () {
    var result = new $thisType();
    result._type = this._type;
    result._value = +this._value;
    return result;
  };

  function GridLength_Equals$02 (gridLength) {
    return $thisType['op_Equality'](this, gridLength);
  };

  function GridLength_Object_Equals (oCompare) {
    return ($thisType.$Is(oCompare) && $thisType['op_Equality'](this, $thisType.$Cast(oCompare)));
  };

  function GridLength_get_Auto () {
    return $S00().Construct(1, $T03().Auto);
  };

  function GridLength_get_GridUnitType () {
    return this._type;
  };

  function GridLength_get_IsAbsolute () {
    return (this._type === $T03().Pixel);
  };

  function GridLength_get_IsAuto () {
    return (this._type === $T03().Auto);
  };

  function GridLength_get_IsStar () {
    return (this._type === $T03().Star);
  };

  function GridLength_get_Value () {
    return this._value;
  };

  function GridLength_GetHashCode () {
    return ($asm00.Windows.UI.Xaml.GridUnitType.$Cast(Math.imul(((this._value) | 0), 7) + this._type))['valueOf']();
  };

  function GridLength_INTERNAL_ConvertFromString (gridLengthAsString) {
    var value = new JSIL.BoxedVariable(0);
    var text = (gridLengthAsString.trim().toLowerCase());
    if (System.String.EndsWith(text, "*")) {
      var text2 = (text.substr(0, (((text.length | 0) - 1) | 0)));
      if (text2 == "") {
        var result = $S00().Construct(1, $T03().Star);
      } else {
        if (!$T02()['TryParse'](text2, /* ref */ value)) {
          throw $S01().Construct(JSIL.ConcatString("Invalid GridLength: ", gridLengthAsString));
        }
        result = $S00().Construct(value.get(), $T03().Star);
      }
    } else if (text == "auto") {
      result = $S00().Construct(1, $T03().Auto);
    } else {
      if (!$T02()['TryParse'](text, /* ref */ value)) {
        throw $S01().Construct(JSIL.ConcatString("Invalid GridLength: ", gridLengthAsString));
      }
      result = $S00().Construct(value.get(), $T03().Pixel);
    }
    return result;
  };

  function GridLength_op_Equality (gl1, gl2) {
    return ((gl1['get_GridUnitType']() === gl2['get_GridUnitType']()) && (+gl1['get_Value']() === +gl2['get_Value']()));
  };

  function GridLength_op_Inequality (gl1, gl2) {
    return ((gl1['get_GridUnitType']() !== gl2['get_GridUnitType']()) || (+gl1['get_Value']() !== +gl2['get_Value']()));
  };

  function GridLength_toString () {
    if (this._type === $T03().Auto) {
      var result = "Auto";
    } else if (this._type === $T03().Star) {
      result = (
        (+this._value === 1)
           ? "*"
           : JSIL.ConcatString((this._value).toString(), "*"))
      ;
    } else {
      result = ((this._value).toString());
    }
    return result;
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "Windows.UI.Xaml.GridLength", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 2, 
      SequentialLayout: true, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Double), 
      GridLength__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Double, $asm00.TypeRef("Windows.UI.Xaml.GridUnitType")]), 
      GridLength__ctor$01
    );

    $.Method({Static:false, Public:true }, "Clone", 
      JSIL.MethodSignature.Return($.Type), 
      GridLength_Clone
    );

    $.Method({Static:false, Public:true }, "Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Type]), 
      GridLength_Equals$02
    );

    $.Method({Static:false, Public:true , Virtual:true }, "Object.Equals", 
      new JSIL.MethodSignature($.Boolean, [$.Object]), 
      GridLength_Object_Equals
    );

    $.Method({Static:true , Public:true }, "get_Auto", 
      JSIL.MethodSignature.Return($.Type), 
      GridLength_get_Auto
    );

    $.Method({Static:false, Public:true }, "get_GridUnitType", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.GridUnitType")), 
      GridLength_get_GridUnitType
    );

    $.Method({Static:false, Public:true }, "get_IsAbsolute", 
      JSIL.MethodSignature.Return($.Boolean), 
      GridLength_get_IsAbsolute
    );

    $.Method({Static:false, Public:true }, "get_IsAuto", 
      JSIL.MethodSignature.Return($.Boolean), 
      GridLength_get_IsAuto
    );

    $.Method({Static:false, Public:true }, "get_IsStar", 
      JSIL.MethodSignature.Return($.Boolean), 
      GridLength_get_IsStar
    );

    $.Method({Static:false, Public:true }, "get_Value", 
      JSIL.MethodSignature.Return($.Double), 
      GridLength_get_Value
    );

    $.Method({Static:false, Public:true , Virtual:true }, "GetHashCode", 
      JSIL.MethodSignature.Return($.Int32), 
      GridLength_GetHashCode
    );

    $.Method({Static:true , Public:false}, "INTERNAL_ConvertFromString", 
      new JSIL.MethodSignature($.Object, [$.String]), 
      GridLength_INTERNAL_ConvertFromString
    );

    $.Method({Static:true , Public:true }, "op_Equality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      GridLength_op_Equality
    );

    $.Method({Static:true , Public:true }, "op_Inequality", 
      new JSIL.MethodSignature($.Boolean, [$.Type, $.Type]), 
      GridLength_op_Inequality
    );

    $.Method({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String), 
      GridLength_toString
    );

    $['Field']({Static:false, Public:false}, "_value", $.Double); 
    $['Field']({Static:false, Public:false}, "_type", $asm00.TypeRef("Windows.UI.Xaml.GridUnitType")); 
    function GridLength__cctor () {
      $T00()['RegisterConverter']($thisType.__Type__, $T01()['New']($thisType, $thisType['INTERNAL_ConvertFromString'], function () { return JSIL.GetMethodInfo($thisType, "INTERNAL_ConvertFromString", new JSIL.MethodSignature($asm06.System.Object, [$asm06.System.String]), true); }));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      GridLength__cctor
    );

    $.Property({Static:true , Public:true }, "Auto", $.Type);

    $.Property({Static:false, Public:true }, "GridUnitType", $asm00.TypeRef("Windows.UI.Xaml.GridUnitType"));

    $.Property({Static:false, Public:true }, "IsAbsolute", $.Boolean);

    $.Property({Static:false, Public:true }, "IsAuto", $.Boolean);

    $.Property({Static:false, Public:true }, "IsStar", $.Boolean);

    $.Property({Static:false, Public:true }, "Value", $.Double);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.SetterBaseCollection */ 

(function SetterBaseCollection$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm01.System.Collections.ObjectModel.ObservableCollection$b1.Of($asm00.Windows.UI.Xaml.Setter))) ();
  };

  function SetterBaseCollection__ctor () {
    $T00().prototype['_ctor'].call(this);
  };

  JSIL.MakeType({
      BaseType: $asm01.TypeRef("System.Collections.ObjectModel.ObservableCollection`1", [$asm00.TypeRef("Windows.UI.Xaml.Setter")]), 
      Name: "Windows.UI.Xaml.SetterBaseCollection", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      SetterBaseCollection__ctor
    );

    $.ImplementInterfaces(
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Style */ 

(function Style$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Boolean)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.Windows.UI.Xaml.SetterBaseCollection)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Type)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventHandler)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.Delegate)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Threading.Interlocked)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm00.Windows.UI.Xaml.Setter))) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm06.System.Collections.ObjectModel.Collection$b1.Of($asm00.Windows.UI.Xaml.Setter))) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.System.Collections.IEnumerator)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.Windows.UI.Xaml.Setter)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm06.System.IDisposable)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm01.System.Collections.ObjectModel.ObservableCollection$b1.Of($asm00.Windows.UI.Xaml.Setter))) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm01.System.Collections.Specialized.NotifyCollectionChangedEventHandler)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm06.System.Collections.IEnumerable)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $IM00 = function () {
    return ($IM00 = JSIL.Memoize($asm06.System.Collections.IEnumerator.MoveNext)) ();
  };
  var $IM01 = function () {
    return ($IM01 = JSIL.Memoize($asm06.System.Collections.Generic.IEnumerator$b1.Of($asm00.Windows.UI.Xaml.Setter).get_Current)) ();
  };
  var $IM02 = function () {
    return ($IM02 = JSIL.Memoize($asm06.System.IDisposable.Dispose)) ();
  };
  var $IM03 = function () {
    return ($IM03 = JSIL.Memoize($asm06.System.Collections.IEnumerable.GetEnumerator)) ();
  };
  var $IM04 = function () {
    return ($IM04 = JSIL.Memoize($asm06.System.Collections.IEnumerator.get_Current)) ();
  };

  function Style__ctor$00 () {
    $T04().prototype['_ctor'].call(this);
    var value = new ($T05())();
    this['SetValue']($thisType.SettersProperty, value);
  };

  function Style__ctor$01 (targetType) {
    $T04().prototype['_ctor'].call(this);
    this['set_TargetType'](targetType);
    var value = new ($T05())();
    this['SetValue']($thisType.SettersProperty, value);
  };

  function Style_add_SetterValueChanged (value) {
    var routedEventHandler = this.SetterValueChanged;

    do {
      var routedEventHandler2 = routedEventHandler;
      var value2 = $T08()['Combine'](routedEventHandler2, value);
      routedEventHandler = $T09()['CompareExchange$b1']($T07())(/* ref */ new JSIL['MemberReference'](this, "SetterValueChanged"), value2, routedEventHandler2);
    } while (routedEventHandler !== routedEventHandler2);
  };

  function Style_BasedOn_Changed (d, e) {
  };

  function Style_get_BasedOn () {
    return $thisType.$Cast(this['GetValue']($thisType.BasedOnProperty));
  };

  function Style_get_IsSealed () {
    return $T03().$Cast(this['GetValue']($thisType.IsSealedProperty));
  };

  function Style_get_Setters () {
    return $T05().$Cast(this['GetValue']($thisType.SettersProperty));
  };

  function Style_get_TargetType () {
    return $T06().$Cast(this['GetValue']($thisType.TargetTypeProperty));
  };

  function Style_GetActiveValue (dependencyProperty) {
    if (this['get_Setters']() !== null) {
      var enumerator = (this['get_Setters']())['GetEnumerator']();
      try {

        while ($IM00().Call(enumerator, null)) {
          var current = $IM01().Call(enumerator, null);
          if (current['get_Property']() !== null) {
            if (current['get_Property']() === dependencyProperty) {
              var result = current['get_Value']();
              return result;
            }
          }
        }
      } finally {
        if (enumerator !== null) {
          $IM02().Call(enumerator, null);
        }
      }
    }
    if (this['get_BasedOn']() !== null) {
      result = (this['get_BasedOn']())['GetActiveValue'](dependencyProperty);
    } else {
      result = null;
    }
    return result;
  };

  function Style_IsSealed_Changed (d, e) {
  };

  function Style_NotifySetterValueChanged (setter) {
    if (this.SetterValueChanged !== null) {
      this.SetterValueChanged(setter, null);
    }
  };

  function Style_remove_SetterValueChanged (value) {
    var routedEventHandler = this.SetterValueChanged;

    do {
      var routedEventHandler2 = routedEventHandler;
      var value2 = $T08()['Remove'](routedEventHandler2, value);
      routedEventHandler = $T09()['CompareExchange$b1']($T07())(/* ref */ new JSIL['MemberReference'](this, "SetterValueChanged"), value2, routedEventHandler2);
    } while (routedEventHandler !== routedEventHandler2);
  };

  function Style_Seal () {
    this['set_IsSealed'](true);
  };

  function Style_set_BasedOn (value) {
    this['SetValue']($thisType.BasedOnProperty, value);
  };

  function Style_set_IsSealed (value) {
    this['SetValue']($thisType.IsSealedProperty, value);
  };

  function Style_set_Setters (value) {
    this['SetValue']($thisType.SettersProperty, value);
  };

  function Style_set_TargetType (value) {
    this['SetValue']($thisType.TargetTypeProperty, value);
  };

  function Style_Setters_Changed (d, e) {
    var object = $thisType.$Cast(d);
    if (e['get_OldValue']() !== null) {
      var setterBaseCollection = $T05().$Cast(e['get_OldValue']());
      var enumerator = setterBaseCollection['GetEnumerator']();
      try {

        while ($IM00().Call(enumerator, null)) {
          var current = $IM01().Call(enumerator, null);
          current.INTERNAL_ParentStyle = null;
        }
      } finally {
        if (enumerator !== null) {
          $IM02().Call(enumerator, null);
        }
      }
      setterBaseCollection['remove_CollectionChanged']($T12()['New'](object, $thisType.prototype['Setters_CollectionChanged'], function () { return JSIL.GetMethodInfo($thisType, "Setters_CollectionChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs]), false); }));
    }
    if (e['get_NewValue']() !== null) {
      var setterBaseCollection2 = $T05().$Cast(e['get_NewValue']());
      setterBaseCollection2['add_CollectionChanged']($T12()['New'](object, $thisType.prototype['Setters_CollectionChanged'], function () { return JSIL.GetMethodInfo($thisType, "Setters_CollectionChanged", new JSIL.MethodSignature(null, [$asm06.System.Object, $asm01.System.Collections.Specialized.NotifyCollectionChangedEventArgs]), false); }));
      enumerator = setterBaseCollection2['GetEnumerator']();
      try {

        while ($IM00().Call(enumerator, null)) {
          var current2 = $IM01().Call(enumerator, null);
          current2.INTERNAL_ParentStyle = $thisType.$Cast(d);
        }
      } finally {
        if (enumerator !== null) {
          $IM02().Call(enumerator, null);
        }
      }
    }
  };

  function Style_Setters_CollectionChanged (sender, e) {
    switch ((e['get_Action']())['valueOf']()) {
      case 0: 
        var enumerator = $IM03().Call(e['get_NewItems'](), null);
        try {

          while ($IM00().Call(enumerator, null)) {
            var current = $IM04().Call(enumerator, null);
            $T0E().$Cast(current).INTERNAL_ParentStyle = this;
          }
        } finally {
          var disposable = $T10().$As(enumerator);
          if (disposable !== null) {
            $IM02().Call(disposable, null);
          }
        }
        break;

      case 1: 
        enumerator = $IM03().Call(e['get_OldItems'](), null);
        try {

          while ($IM00().Call(enumerator, null)) {
            current = $IM04().Call(enumerator, null);
            $T0E().$Cast(current).INTERNAL_ParentStyle = null;
          }
        } finally {
          disposable = $T10().$As(enumerator);
          if (disposable !== null) {
            $IM02().Call(disposable, null);
          }
        }
        break;

      case 2: 
        enumerator = $IM03().Call(e['get_OldItems'](), null);
        try {

          while ($IM00().Call(enumerator, null)) {
            current = $IM04().Call(enumerator, null);
            $T0E().$Cast(current).INTERNAL_ParentStyle = null;
          }
        } finally {
          disposable = $T10().$As(enumerator);
          if (disposable !== null) {
            $IM02().Call(disposable, null);
          }
        }
        enumerator = $IM03().Call(e['get_NewItems'](), null);
        try {

          while ($IM00().Call(enumerator, null)) {
            current = $IM04().Call(enumerator, null);
            $T0E().$Cast(current).INTERNAL_ParentStyle = this;
          }
        } finally {
          disposable = $T10().$As(enumerator);
          if (disposable !== null) {
            $IM02().Call(disposable, null);
          }
        }
        break;

    }
  };

  function Style_TargetType_Changed (d, e) {
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), 
      Name: "Windows.UI.Xaml.Style", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 1, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Style__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Type")), 
      Style__ctor$01
    );

    $.Method({Static:false, Public:false}, "add_SetterValueChanged", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")), 
      Style_add_SetterValueChanged
    );

    $.Method({Static:true , Public:false}, "BasedOn_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Style_BasedOn_Changed
    );

    $.Method({Static:false, Public:true }, "get_BasedOn", 
      JSIL.MethodSignature.Return($.Type), 
      Style_get_BasedOn
    );

    $.Method({Static:false, Public:true }, "get_IsSealed", 
      JSIL.MethodSignature.Return($.Boolean), 
      Style_get_IsSealed
    );

    $.Method({Static:false, Public:true }, "get_Setters", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.SetterBaseCollection")), 
      Style_get_Setters
    );

    $.Method({Static:false, Public:true }, "get_TargetType", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Type")), 
      Style_get_TargetType
    );

    $.Method({Static:false, Public:false}, "GetActiveValue", 
      new JSIL.MethodSignature($.Object, [$asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")]), 
      Style_GetActiveValue
    );

    $.Method({Static:true , Public:false}, "IsSealed_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Style_IsSealed_Changed
    );

    $.Method({Static:false, Public:false}, "NotifySetterValueChanged", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.Setter")), 
      Style_NotifySetterValueChanged
    );

    $.Method({Static:false, Public:false}, "remove_SetterValueChanged", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")), 
      Style_remove_SetterValueChanged
    );

    $.Method({Static:false, Public:true }, "Seal", 
      JSIL.MethodSignature.Void, 
      Style_Seal
    );

    $.Method({Static:false, Public:true }, "set_BasedOn", 
      JSIL.MethodSignature.Action($.Type), 
      Style_set_BasedOn
    );

    $.Method({Static:false, Public:false}, "set_IsSealed", 
      JSIL.MethodSignature.Action($.Boolean), 
      Style_set_IsSealed
    );

    $.Method({Static:false, Public:true }, "set_Setters", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.SetterBaseCollection")), 
      Style_set_Setters
    );

    $.Method({Static:false, Public:true }, "set_TargetType", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Type")), 
      Style_set_TargetType
    );

    $.Method({Static:true , Public:false}, "Setters_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Style_Setters_Changed
    );

    $.Method({Static:false, Public:false}, "Setters_CollectionChanged", 
      new JSIL.MethodSignature(null, [$.Object, $asm01.TypeRef("System.Collections.Specialized.NotifyCollectionChangedEventArgs")]), 
      Style_Setters_CollectionChanged
    );

    $.Method({Static:true , Public:false}, "TargetType_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Style_TargetType_Changed
    );

    $['Field']({Static:true , Public:true , ReadOnly:true }, "BasedOnProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "IsSealedProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "SettersProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:false, Public:false}, "SetterValueChanged", $asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler")); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "TargetTypeProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    function Style__cctor () {
      $thisType.BasedOnProperty = $T00()['Register']("BasedOn", $thisType.__Type__, $thisType.__Type__, $S00().Construct(null, $T02()['New']($thisType, $thisType['BasedOn_Changed'], function () { return JSIL.GetMethodInfo($thisType, "BasedOn_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.IsSealedProperty = $T00()['Register']("IsSealed", $T03().__Type__, $T04().__Type__, $S00().Construct(null, $T02()['New']($thisType, $thisType['IsSealed_Changed'], function () { return JSIL.GetMethodInfo($thisType, "IsSealed_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.SettersProperty = $T00()['Register']("Setters", $T05().__Type__, $T04().__Type__, $S00().Construct(null, $T02()['New']($thisType, $thisType['Setters_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Setters_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
      $thisType.TargetTypeProperty = $T00()['Register']("TargetType", $T06().__Type__, $T04().__Type__, $S00().Construct(null, $T02()['New']($thisType, $thisType['TargetType_Changed'], function () { return JSIL.GetMethodInfo($thisType, "TargetType_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Style__cctor
    );

    $.Property({Static:false, Public:true }, "BasedOn", $.Type);

    $.Property({Static:false, Public:true }, "IsSealed", $.Boolean);

    $.Property({Static:false, Public:true }, "Setters", $asm00.TypeRef("Windows.UI.Xaml.SetterBaseCollection"));

    $.Property({Static:false, Public:true }, "TargetType", $asm06.TypeRef("System.Type"));

    $.Event({Static:false, Public:false}, "SetterValueChanged", $asm00.TypeRef("Windows.UI.Xaml.RoutedEventHandler"));

    return function (newThisType) { $thisType = newThisType; }; 
  })
    .Attribute($asm03.TypeRef("System.Windows.Markup.ContentPropertyAttribute"), function () { return ["Setters"]; });

})();

/* class Windows.UI.Xaml.TextChangedEventArgs */ 

(function TextChangedEventArgs$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.RoutedEventArgs)) ();
  };

  function TextChangedEventArgs__ctor () {
    $T00().prototype['_ctor'].call(this);
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs"), 
      Name: "Windows.UI.Xaml.TextChangedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      TextChangedEventArgs__ctor
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate Windows.UI.Xaml.TextChangedEventHandler */ 

JSIL.MakeDelegate("Windows.UI.Xaml.TextChangedEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.TextChangedEventArgs")]));

/* enum Windows.UI.Xaml.Visibility */ 

JSIL.MakeEnum(
  {
    FullName: "Windows.UI.Xaml.Visibility", 
    BaseType: $asm06.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Visible: 0, 
    Collapsed: 1, 
  }
);

/* enum Windows.UI.Xaml.TextWrapping */ 

JSIL.MakeEnum(
  {
    FullName: "Windows.UI.Xaml.TextWrapping", 
    BaseType: $asm06.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    NoWrap: 1, 
    Wrap: 2, 
  }
);

/* enum Windows.UI.Xaml.TextAlignment */ 

JSIL.MakeEnum(
  {
    FullName: "Windows.UI.Xaml.TextAlignment", 
    BaseType: $asm06.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Center: 0, 
    Left: 1, 
    Right: 2, 
    Justify: 3, 
  }
);

/* enum Windows.UI.Xaml.HorizontalAlignment */ 

JSIL.MakeEnum(
  {
    FullName: "Windows.UI.Xaml.HorizontalAlignment", 
    BaseType: $asm06.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Left: 0, 
    Center: 1, 
    Right: 2, 
    Stretch: 3, 
  }
);

/* delegate Windows.UI.Xaml.RoutedEventHandler */ 

JSIL.MakeDelegate("Windows.UI.Xaml.RoutedEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.RoutedEventArgs")]));

/* enum Windows.UI.Xaml.VerticalAlignment */ 

JSIL.MakeEnum(
  {
    FullName: "Windows.UI.Xaml.VerticalAlignment", 
    BaseType: $asm06.TypeRef("System.Int32"), 
    IsPublic: true, 
    IsFlags: false, 
  }, 
  {
    Top: 0, 
    Center: 1, 
    Bottom: 2, 
    Stretch: 3, 
  }
);

/* class Windows.UI.Xaml.DependencyPropertyChangedEventArgs */ 

(function DependencyPropertyChangedEventArgs$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };

  function DependencyPropertyChangedEventArgs__ctor (oldValue, newValue, property) {
    this['set_OldValue'](oldValue);
    this['set_NewValue'](newValue);
    this['set_Property'](property);
  };

  function DependencyPropertyChangedEventArgs_get_NewValue () {
    return this.DependencyPropertyChangedEventArgs$NewValue$value;
  };

  function DependencyPropertyChangedEventArgs_get_OldValue () {
    return this.DependencyPropertyChangedEventArgs$OldValue$value;
  };

  function DependencyPropertyChangedEventArgs_get_Property () {
    return this.DependencyPropertyChangedEventArgs$Property$value;
  };

  function DependencyPropertyChangedEventArgs_set_NewValue (value) {
    this.DependencyPropertyChangedEventArgs$NewValue$value = value;
  };

  function DependencyPropertyChangedEventArgs_set_OldValue (value) {
    this.DependencyPropertyChangedEventArgs$OldValue$value = value;
  };

  function DependencyPropertyChangedEventArgs_set_Property (value) {
    this.DependencyPropertyChangedEventArgs$Property$value = value;
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.DependencyPropertyChangedEventArgs", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 3, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:false}, ".ctor", 
      new JSIL.MethodSignature(null, [
          $.Object, $.Object, 
          $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")
        ]), 
      DependencyPropertyChangedEventArgs__ctor
    );

    $.Method({Static:false, Public:true , Virtual:true }, "get_NewValue", 
      JSIL.MethodSignature.Return($.Object), 
      DependencyPropertyChangedEventArgs_get_NewValue
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "get_OldValue", 
      JSIL.MethodSignature.Return($.Object), 
      DependencyPropertyChangedEventArgs_get_OldValue
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "get_Property", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")), 
      DependencyPropertyChangedEventArgs_get_Property
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_NewValue", 
      JSIL.MethodSignature.Action($.Object), 
      DependencyPropertyChangedEventArgs_set_NewValue
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_OldValue", 
      JSIL.MethodSignature.Action($.Object), 
      DependencyPropertyChangedEventArgs_set_OldValue
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_Property", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")), 
      DependencyPropertyChangedEventArgs_set_Property
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $['Field']({Static:false, Public:false}, "DependencyPropertyChangedEventArgs$OldValue$value", $.Object)
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "DependencyPropertyChangedEventArgs$NewValue$value", $.Object)
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "DependencyPropertyChangedEventArgs$Property$value", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true , Virtual:true }, "OldValue", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "NewValue", $.Object);

    $.Property({Static:false, Public:true , Virtual:true }, "Property", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty"));

    $.ImplementInterfaces(
      /* 0 */ $asm00.TypeRef("Windows.UI.Xaml.Data.IDependencyPropertyChangedEventArgs")
    );

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate Windows.UI.Xaml.PropertyChangedCallback */ 

JSIL.MakeDelegate("Windows.UI.Xaml.PropertyChangedCallback", true, [], 
  new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]));

/* class Windows.UI.Xaml.PropertyMetadata */ 

(function PropertyMetadata$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Boolean)) ();
  };

  function PropertyMetadata__ctor$00 () {
  };

  function PropertyMetadata__ctor$01 (defaultValue) {
    this.PropertyMetadata$DefaultValue$value = defaultValue;
  };

  function PropertyMetadata__ctor$02 (defaultValue, propertyChangedCallback) {
    $thisType.prototype['_ctor'].call(this, defaultValue);
    this.PropertyMetadata$PropertyChangedCallback$value = propertyChangedCallback;
  };

  function PropertyMetadata_get_CallPropertyChangedWhenLoadedIntoVisualTree () {
    return this.PropertyMetadata$CallPropertyChangedWhenLoadedIntoVisualTree$value;
  };

  function PropertyMetadata_get_DefaultValue () {
    return this.PropertyMetadata$DefaultValue$value;
  };

  function PropertyMetadata_get_Inherits () {
    return this.PropertyMetadata$Inherits$value;
  };

  function PropertyMetadata_get_PropertyChangedCallback () {
    return this.PropertyMetadata$PropertyChangedCallback$value;
  };

  function PropertyMetadata_set_CallPropertyChangedWhenLoadedIntoVisualTree (value) {
    this.PropertyMetadata$CallPropertyChangedWhenLoadedIntoVisualTree$value = value;
  };

  function PropertyMetadata_set_DefaultValue (value) {
    this.PropertyMetadata$DefaultValue$value = value;
  };

  function PropertyMetadata_set_Inherits (value) {
    this.PropertyMetadata$Inherits$value = value;
  };

  function PropertyMetadata_set_PropertyChangedCallback (value) {
    this.PropertyMetadata$PropertyChangedCallback$value = value;
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.PropertyMetadata", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 2, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      PropertyMetadata__ctor$00
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Action($.Object), 
      PropertyMetadata__ctor$01
    );

    $.Method({Static:false, Public:true }, ".ctor", 
      new JSIL.MethodSignature(null, [$.Object, $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]), 
      PropertyMetadata__ctor$02
    );

    $.Method({Static:false, Public:true }, "get_CallPropertyChangedWhenLoadedIntoVisualTree", 
      JSIL.MethodSignature.Return($.Boolean), 
      PropertyMetadata_get_CallPropertyChangedWhenLoadedIntoVisualTree
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_DefaultValue", 
      JSIL.MethodSignature.Return($.Object), 
      PropertyMetadata_get_DefaultValue
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Inherits", 
      JSIL.MethodSignature.Return($.Boolean), 
      PropertyMetadata_get_Inherits
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_PropertyChangedCallback", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")), 
      PropertyMetadata_get_PropertyChangedCallback
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_CallPropertyChangedWhenLoadedIntoVisualTree", 
      JSIL.MethodSignature.Action($.Boolean), 
      PropertyMetadata_set_CallPropertyChangedWhenLoadedIntoVisualTree
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_DefaultValue", 
      JSIL.MethodSignature.Action($.Object), 
      PropertyMetadata_set_DefaultValue
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Inherits", 
      JSIL.MethodSignature.Action($.Boolean), 
      PropertyMetadata_set_Inherits
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_PropertyChangedCallback", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")), 
      PropertyMetadata_set_PropertyChangedCallback
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $['Field']({Static:false, Public:false}, "PropertyMetadata$DefaultValue$value", $.Object)
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "PropertyMetadata$PropertyChangedCallback$value", $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback"))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "PropertyMetadata$Inherits$value", $.Boolean)
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "PropertyMetadata$CallPropertyChangedWhenLoadedIntoVisualTree$value", $.Boolean)
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:true }, "DefaultValue", $.Object);

    $.Property({Static:false, Public:true }, "PropertyChangedCallback", $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback"));

    $.Property({Static:false, Public:true }, "Inherits", $.Boolean);

    $.Property({Static:false, Public:true }, "CallPropertyChangedWhenLoadedIntoVisualTree", $.Boolean);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.DependencyProperty */ 

(function DependencyProperty$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Type)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_TypeToDependencyProperties)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_TypeToDependencyPropertiesThatRequirePropertyChanged)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Collections.Generic.Dictionary$b2.Of($asm06.System.String, $asm00.Windows.UI.Xaml.DependencyProperty))) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_TypeToStringsToDependencyProperties)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.Reflection.MemberInfo)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Exception"), [$asm06.TypeRef("System.String")]))) ();
  };

  function DependencyProperty__ctor () {
  };

  function DependencyProperty_get_Name () {
    return this.DependencyProperty$Name$value;
  };

  function DependencyProperty_get_OwnerType () {
    return this.DependencyProperty$OwnerType$value;
  };

  function DependencyProperty_get_PropertyType () {
    return this.DependencyProperty$PropertyType$value;
  };

  function DependencyProperty_get_TypeMetadata () {
    return this.DependencyProperty$TypeMetadata$value;
  };

  function DependencyProperty_Register (name, propertyType, ownerType, typeMetadata) {
    var dependencyProperty = new $thisType();
    dependencyProperty.DependencyProperty$Name$value = name;
    dependencyProperty.DependencyProperty$PropertyType$value = propertyType;
    dependencyProperty.DependencyProperty$OwnerType$value = ownerType;
    dependencyProperty.DependencyProperty$TypeMetadata$value = typeMetadata;
    var dependencyProperty2 = dependencyProperty;
    $T03()['Add'](ownerType, dependencyProperty2);
    if (!((typeMetadata === null) || !typeMetadata.PropertyMetadata$CallPropertyChangedWhenLoadedIntoVisualTree$value)) {
      $T04()['Add'](ownerType, dependencyProperty2);
    }
    var dictionaryForType = $T06()['GetDictionaryForType'](ownerType);
    if (dictionaryForType['ContainsKey'](name)) {
      if (dictionaryForType !== null) {
        throw $S00().Construct("Cannot register multiple properties with the same PropertyName");
      }
      dictionaryForType['set_Item'](name, dependencyProperty2);
    } else {
      dictionaryForType['Add'](name, dependencyProperty2);
    }
    return dependencyProperty2;
  };

  function DependencyProperty_set_Name (value) {
    this.DependencyProperty$Name$value = value;
  };

  function DependencyProperty_set_OwnerType (value) {
    this.DependencyProperty$OwnerType$value = value;
  };

  function DependencyProperty_set_PropertyType (value) {
    this.DependencyProperty$PropertyType$value = value;
  };

  function DependencyProperty_set_TypeMetadata (value) {
    this.DependencyProperty$TypeMetadata$value = value;
  };

  function DependencyProperty_toString () {
    if (!(!$T01()['op_Inequality'](this.DependencyProperty$OwnerType$value, null) || (this.DependencyProperty$Name$value === null))) {
      var result = (((this.DependencyProperty$OwnerType$value)['get_Name']() + "." + this.DependencyProperty$Name$value + "Property"));
    } else {
      result = $T09().prototype['toString'].call(this);
    }
    return result;
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.DependencyProperty", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      DependencyProperty__ctor
    );

    $.Method({Static:false, Public:false}, "get_Name", 
      JSIL.MethodSignature.Return($.String), 
      DependencyProperty_get_Name
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_OwnerType", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Type")), 
      DependencyProperty_get_OwnerType
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_PropertyType", 
      JSIL.MethodSignature.Return($asm06.TypeRef("System.Type")), 
      DependencyProperty_get_PropertyType
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "get_TypeMetadata", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata")), 
      DependencyProperty_get_TypeMetadata
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:true }, "Register", 
      new JSIL.MethodSignature($.Type, [
          $.String, $asm06.TypeRef("System.Type"), 
          $asm06.TypeRef("System.Type"), $asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata")
        ]), 
      DependencyProperty_Register
    );

    $.Method({Static:false, Public:false}, "set_Name", 
      JSIL.MethodSignature.Action($.String), 
      DependencyProperty_set_Name
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_OwnerType", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Type")), 
      DependencyProperty_set_OwnerType
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_PropertyType", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Type")), 
      DependencyProperty_set_PropertyType
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "set_TypeMetadata", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata")), 
      DependencyProperty_set_TypeMetadata
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true , Virtual:true }, "toString", 
      JSIL.MethodSignature.Return($.String), 
      DependencyProperty_toString
    );

    $['Field']({Static:false, Public:false}, "DependencyProperty$Name$value", $.String)
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "DependencyProperty$PropertyType$value", $asm06.TypeRef("System.Type"))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "DependencyProperty$OwnerType$value", $asm06.TypeRef("System.Type"))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "DependencyProperty$TypeMetadata$value", $asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:false, Public:false}, "Name", $.String);

    $.Property({Static:false, Public:false}, "PropertyType", $asm06.TypeRef("System.Type"));

    $.Property({Static:false, Public:false}, "OwnerType", $asm06.TypeRef("System.Type"));

    $.Property({Static:false, Public:false}, "TypeMetadata", $asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Window */ 

(function Window$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyProperty)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyMetadata)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.UI.Xaml.PropertyChangedCallback)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.FrameworkElement)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm00.Windows.UI.Xaml.WindowSizeChangedEventHandler)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_EventManager$b2.Of($asm00.Windows.UI.Xaml.WindowSizeChangedEventHandler, $asm00.Windows.UI.Core.WindowSizeChangedEventArgs))) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Func$b1.Of($asm06.System.Object))) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.Action$b1.Of($asm06.System.Object))) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyObject)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize($asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs)) ();
  };
  var $T0D = function () {
    return ($T0D = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T0E = function () {
    return ($T0E = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_EventsHelper)) ();
  };
  var $T0F = function () {
    return ($T0F = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_VisualTreeManager)) ();
  };
  var $T10 = function () {
    return ($T10 = JSIL.Memoize($asm06.System.InvalidOperationException)) ();
  };
  var $T11 = function () {
    return ($T11 = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T12 = function () {
    return ($T12 = JSIL.Memoize($asm00.Windows.Foundation.Rect)) ();
  };
  var $T13 = function () {
    return ($T13 = JSIL.Memoize($asm00.Windows.UI.Core.WindowSizeChangedEventArgs)) ();
  };
  var $T14 = function () {
    return ($T14 = JSIL.Memoize($asm00.Windows.Foundation.Size)) ();
  };
  var $T15 = function () {
    return ($T15 = JSIL.Memoize($asm08.System.Linq.Enumerable)) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.UI.Xaml.PropertyMetadata"), [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Xaml.PropertyChangedCallback")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_EventManager`2", [$asm00.TypeRef("Windows.UI.Xaml.WindowSizeChangedEventHandler"), $asm00.TypeRef("Windows.UI.Core.WindowSizeChangedEventArgs")]), [
        $asm06.TypeRef("System.Func`1", [$asm06.TypeRef("System.Object")]), $asm06.TypeRef("System.String"), 
        $asm06.TypeRef("System.Action`1", [$asm06.TypeRef("System.Object")])
      ]))) ();
  };
  var $S02 = function () {
    return ($S02 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.InvalidOperationException"), [$asm06.TypeRef("System.String")]))) ();
  };
  var $S03 = function () {
    return ($S03 = JSIL.Memoize(new JSIL.ConstructorSignature($asm00.TypeRef("Windows.Foundation.Rect"), [
        $asm06.TypeRef("System.Double"), $asm06.TypeRef("System.Double"), 
        $asm06.TypeRef("System.Double"), $asm06.TypeRef("System.Double")
      ]))) ();
  };
  var $S04 = function () {
    return ($S04 = JSIL.Memoize(JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Core.WindowSizeChangedEventArgs")))) ();
  };

  function Window__ctor () {
    $T04().prototype['_ctor'].call(this);
  };

  function Window_$ladd_SizeChanged$gb__0 () {
    return window;
  };

  function Window_$lContent_Changed$gb__f (evt) {
    JSIL.IgnoredMember("OnMouseOver(evt)", evt).LValue;
  };

  function Window_Activate () {
  };

  function Window_add_SizeChanged (value) {
    if (this._windowSizeChangedEventManager === null) {
      this._windowSizeChangedEventManager = $S01().Construct($T09()['New']($thisType, $thisType['$ladd_SizeChanged$gb__0'], function () { return JSIL.GetMethodInfo($thisType, "$ladd_SizeChanged$gb__0", JSIL.MethodSignature.Return($.Object), true); }), "resize", $T0A()['New'](this, $thisType.prototype['OnWindowSizeChanged'], function () { return JSIL.GetMethodInfo($thisType, "OnWindowSizeChanged", JSIL.MethodSignature.Action($.Object), false); }));
    }
    $T08().prototype['Add'].call(this._windowSizeChangedEventManager, value);
  };

  function Window_Content_Changed (d, e) {
    if (!(true)) {
      var javaScriptToExecute = $T0D()['Format']("\r\ndocument.getElementById(\"INTERNAL_RootElement\");", JSIL.Array.New($T06(), 0));
      var obj = JSIL.IgnoredMember("ExecuteJavaScriptWithResult(javaScriptToExecute, commentForDebugging)", javaScriptToExecute, null).LValue;
      $T0E()['AttachToDomEvents']("mouseover", obj, $T0A()['New']($thisType, $thisType['$lContent_Changed$gb__f'], function () { return JSIL.GetMethodInfo($thisType, "$lContent_Changed$gb__f", JSIL.MethodSignature.Action($.Object), true); }));
    }
    var parent = $T01().$Cast(d);
    var child = $T01().$Cast(e['get_OldValue']());
    var child2 = $T01().$Cast(e['get_NewValue']());
    $T0F()['DetachVisualChildIfNotNull'](child, parent);
    $T0F()['AttachVisualChildIfNotAlreadyAttached'](child2, parent);
  };

  function Window_CreateDomElement (parentRef, /* ref */ domElementWhereToPlaceChildren) {
    throw $S02().Construct("\"CreateDomElement\" should not be called for the Window object.");
  };

  function Window_get_Bounds () {
    var num = $T11().$Cast($T05()['GetRawHtmlBody']().clientWidth);
    var num2 = $T11().$Cast($T05()['GetRawHtmlBody']().clientHeight);
    if (!((isNaN(num)) || (isNaN(num2)))) {
      var result = $S03().Construct(0, 0, num, num2);
    } else {
      result = $S03().Construct(0, 0, 0, 0);
    }
    return result;
  };

  function Window_get_Content () {
    return $T01().$Cast(this['GetValue']($thisType.ContentProperty));
  };

  function Window_get_Current () {
    return $thisType.Window$Current$value;
  };

  function Window_OnWindowSizeChanged$00 (e) {
    var width = $T11().$Cast($T05()['GetRawHtmlBody']().clientWidth);
    var height = $T11().$Cast($T05()['GetRawHtmlBody']().clientHeight);
    var windowSizeChangedEventArgs = new ($T13())();
    (windowSizeChangedEventArgs.WindowSizeChangedEventArgs$Size$value = new ($T14())(width, height));
    $S04().CallVirtual("OnWindowSizeChanged", null, this, windowSizeChangedEventArgs);
  };

  function Window_OnWindowSizeChanged$01 (eventArgs) {
    var $temp00;

    for (var a$0 = $T15()['ToList$b1']($T07())((this._windowSizeChangedEventManager)['get_Handlers']())._items, i$0 = 0, l$0 = ($T15()['ToList$b1']($T07())((this._windowSizeChangedEventManager)['get_Handlers']())._size | 0); i$0 < l$0; ($temp00 = i$0, 
        i$0 = ((i$0 + 1) | 0), 
        $temp00)) {
      var current = a$0[i$0];
      current(this, eventArgs);
    }
  };

  function Window_remove_SizeChanged (value) {
    if (this._windowSizeChangedEventManager !== null) {
      $T08().prototype['Remove'].call(this._windowSizeChangedEventManager, value);
    }
  };

  function Window_set_Content (value) {
    this['SetValue']($thisType.ContentProperty, value);
  };

  function Window_set_Current (value) {
    $thisType.Window$Current$value = value;
  };

  JSIL.MakeType({
      BaseType: $asm00.TypeRef("Windows.UI.Xaml.FrameworkElement"), 
      Name: "Windows.UI.Xaml.Window", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Window__ctor
    );

    $.Method({Static:true , Public:false}, "$ladd_SizeChanged$gb__0", 
      JSIL.MethodSignature.Return($.Object), 
      Window_$ladd_SizeChanged$gb__0
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "$lContent_Changed$gb__f", 
      JSIL.MethodSignature.Action($.Object), 
      Window_$lContent_Changed$gb__f
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "Activate", 
      JSIL.MethodSignature.Void, 
      Window_Activate
    );

    $.Method({Static:false, Public:true }, "add_SizeChanged", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.WindowSizeChangedEventHandler")), 
      Window_add_SizeChanged
    );

    $.Method({Static:true , Public:false}, "Content_Changed", 
      new JSIL.MethodSignature(null, [$asm00.TypeRef("Windows.UI.Xaml.DependencyObject"), $asm00.TypeRef("Windows.UI.Xaml.DependencyPropertyChangedEventArgs")]), 
      Window_Content_Changed
    );

    $.Method({Static:false, Public:true , Virtual:true }, "CreateDomElement", 
      new JSIL.MethodSignature($.Object, [$.Object, $jsilcore.TypeRef("JSIL.Reference", [$.Object])]), 
      Window_CreateDomElement
    );

    $.Method({Static:false, Public:true }, "get_Bounds", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.Foundation.Rect")), 
      Window_get_Bounds
    );

    $.Method({Static:false, Public:true }, "get_Content", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.UIElement")), 
      Window_get_Content
    );

    $.Method({Static:true , Public:true }, "get_Current", 
      JSIL.MethodSignature.Return($.Type), 
      Window_get_Current
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false}, "OnWindowSizeChanged", 
      JSIL.MethodSignature.Action($.Object), 
      Window_OnWindowSizeChanged$00
    )
      .Parameter(0, "e", function (_) {
          _.Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"))
        });

    $.Method({Static:false, Public:false}, "OnWindowSizeChanged", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Core.WindowSizeChangedEventArgs")), 
      Window_OnWindowSizeChanged$01
    );

    $.Method({Static:false, Public:true }, "remove_SizeChanged", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.WindowSizeChangedEventHandler")), 
      Window_remove_SizeChanged
    );

    $.Method({Static:false, Public:true }, "set_Content", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.UIElement")), 
      Window_set_Content
    );

    $.Method({Static:true , Public:true }, "set_Current", 
      JSIL.MethodSignature.Action($.Type), 
      Window_set_Current
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $['Field']({Static:false, Public:false}, "_windowSizeChangedEventManager", $asm00.TypeRef("DotNetForHtml5.Core.INTERNAL_EventManager`2", [$asm00.TypeRef("Windows.UI.Xaml.WindowSizeChangedEventHandler"), $asm00.TypeRef("Windows.UI.Core.WindowSizeChangedEventArgs")])); 
    $['Field']({Static:true , Public:true , ReadOnly:true }, "ContentProperty", $asm00.TypeRef("Windows.UI.Xaml.DependencyProperty")); 
    $['Field']({Static:true , Public:false}, "Window$Current$value", $.Type)
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:true , Public:false}, "CS$$l$g9__CachedAnonymousMethodDelegate1", $asm06.TypeRef("System.Func`1", [$.Object]))
      .Attribute($asm08.TypeRef("System.Runtime.CompilerServices.DynamicAttribute"), function () { return [[false, true]]; })
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:true , Public:false}, "CS$$l$g9__CachedAnonymousMethodDelegate10", $asm06.TypeRef("System.Action`1", [$.Object]))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    function Window__cctor () {
      $thisType.ContentProperty = $T00()['Register']("Content", $T01().__Type__, $thisType.__Type__, $S00().Construct(null, $T03()['New']($thisType, $thisType['Content_Changed'], function () { return JSIL.GetMethodInfo($thisType, "Content_Changed", new JSIL.MethodSignature(null, [$asm00.Windows.UI.Xaml.DependencyObject, $asm00.Windows.UI.Xaml.DependencyPropertyChangedEventArgs]), true); })));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Window__cctor
    );

    $.Property({Static:true , Public:true }, "Current", $.Type);

    $.Property({Static:false, Public:true }, "Bounds", $asm00.TypeRef("Windows.Foundation.Rect"));

    $.Property({Static:false, Public:true }, "Content", $asm00.TypeRef("Windows.UI.Xaml.UIElement"));

    $.Event({Static:false, Public:true }, "SizeChanged", $asm00.TypeRef("Windows.UI.Xaml.WindowSizeChangedEventHandler"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Xaml.Application */ 

(function Application$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Xaml.Window)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm00.Windows.UI.Xaml.UIElement)) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm00.DotNetForHtml5.Core.INTERNAL_HtmlDomManager)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm00.Windows.ApplicationModel.Activation.LaunchActivatedEventArgs)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm00.Windows.UI.Xaml.ResourceDictionary)) ();
  };

  function Application__ctor () {
    $thisType.Application$Current$value = this;
    var window = new ($T00())();
    $T00().Window$Current$value = window;
    window.UIElement$INTERNAL_OuterDomElement$value = window.UIElement$INTERNAL_InnerDomElement$value = $T02()['GetRootDomElement']();
  };

  function Application_get_Current () {
    return $thisType.Application$Current$value;
  };

  function Application_get_Resources () {
    return this.Application$Resources$value;
  };

  function Application_OnLaunched (args) {
  };

  function Application_set_Current (value) {
    $thisType.Application$Current$value = value;
  };

  function Application_set_Resources (value) {
    this.Application$Resources$value = value;
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "Windows.UI.Xaml.Application", 
      IsPublic: true, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      Application__ctor
    );

    $.Method({Static:true , Public:true }, "get_Current", 
      JSIL.MethodSignature.Return($.Type), 
      Application_get_Current
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_Resources", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Xaml.ResourceDictionary")), 
      Application_get_Resources
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:false, Virtual:true }, "OnLaunched", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.ApplicationModel.Activation.LaunchActivatedEventArgs")), 
      Application_OnLaunched
    );

    $.Method({Static:true , Public:true }, "set_Current", 
      JSIL.MethodSignature.Action($.Type), 
      Application_set_Current
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_Resources", 
      JSIL.MethodSignature.Action($asm00.TypeRef("Windows.UI.Xaml.ResourceDictionary")), 
      Application_set_Resources
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $['Field']({Static:true , Public:false}, "Application$Current$value", $.Type)
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Application$Resources$value", $asm00.TypeRef("Windows.UI.Xaml.ResourceDictionary"))
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $.Property({Static:true , Public:true }, "Current", $.Type);

    $.Property({Static:false, Public:true }, "Resources", $asm00.TypeRef("Windows.UI.Xaml.ResourceDictionary"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class System.Windows.MessageBox */ 

(function MessageBox$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm06.System.Action$b1.Of($asm06.System.String))) ();
  };

  function MessageBox_set_INTERNAL_CodeToShowTheMessageBox (value) {
    $thisType._codeToShowTheMessageBox = value;
  };

  JSIL.MakeStaticClass("System.Windows.MessageBox", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "set_INTERNAL_CodeToShowTheMessageBox", 
      JSIL.MethodSignature.Action($asm06.TypeRef("System.Action`1", [$.String])), 
      MessageBox_set_INTERNAL_CodeToShowTheMessageBox
    );

    $['Field']({Static:true , Public:false}, "_codeToShowTheMessageBox", $asm06.TypeRef("System.Action`1", [$.String])); 
    $.Property({Static:true , Public:true }, "INTERNAL_CodeToShowTheMessageBox", $asm06.TypeRef("System.Action`1", [$.String]));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class Windows.UI.Colors */ 

(function Colors$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.Windows.UI.Color)) ();
  };

  function Colors_get_AliceBlue () {
    return $T00()['INTERNAL_ConvertFromInt32'](-984833);
  };

  function Colors_get_AntiqueWhite () {
    return $T00()['INTERNAL_ConvertFromInt32'](-332841);
  };

  function Colors_get_Aqua () {
    return $T00()['INTERNAL_ConvertFromInt32'](-16711681);
  };

  function Colors_get_Aquamarine () {
    return $T00()['INTERNAL_ConvertFromInt32'](-8388652);
  };

  function Colors_get_Azure () {
    return $T00()['INTERNAL_ConvertFromInt32'](-983041);
  };

  function Colors_get_Beige () {
    return $T00()['INTERNAL_ConvertFromInt32'](-657956);
  };

  function Colors_get_Bisque () {
    return $T00()['INTERNAL_ConvertFromInt32'](-6972);
  };

  function Colors_get_Black () {
    return $T00()['INTERNAL_ConvertFromInt32'](-16777216);
  };

  function Colors_get_BlanchedAlmond () {
    return $T00()['INTERNAL_ConvertFromInt32'](-5171);
  };

  function Colors_get_Blue () {
    return $T00()['INTERNAL_ConvertFromInt32'](-16776961);
  };

  function Colors_get_BlueViolet () {
    return $T00()['INTERNAL_ConvertFromInt32'](-7722014);
  };

  function Colors_get_Brown () {
    return $T00()['INTERNAL_ConvertFromInt32'](-5952982);
  };

  function Colors_get_BurlyWood () {
    return $T00()['INTERNAL_ConvertFromInt32'](-2180985);
  };

  function Colors_get_CadetBlue () {
    return $T00()['INTERNAL_ConvertFromInt32'](-10510688);
  };

  function Colors_get_Chartreuse () {
    return $T00()['INTERNAL_ConvertFromInt32'](-8388864);
  };

  function Colors_get_Chocolate () {
    return $T00()['INTERNAL_ConvertFromInt32'](-2987746);
  };

  function Colors_get_Coral () {
    return $T00()['INTERNAL_ConvertFromInt32'](-32944);
  };

  function Colors_get_CornflowerBlue () {
    return $T00()['INTERNAL_ConvertFromInt32'](-10185235);
  };

  function Colors_get_Cornsilk () {
    return $T00()['INTERNAL_ConvertFromInt32'](-1828);
  };

  function Colors_get_Crimson () {
    return $T00()['INTERNAL_ConvertFromInt32'](-2354116);
  };

  function Colors_get_Cyan () {
    return $T00()['INTERNAL_ConvertFromInt32'](-16711681);
  };

  function Colors_get_DarkBlue () {
    return $T00()['INTERNAL_ConvertFromInt32'](-16777077);
  };

  function Colors_get_DarkCyan () {
    return $T00()['INTERNAL_ConvertFromInt32'](-16741493);
  };

  function Colors_get_DarkGoldenrod () {
    return $T00()['INTERNAL_ConvertFromInt32'](-4684277);
  };

  function Colors_get_DarkGray () {
    return $T00()['INTERNAL_ConvertFromInt32'](-5658199);
  };

  function Colors_get_DarkGreen () {
    return $T00()['INTERNAL_ConvertFromInt32'](-16751616);
  };

  function Colors_get_DarkKhaki () {
    return $T00()['INTERNAL_ConvertFromInt32'](-4343957);
  };

  function Colors_get_DarkMagenta () {
    return $T00()['INTERNAL_ConvertFromInt32'](-7667573);
  };

  function Colors_get_DarkOliveGreen () {
    return $T00()['INTERNAL_ConvertFromInt32'](-11179217);
  };

  function Colors_get_DarkOrange () {
    return $T00()['INTERNAL_ConvertFromInt32'](-29696);
  };

  function Colors_get_DarkOrchid () {
    return $T00()['INTERNAL_ConvertFromInt32'](-6737204);
  };

  function Colors_get_DarkRed () {
    return $T00()['INTERNAL_ConvertFromInt32'](-7667712);
  };

  function Colors_get_DarkSalmon () {
    return $T00()['INTERNAL_ConvertFromInt32'](-1468806);
  };

  function Colors_get_DarkSeaGreen () {
    return $T00()['INTERNAL_ConvertFromInt32'](-7357297);
  };

  function Colors_get_DarkSlateBlue () {
    return $T00()['INTERNAL_ConvertFromInt32'](-12042869);
  };

  function Colors_get_DarkSlateGray () {
    return $T00()['INTERNAL_ConvertFromInt32'](-13676721);
  };

  function Colors_get_DarkTurquoise () {
    return $T00()['INTERNAL_ConvertFromInt32'](-16724271);
  };

  function Colors_get_DarkViolet () {
    return $T00()['INTERNAL_ConvertFromInt32'](-7077677);
  };

  function Colors_get_DeepPink () {
    return $T00()['INTERNAL_ConvertFromInt32'](-60269);
  };

  function Colors_get_DeepSkyBlue () {
    return $T00()['INTERNAL_ConvertFromInt32'](-16728065);
  };

  function Colors_get_DimGray () {
    return $T00()['INTERNAL_ConvertFromInt32'](-9868951);
  };

  function Colors_get_DodgerBlue () {
    return $T00()['INTERNAL_ConvertFromInt32'](-14774017);
  };

  function Colors_get_Firebrick () {
    return $T00()['INTERNAL_ConvertFromInt32'](-5103070);
  };

  function Colors_get_FloralWhite () {
    return $T00()['INTERNAL_ConvertFromInt32'](-1296);
  };

  function Colors_get_ForestGreen () {
    return $T00()['INTERNAL_ConvertFromInt32'](-14513374);
  };

  function Colors_get_Fuchsia () {
    return $T00()['INTERNAL_ConvertFromInt32'](-65281);
  };

  function Colors_get_Gainsboro () {
    return $T00()['INTERNAL_ConvertFromInt32'](-2302756);
  };

  function Colors_get_GhostWhite () {
    return $T00()['INTERNAL_ConvertFromInt32'](-460545);
  };

  function Colors_get_Gold () {
    return $T00()['INTERNAL_ConvertFromInt32'](-10496);
  };

  function Colors_get_Goldenrod () {
    return $T00()['INTERNAL_ConvertFromInt32'](-2448096);
  };

  function Colors_get_Gray () {
    return $T00()['INTERNAL_ConvertFromInt32'](-8355712);
  };

  function Colors_get_Green () {
    return $T00()['INTERNAL_ConvertFromInt32'](-16744448);
  };

  function Colors_get_GreenYellow () {
    return $T00()['INTERNAL_ConvertFromInt32'](-5374161);
  };

  function Colors_get_Honeydew () {
    return $T00()['INTERNAL_ConvertFromInt32'](-983056);
  };

  function Colors_get_HotPink () {
    return $T00()['INTERNAL_ConvertFromInt32'](-38476);
  };

  function Colors_get_IndianRed () {
    return $T00()['INTERNAL_ConvertFromInt32'](-3318692);
  };

  function Colors_get_Indigo () {
    return $T00()['INTERNAL_ConvertFromInt32'](-11861886);
  };

  function Colors_get_Ivory () {
    return $T00()['INTERNAL_ConvertFromInt32'](-16);
  };

  function Colors_get_Khaki () {
    return $T00()['INTERNAL_ConvertFromInt32'](-989556);
  };

  function Colors_get_Lavender () {
    return $T00()['INTERNAL_ConvertFromInt32'](-1644806);
  };

  function Colors_get_LavenderBlush () {
    return $T00()['INTERNAL_ConvertFromInt32'](-3851);
  };

  function Colors_get_LawnGreen () {
    return $T00()['INTERNAL_ConvertFromInt32'](-8586240);
  };

  function Colors_get_LemonChiffon () {
    return $T00()['INTERNAL_ConvertFromInt32'](-1331);
  };

  function Colors_get_LightBlue () {
    return $T00()['INTERNAL_ConvertFromInt32'](-5383962);
  };

  function Colors_get_LightCoral () {
    return $T00()['INTERNAL_ConvertFromInt32'](-1015680);
  };

  function Colors_get_LightCyan () {
    return $T00()['INTERNAL_ConvertFromInt32'](-2031617);
  };

  function Colors_get_LightGoldenrodYellow () {
    return $T00()['INTERNAL_ConvertFromInt32'](-329006);
  };

  function Colors_get_LightGray () {
    return $T00()['INTERNAL_ConvertFromInt32'](-2894893);
  };

  function Colors_get_LightGreen () {
    return $T00()['INTERNAL_ConvertFromInt32'](-7278960);
  };

  function Colors_get_LightPink () {
    return $T00()['INTERNAL_ConvertFromInt32'](-18751);
  };

  function Colors_get_LightSalmon () {
    return $T00()['INTERNAL_ConvertFromInt32'](-24454);
  };

  function Colors_get_LightSeaGreen () {
    return $T00()['INTERNAL_ConvertFromInt32'](-14634326);
  };

  function Colors_get_LightSkyBlue () {
    return $T00()['INTERNAL_ConvertFromInt32'](-7876870);
  };

  function Colors_get_LightSlateGray () {
    return $T00()['INTERNAL_ConvertFromInt32'](-8943463);
  };

  function Colors_get_LightSteelBlue () {
    return $T00()['INTERNAL_ConvertFromInt32'](-5192482);
  };

  function Colors_get_LightYellow () {
    return $T00()['INTERNAL_ConvertFromInt32'](-32);
  };

  function Colors_get_Lime () {
    return $T00()['INTERNAL_ConvertFromInt32'](-16711936);
  };

  function Colors_get_LimeGreen () {
    return $T00()['INTERNAL_ConvertFromInt32'](-13447886);
  };

  function Colors_get_Linen () {
    return $T00()['INTERNAL_ConvertFromInt32'](-331546);
  };

  function Colors_get_Magenta () {
    return $T00()['INTERNAL_ConvertFromInt32'](-65281);
  };

  function Colors_get_Maroon () {
    return $T00()['INTERNAL_ConvertFromInt32'](-8388608);
  };

  function Colors_get_MediumAquamarine () {
    return $T00()['INTERNAL_ConvertFromInt32'](-10039894);
  };

  function Colors_get_MediumBlue () {
    return $T00()['INTERNAL_ConvertFromInt32'](-16777011);
  };

  function Colors_get_MediumOrchid () {
    return $T00()['INTERNAL_ConvertFromInt32'](-4565549);
  };

  function Colors_get_MediumPurple () {
    return $T00()['INTERNAL_ConvertFromInt32'](-7114533);
  };

  function Colors_get_MediumSeaGreen () {
    return $T00()['INTERNAL_ConvertFromInt32'](-12799119);
  };

  function Colors_get_MediumSlateBlue () {
    return $T00()['INTERNAL_ConvertFromInt32'](-8689426);
  };

  function Colors_get_MediumSpringGreen () {
    return $T00()['INTERNAL_ConvertFromInt32'](-16713062);
  };

  function Colors_get_MediumTurquoise () {
    return $T00()['INTERNAL_ConvertFromInt32'](-12004916);
  };

  function Colors_get_MediumVioletRed () {
    return $T00()['INTERNAL_ConvertFromInt32'](-3730043);
  };

  function Colors_get_MidnightBlue () {
    return $T00()['INTERNAL_ConvertFromInt32'](-15132304);
  };

  function Colors_get_MintCream () {
    return $T00()['INTERNAL_ConvertFromInt32'](-655366);
  };

  function Colors_get_MistyRose () {
    return $T00()['INTERNAL_ConvertFromInt32'](-6943);
  };

  function Colors_get_Moccasin () {
    return $T00()['INTERNAL_ConvertFromInt32'](-6987);
  };

  function Colors_get_NavajoWhite () {
    return $T00()['INTERNAL_ConvertFromInt32'](-8531);
  };

  function Colors_get_Navy () {
    return $T00()['INTERNAL_ConvertFromInt32'](-16777088);
  };

  function Colors_get_OldLace () {
    return $T00()['INTERNAL_ConvertFromInt32'](-133658);
  };

  function Colors_get_Olive () {
    return $T00()['INTERNAL_ConvertFromInt32'](-8355840);
  };

  function Colors_get_OliveDrab () {
    return $T00()['INTERNAL_ConvertFromInt32'](-9728477);
  };

  function Colors_get_Orange () {
    return $T00()['INTERNAL_ConvertFromInt32'](-23296);
  };

  function Colors_get_OrangeRed () {
    return $T00()['INTERNAL_ConvertFromInt32'](-47872);
  };

  function Colors_get_Orchid () {
    return $T00()['INTERNAL_ConvertFromInt32'](-2461482);
  };

  function Colors_get_PaleGoldenrod () {
    return $T00()['INTERNAL_ConvertFromInt32'](-1120086);
  };

  function Colors_get_PaleGreen () {
    return $T00()['INTERNAL_ConvertFromInt32'](-6751336);
  };

  function Colors_get_PaleTurquoise () {
    return $T00()['INTERNAL_ConvertFromInt32'](-5247250);
  };

  function Colors_get_PaleVioletRed () {
    return $T00()['INTERNAL_ConvertFromInt32'](-2396013);
  };

  function Colors_get_PapayaWhip () {
    return $T00()['INTERNAL_ConvertFromInt32'](-4139);
  };

  function Colors_get_PeachPuff () {
    return $T00()['INTERNAL_ConvertFromInt32'](-9543);
  };

  function Colors_get_Peru () {
    return $T00()['INTERNAL_ConvertFromInt32'](-3308225);
  };

  function Colors_get_Pink () {
    return $T00()['INTERNAL_ConvertFromInt32'](-16181);
  };

  function Colors_get_Plum () {
    return $T00()['INTERNAL_ConvertFromInt32'](-2252579);
  };

  function Colors_get_PowderBlue () {
    return $T00()['INTERNAL_ConvertFromInt32'](-5185306);
  };

  function Colors_get_Purple () {
    return $T00()['INTERNAL_ConvertFromInt32'](-8388480);
  };

  function Colors_get_Red () {
    return $T00()['INTERNAL_ConvertFromInt32'](-65536);
  };

  function Colors_get_RosyBrown () {
    return $T00()['INTERNAL_ConvertFromInt32'](-4419697);
  };

  function Colors_get_RoyalBlue () {
    return $T00()['INTERNAL_ConvertFromInt32'](-12490271);
  };

  function Colors_get_SaddleBrown () {
    return $T00()['INTERNAL_ConvertFromInt32'](-7650029);
  };

  function Colors_get_Salmon () {
    return $T00()['INTERNAL_ConvertFromInt32'](-360334);
  };

  function Colors_get_SandyBrown () {
    return $T00()['INTERNAL_ConvertFromInt32'](-744352);
  };

  function Colors_get_SeaGreen () {
    return $T00()['INTERNAL_ConvertFromInt32'](-13726889);
  };

  function Colors_get_SeaShell () {
    return $T00()['INTERNAL_ConvertFromInt32'](-2578);
  };

  function Colors_get_Sienna () {
    return $T00()['INTERNAL_ConvertFromInt32'](-6270419);
  };

  function Colors_get_Silver () {
    return $T00()['INTERNAL_ConvertFromInt32'](-4144960);
  };

  function Colors_get_SkyBlue () {
    return $T00()['INTERNAL_ConvertFromInt32'](-7876885);
  };

  function Colors_get_SlateBlue () {
    return $T00()['INTERNAL_ConvertFromInt32'](-9807155);
  };

  function Colors_get_SlateGray () {
    return $T00()['INTERNAL_ConvertFromInt32'](-9404272);
  };

  function Colors_get_Snow () {
    return $T00()['INTERNAL_ConvertFromInt32'](-1286);
  };

  function Colors_get_SpringGreen () {
    return $T00()['INTERNAL_ConvertFromInt32'](-16711809);
  };

  function Colors_get_SteelBlue () {
    return $T00()['INTERNAL_ConvertFromInt32'](-12156236);
  };

  function Colors_get_Tan () {
    return $T00()['INTERNAL_ConvertFromInt32'](-2968436);
  };

  function Colors_get_Teal () {
    return $T00()['INTERNAL_ConvertFromInt32'](-16744320);
  };

  function Colors_get_Thistle () {
    return $T00()['INTERNAL_ConvertFromInt32'](-2572328);
  };

  function Colors_get_Tomato () {
    return $T00()['INTERNAL_ConvertFromInt32'](-40121);
  };

  function Colors_get_Transparent () {
    return $T00()['INTERNAL_ConvertFromInt32'](16777215);
  };

  function Colors_get_Turquoise () {
    return $T00()['INTERNAL_ConvertFromInt32'](-12525360);
  };

  function Colors_get_Violet () {
    return $T00()['INTERNAL_ConvertFromInt32'](-1146130);
  };

  function Colors_get_Wheat () {
    return $T00()['INTERNAL_ConvertFromInt32'](-663885);
  };

  function Colors_get_White () {
    return $T00()['INTERNAL_ConvertFromInt32'](-1);
  };

  function Colors_get_WhiteSmoke () {
    return $T00()['INTERNAL_ConvertFromInt32'](-657931);
  };

  function Colors_get_Yellow () {
    return $T00()['INTERNAL_ConvertFromInt32'](-256);
  };

  function Colors_get_YellowGreen () {
    return $T00()['INTERNAL_ConvertFromInt32'](-6632142);
  };

  JSIL.MakeStaticClass("Windows.UI.Colors", true, [], function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "get_AliceBlue", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_AliceBlue
    );

    $.Method({Static:true , Public:true }, "get_AntiqueWhite", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_AntiqueWhite
    );

    $.Method({Static:true , Public:true }, "get_Aqua", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Aqua
    );

    $.Method({Static:true , Public:true }, "get_Aquamarine", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Aquamarine
    );

    $.Method({Static:true , Public:true }, "get_Azure", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Azure
    );

    $.Method({Static:true , Public:true }, "get_Beige", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Beige
    );

    $.Method({Static:true , Public:true }, "get_Bisque", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Bisque
    );

    $.Method({Static:true , Public:true }, "get_Black", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Black
    );

    $.Method({Static:true , Public:true }, "get_BlanchedAlmond", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_BlanchedAlmond
    );

    $.Method({Static:true , Public:true }, "get_Blue", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Blue
    );

    $.Method({Static:true , Public:true }, "get_BlueViolet", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_BlueViolet
    );

    $.Method({Static:true , Public:true }, "get_Brown", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Brown
    );

    $.Method({Static:true , Public:true }, "get_BurlyWood", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_BurlyWood
    );

    $.Method({Static:true , Public:true }, "get_CadetBlue", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_CadetBlue
    );

    $.Method({Static:true , Public:true }, "get_Chartreuse", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Chartreuse
    );

    $.Method({Static:true , Public:true }, "get_Chocolate", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Chocolate
    );

    $.Method({Static:true , Public:true }, "get_Coral", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Coral
    );

    $.Method({Static:true , Public:true }, "get_CornflowerBlue", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_CornflowerBlue
    );

    $.Method({Static:true , Public:true }, "get_Cornsilk", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Cornsilk
    );

    $.Method({Static:true , Public:true }, "get_Crimson", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Crimson
    );

    $.Method({Static:true , Public:true }, "get_Cyan", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Cyan
    );

    $.Method({Static:true , Public:true }, "get_DarkBlue", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_DarkBlue
    );

    $.Method({Static:true , Public:true }, "get_DarkCyan", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_DarkCyan
    );

    $.Method({Static:true , Public:true }, "get_DarkGoldenrod", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_DarkGoldenrod
    );

    $.Method({Static:true , Public:true }, "get_DarkGray", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_DarkGray
    );

    $.Method({Static:true , Public:true }, "get_DarkGreen", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_DarkGreen
    );

    $.Method({Static:true , Public:true }, "get_DarkKhaki", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_DarkKhaki
    );

    $.Method({Static:true , Public:true }, "get_DarkMagenta", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_DarkMagenta
    );

    $.Method({Static:true , Public:true }, "get_DarkOliveGreen", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_DarkOliveGreen
    );

    $.Method({Static:true , Public:true }, "get_DarkOrange", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_DarkOrange
    );

    $.Method({Static:true , Public:true }, "get_DarkOrchid", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_DarkOrchid
    );

    $.Method({Static:true , Public:true }, "get_DarkRed", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_DarkRed
    );

    $.Method({Static:true , Public:true }, "get_DarkSalmon", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_DarkSalmon
    );

    $.Method({Static:true , Public:true }, "get_DarkSeaGreen", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_DarkSeaGreen
    );

    $.Method({Static:true , Public:true }, "get_DarkSlateBlue", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_DarkSlateBlue
    );

    $.Method({Static:true , Public:true }, "get_DarkSlateGray", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_DarkSlateGray
    );

    $.Method({Static:true , Public:true }, "get_DarkTurquoise", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_DarkTurquoise
    );

    $.Method({Static:true , Public:true }, "get_DarkViolet", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_DarkViolet
    );

    $.Method({Static:true , Public:true }, "get_DeepPink", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_DeepPink
    );

    $.Method({Static:true , Public:true }, "get_DeepSkyBlue", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_DeepSkyBlue
    );

    $.Method({Static:true , Public:true }, "get_DimGray", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_DimGray
    );

    $.Method({Static:true , Public:true }, "get_DodgerBlue", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_DodgerBlue
    );

    $.Method({Static:true , Public:true }, "get_Firebrick", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Firebrick
    );

    $.Method({Static:true , Public:true }, "get_FloralWhite", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_FloralWhite
    );

    $.Method({Static:true , Public:true }, "get_ForestGreen", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_ForestGreen
    );

    $.Method({Static:true , Public:true }, "get_Fuchsia", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Fuchsia
    );

    $.Method({Static:true , Public:true }, "get_Gainsboro", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Gainsboro
    );

    $.Method({Static:true , Public:true }, "get_GhostWhite", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_GhostWhite
    );

    $.Method({Static:true , Public:true }, "get_Gold", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Gold
    );

    $.Method({Static:true , Public:true }, "get_Goldenrod", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Goldenrod
    );

    $.Method({Static:true , Public:true }, "get_Gray", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Gray
    );

    $.Method({Static:true , Public:true }, "get_Green", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Green
    );

    $.Method({Static:true , Public:true }, "get_GreenYellow", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_GreenYellow
    );

    $.Method({Static:true , Public:true }, "get_Honeydew", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Honeydew
    );

    $.Method({Static:true , Public:true }, "get_HotPink", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_HotPink
    );

    $.Method({Static:true , Public:true }, "get_IndianRed", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_IndianRed
    );

    $.Method({Static:true , Public:true }, "get_Indigo", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Indigo
    );

    $.Method({Static:true , Public:true }, "get_Ivory", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Ivory
    );

    $.Method({Static:true , Public:true }, "get_Khaki", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Khaki
    );

    $.Method({Static:true , Public:true }, "get_Lavender", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Lavender
    );

    $.Method({Static:true , Public:true }, "get_LavenderBlush", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_LavenderBlush
    );

    $.Method({Static:true , Public:true }, "get_LawnGreen", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_LawnGreen
    );

    $.Method({Static:true , Public:true }, "get_LemonChiffon", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_LemonChiffon
    );

    $.Method({Static:true , Public:true }, "get_LightBlue", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_LightBlue
    );

    $.Method({Static:true , Public:true }, "get_LightCoral", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_LightCoral
    );

    $.Method({Static:true , Public:true }, "get_LightCyan", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_LightCyan
    );

    $.Method({Static:true , Public:true }, "get_LightGoldenrodYellow", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_LightGoldenrodYellow
    );

    $.Method({Static:true , Public:true }, "get_LightGray", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_LightGray
    );

    $.Method({Static:true , Public:true }, "get_LightGreen", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_LightGreen
    );

    $.Method({Static:true , Public:true }, "get_LightPink", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_LightPink
    );

    $.Method({Static:true , Public:true }, "get_LightSalmon", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_LightSalmon
    );

    $.Method({Static:true , Public:true }, "get_LightSeaGreen", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_LightSeaGreen
    );

    $.Method({Static:true , Public:true }, "get_LightSkyBlue", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_LightSkyBlue
    );

    $.Method({Static:true , Public:true }, "get_LightSlateGray", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_LightSlateGray
    );

    $.Method({Static:true , Public:true }, "get_LightSteelBlue", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_LightSteelBlue
    );

    $.Method({Static:true , Public:true }, "get_LightYellow", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_LightYellow
    );

    $.Method({Static:true , Public:true }, "get_Lime", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Lime
    );

    $.Method({Static:true , Public:true }, "get_LimeGreen", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_LimeGreen
    );

    $.Method({Static:true , Public:true }, "get_Linen", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Linen
    );

    $.Method({Static:true , Public:true }, "get_Magenta", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Magenta
    );

    $.Method({Static:true , Public:true }, "get_Maroon", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Maroon
    );

    $.Method({Static:true , Public:true }, "get_MediumAquamarine", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_MediumAquamarine
    );

    $.Method({Static:true , Public:true }, "get_MediumBlue", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_MediumBlue
    );

    $.Method({Static:true , Public:true }, "get_MediumOrchid", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_MediumOrchid
    );

    $.Method({Static:true , Public:true }, "get_MediumPurple", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_MediumPurple
    );

    $.Method({Static:true , Public:true }, "get_MediumSeaGreen", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_MediumSeaGreen
    );

    $.Method({Static:true , Public:true }, "get_MediumSlateBlue", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_MediumSlateBlue
    );

    $.Method({Static:true , Public:true }, "get_MediumSpringGreen", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_MediumSpringGreen
    );

    $.Method({Static:true , Public:true }, "get_MediumTurquoise", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_MediumTurquoise
    );

    $.Method({Static:true , Public:true }, "get_MediumVioletRed", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_MediumVioletRed
    );

    $.Method({Static:true , Public:true }, "get_MidnightBlue", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_MidnightBlue
    );

    $.Method({Static:true , Public:true }, "get_MintCream", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_MintCream
    );

    $.Method({Static:true , Public:true }, "get_MistyRose", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_MistyRose
    );

    $.Method({Static:true , Public:true }, "get_Moccasin", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Moccasin
    );

    $.Method({Static:true , Public:true }, "get_NavajoWhite", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_NavajoWhite
    );

    $.Method({Static:true , Public:true }, "get_Navy", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Navy
    );

    $.Method({Static:true , Public:true }, "get_OldLace", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_OldLace
    );

    $.Method({Static:true , Public:true }, "get_Olive", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Olive
    );

    $.Method({Static:true , Public:true }, "get_OliveDrab", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_OliveDrab
    );

    $.Method({Static:true , Public:true }, "get_Orange", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Orange
    );

    $.Method({Static:true , Public:true }, "get_OrangeRed", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_OrangeRed
    );

    $.Method({Static:true , Public:true }, "get_Orchid", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Orchid
    );

    $.Method({Static:true , Public:true }, "get_PaleGoldenrod", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_PaleGoldenrod
    );

    $.Method({Static:true , Public:true }, "get_PaleGreen", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_PaleGreen
    );

    $.Method({Static:true , Public:true }, "get_PaleTurquoise", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_PaleTurquoise
    );

    $.Method({Static:true , Public:true }, "get_PaleVioletRed", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_PaleVioletRed
    );

    $.Method({Static:true , Public:true }, "get_PapayaWhip", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_PapayaWhip
    );

    $.Method({Static:true , Public:true }, "get_PeachPuff", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_PeachPuff
    );

    $.Method({Static:true , Public:true }, "get_Peru", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Peru
    );

    $.Method({Static:true , Public:true }, "get_Pink", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Pink
    );

    $.Method({Static:true , Public:true }, "get_Plum", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Plum
    );

    $.Method({Static:true , Public:true }, "get_PowderBlue", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_PowderBlue
    );

    $.Method({Static:true , Public:true }, "get_Purple", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Purple
    );

    $.Method({Static:true , Public:true }, "get_Red", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Red
    );

    $.Method({Static:true , Public:true }, "get_RosyBrown", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_RosyBrown
    );

    $.Method({Static:true , Public:true }, "get_RoyalBlue", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_RoyalBlue
    );

    $.Method({Static:true , Public:true }, "get_SaddleBrown", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_SaddleBrown
    );

    $.Method({Static:true , Public:true }, "get_Salmon", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Salmon
    );

    $.Method({Static:true , Public:true }, "get_SandyBrown", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_SandyBrown
    );

    $.Method({Static:true , Public:true }, "get_SeaGreen", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_SeaGreen
    );

    $.Method({Static:true , Public:true }, "get_SeaShell", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_SeaShell
    );

    $.Method({Static:true , Public:true }, "get_Sienna", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Sienna
    );

    $.Method({Static:true , Public:true }, "get_Silver", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Silver
    );

    $.Method({Static:true , Public:true }, "get_SkyBlue", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_SkyBlue
    );

    $.Method({Static:true , Public:true }, "get_SlateBlue", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_SlateBlue
    );

    $.Method({Static:true , Public:true }, "get_SlateGray", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_SlateGray
    );

    $.Method({Static:true , Public:true }, "get_Snow", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Snow
    );

    $.Method({Static:true , Public:true }, "get_SpringGreen", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_SpringGreen
    );

    $.Method({Static:true , Public:true }, "get_SteelBlue", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_SteelBlue
    );

    $.Method({Static:true , Public:true }, "get_Tan", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Tan
    );

    $.Method({Static:true , Public:true }, "get_Teal", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Teal
    );

    $.Method({Static:true , Public:true }, "get_Thistle", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Thistle
    );

    $.Method({Static:true , Public:true }, "get_Tomato", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Tomato
    );

    $.Method({Static:true , Public:true }, "get_Transparent", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Transparent
    );

    $.Method({Static:true , Public:true }, "get_Turquoise", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Turquoise
    );

    $.Method({Static:true , Public:true }, "get_Violet", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Violet
    );

    $.Method({Static:true , Public:true }, "get_Wheat", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Wheat
    );

    $.Method({Static:true , Public:true }, "get_White", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_White
    );

    $.Method({Static:true , Public:true }, "get_WhiteSmoke", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_WhiteSmoke
    );

    $.Method({Static:true , Public:true }, "get_Yellow", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_Yellow
    );

    $.Method({Static:true , Public:true }, "get_YellowGreen", 
      JSIL.MethodSignature.Return($asm00.TypeRef("Windows.UI.Color")), 
      Colors_get_YellowGreen
    );

    $.Property({Static:true , Public:true }, "AliceBlue", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "AntiqueWhite", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Aqua", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Aquamarine", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Azure", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Beige", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Bisque", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Black", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "BlanchedAlmond", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Blue", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "BlueViolet", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Brown", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "BurlyWood", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "CadetBlue", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Chartreuse", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Chocolate", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Coral", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "CornflowerBlue", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Cornsilk", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Crimson", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Cyan", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "DarkBlue", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "DarkCyan", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "DarkGoldenrod", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "DarkGray", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "DarkGreen", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "DarkKhaki", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "DarkMagenta", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "DarkOliveGreen", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "DarkOrange", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "DarkOrchid", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "DarkRed", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "DarkSalmon", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "DarkSeaGreen", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "DarkSlateBlue", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "DarkSlateGray", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "DarkTurquoise", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "DarkViolet", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "DeepPink", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "DeepSkyBlue", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "DimGray", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "DodgerBlue", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Firebrick", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "FloralWhite", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "ForestGreen", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Fuchsia", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Gainsboro", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "GhostWhite", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Gold", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Goldenrod", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Gray", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Green", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "GreenYellow", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Honeydew", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "HotPink", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "IndianRed", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Indigo", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Ivory", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Khaki", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Lavender", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "LavenderBlush", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "LawnGreen", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "LemonChiffon", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "LightBlue", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "LightCoral", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "LightCyan", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "LightGoldenrodYellow", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "LightGray", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "LightGreen", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "LightPink", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "LightSalmon", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "LightSeaGreen", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "LightSkyBlue", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "LightSlateGray", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "LightSteelBlue", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "LightYellow", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Lime", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "LimeGreen", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Linen", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Magenta", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Maroon", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "MediumAquamarine", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "MediumBlue", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "MediumOrchid", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "MediumPurple", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "MediumSeaGreen", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "MediumSlateBlue", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "MediumSpringGreen", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "MediumTurquoise", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "MediumVioletRed", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "MidnightBlue", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "MintCream", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "MistyRose", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Moccasin", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "NavajoWhite", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Navy", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "OldLace", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Olive", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "OliveDrab", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Orange", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "OrangeRed", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Orchid", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "PaleGoldenrod", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "PaleGreen", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "PaleTurquoise", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "PaleVioletRed", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "PapayaWhip", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "PeachPuff", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Peru", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Pink", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Plum", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "PowderBlue", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Purple", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Red", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "RosyBrown", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "RoyalBlue", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "SaddleBrown", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Salmon", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "SandyBrown", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "SeaGreen", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "SeaShell", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Sienna", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Silver", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "SkyBlue", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "SlateBlue", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "SlateGray", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Snow", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "SpringGreen", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "SteelBlue", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Tan", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Teal", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Thistle", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Tomato", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Transparent", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Turquoise", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Violet", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Wheat", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "White", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "WhiteSmoke", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "Yellow", $asm00.TypeRef("Windows.UI.Color"));

    $.Property({Static:true , Public:true }, "YellowGreen", $asm00.TypeRef("Windows.UI.Color"));

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* enum Windows.UI.Colors+INTERNAL_ColorsEnum */ 

JSIL.MakeEnum(
  {
    FullName: "Windows.UI.Colors+INTERNAL_ColorsEnum", 
    BaseType: $asm06.TypeRef("System.Int32"), 
    IsPublic: false, 
    IsFlags: false, 
  }, 
  {
    Black: -16777216, 
    Navy: -16777088, 
    DarkBlue: -16777077, 
    MediumBlue: -16777011, 
    Blue: -16776961, 
    DarkGreen: -16751616, 
    Green: -16744448, 
    Teal: -16744320, 
    DarkCyan: -16741493, 
    DeepSkyBlue: -16728065, 
    DarkTurquoise: -16724271, 
    MediumSpringGreen: -16713062, 
    Lime: -16711936, 
    SpringGreen: -16711809, 
    Aqua: -16711681, 
    Cyan: -16711681, 
    MidnightBlue: -15132304, 
    DodgerBlue: -14774017, 
    LightSeaGreen: -14634326, 
    ForestGreen: -14513374, 
    SeaGreen: -13726889, 
    DarkSlateGray: -13676721, 
    LimeGreen: -13447886, 
    MediumSeaGreen: -12799119, 
    Turquoise: -12525360, 
    RoyalBlue: -12490271, 
    SteelBlue: -12156236, 
    DarkSlateBlue: -12042869, 
    MediumTurquoise: -12004916, 
    Indigo: -11861886, 
    DarkOliveGreen: -11179217, 
    CadetBlue: -10510688, 
    CornflowerBlue: -10185235, 
    MediumAquamarine: -10039894, 
    DimGray: -9868951, 
    SlateBlue: -9807155, 
    OliveDrab: -9728477, 
    SlateGray: -9404272, 
    LightSlateGray: -8943463, 
    MediumSlateBlue: -8689426, 
    LawnGreen: -8586240, 
    Chartreuse: -8388864, 
    Aquamarine: -8388652, 
    Maroon: -8388608, 
    Purple: -8388480, 
    Olive: -8355840, 
    Gray: -8355712, 
    SkyBlue: -7876885, 
    LightSkyBlue: -7876870, 
    BlueViolet: -7722014, 
    DarkRed: -7667712, 
    DarkMagenta: -7667573, 
    SaddleBrown: -7650029, 
    DarkSeaGreen: -7357297, 
    LightGreen: -7278960, 
    MediumPurple: -7114533, 
    DarkViolet: -7077677, 
    PaleGreen: -6751336, 
    DarkOrchid: -6737204, 
    YellowGreen: -6632142, 
    Sienna: -6270419, 
    Brown: -5952982, 
    DarkGray: -5658199, 
    LightBlue: -5383962, 
    GreenYellow: -5374161, 
    PaleTurquoise: -5247250, 
    LightSteelBlue: -5192482, 
    PowderBlue: -5185306, 
    Firebrick: -5103070, 
    DarkGoldenrod: -4684277, 
    MediumOrchid: -4565549, 
    RosyBrown: -4419697, 
    DarkKhaki: -4343957, 
    Silver: -4144960, 
    MediumVioletRed: -3730043, 
    IndianRed: -3318692, 
    Peru: -3308225, 
    Chocolate: -2987746, 
    Tan: -2968436, 
    LightGray: -2894893, 
    Thistle: -2572328, 
    Orchid: -2461482, 
    Goldenrod: -2448096, 
    PaleVioletRed: -2396013, 
    Crimson: -2354116, 
    Gainsboro: -2302756, 
    Plum: -2252579, 
    BurlyWood: -2180985, 
    LightCyan: -2031617, 
    Lavender: -1644806, 
    DarkSalmon: -1468806, 
    Violet: -1146130, 
    PaleGoldenrod: -1120086, 
    LightCoral: -1015680, 
    Khaki: -989556, 
    AliceBlue: -984833, 
    Honeydew: -983056, 
    Azure: -983041, 
    SandyBrown: -744352, 
    Wheat: -663885, 
    Beige: -657956, 
    WhiteSmoke: -657931, 
    MintCream: -655366, 
    GhostWhite: -460545, 
    Salmon: -360334, 
    AntiqueWhite: -332841, 
    Linen: -331546, 
    LightGoldenrodYellow: -329006, 
    OldLace: -133658, 
    Red: -65536, 
    Magenta: -65281, 
    Fuchsia: -65281, 
    DeepPink: -60269, 
    OrangeRed: -47872, 
    Tomato: -40121, 
    HotPink: -38476, 
    Coral: -32944, 
    DarkOrange: -29696, 
    LightSalmon: -24454, 
    Orange: -23296, 
    LightPink: -18751, 
    Pink: -16181, 
    Gold: -10496, 
    PeachPuff: -9543, 
    NavajoWhite: -8531, 
    Moccasin: -6987, 
    Bisque: -6972, 
    MistyRose: -6943, 
    BlanchedAlmond: -5171, 
    PapayaWhip: -4139, 
    LavenderBlush: -3851, 
    SeaShell: -2578, 
    Cornsilk: -1828, 
    LemonChiffon: -1331, 
    FloralWhite: -1296, 
    Snow: -1286, 
    Yellow: -256, 
    LightYellow: -32, 
    Ivory: -16, 
    White: -1, 
    Transparent: 16777215, 
  }
);

/* struct Windows.UI.Color */ 

(function Color$Members () {
  var $, $thisType;
  var $T00 = function () {
    return ($T00 = JSIL.Memoize($asm00.DotNetForHtml5.Core.TypeFromStringConverters)) ();
  };
  var $T01 = function () {
    return ($T01 = JSIL.Memoize($asm06.System.Func$b2.Of($asm06.System.String, $asm06.System.Object))) ();
  };
  var $T02 = function () {
    return ($T02 = JSIL.Memoize($asm06.System.Byte)) ();
  };
  var $T03 = function () {
    return ($T03 = JSIL.Memoize($asm06.System.Int32)) ();
  };
  var $T04 = function () {
    return ($T04 = JSIL.Memoize($asm06.System.String)) ();
  };
  var $T05 = function () {
    return ($T05 = JSIL.Memoize($asm06.System.Exception)) ();
  };
  var $T06 = function () {
    return ($T06 = JSIL.Memoize($asm00.Windows.UI.Colors_INTERNAL_ColorsEnum)) ();
  };
  var $T07 = function () {
    return ($T07 = JSIL.Memoize($asm06.System.Enum)) ();
  };
  var $T08 = function () {
    return ($T08 = JSIL.Memoize($asm06.System.Object)) ();
  };
  var $T09 = function () {
    return ($T09 = JSIL.Memoize($asm06.System.Globalization.NumberStyles)) ();
  };
  var $T0A = function () {
    return ($T0A = JSIL.Memoize($asm06.System.Double)) ();
  };
  var $T0B = function () {
    return ($T0B = JSIL.Memoize($asm06.System.Char)) ();
  };
  var $T0C = function () {
    return ($T0C = JSIL.Memoize(System.Array.Of($asm06.System.String))) ();
  };
  var $S00 = function () {
    return ($S00 = JSIL.Memoize(new JSIL.MethodSignature($asm06.TypeRef("System.Int32"), [$asm06.TypeRef("System.String"), $asm06.TypeRef("System.Globalization.NumberStyles")]))) ();
  };
  var $S01 = function () {
    return ($S01 = JSIL.Memoize(new JSIL.ConstructorSignature($asm06.TypeRef("System.Exception"), [$asm06.TypeRef("System.String"), $asm06.TypeRef("System.Exception")]))) ();
  };

  function Color_FromArgb (a, r, g, b) {
    var result = new $thisType();
    result.Color$A$value = (a | 0);
    result.Color$R$value = (r | 0);
    result.Color$G$value = (g | 0);
    result.Color$B$value = (b | 0);
    return result;
  };

  function Color_get_A () {
    return this.Color$A$value;
  };

  function Color_get_B () {
    return this.Color$B$value;
  };

  function Color_get_G () {
    return this.Color$G$value;
  };

  function Color_get_R () {
    return this.Color$R$value;
  };

  function Color_INTERNAL_ConvertFromInt32 (colorAsInt32) {
    var result = new $thisType();
    result.Color$A$value = (((colorAsInt32 | 0) >> 24) & 255 & 0xFF);
    result.Color$R$value = (((colorAsInt32 | 0) >> 16) & 255 & 0xFF);
    result.Color$G$value = (((colorAsInt32 | 0) >> 8) & 255 & 0xFF);
    result.Color$B$value = ((colorAsInt32 | 0) & 255 & 0xFF);
    return result;
  };

  function Color_INTERNAL_ConvertFromString (colorcode, $exception) {
    try {
      if (!(System.String.StartsWith(colorcode, "#"))) {
        var colorAsInt = $T06().$Cast($T07()['Parse']($T06().__Type__, colorcode));
        var result = $thisType['INTERNAL_ConvertFromInt32'](colorAsInt['valueOf']())['MemberwiseClone']();
      } else {
        colorcode = (System.String.Replace(colorcode, "#", ""));
        if ((colorcode.length | 0) === 6) {
          colorcode = (JSIL.ConcatString("FF", colorcode));
        }
        var colorAsInt2 = ($S00().CallStatic($T03(), "Parse", null, System.String.Replace(colorcode, "#", ""), $T09().HexNumber) | 0);
        result = $thisType['INTERNAL_ConvertFromInt32'](colorAsInt2)['MemberwiseClone']();
      }
    } catch ($exception) {
      throw $S01().Construct(JSIL.ConcatString("Invalid color: ", colorcode), $exception);
    }
    return result;
  };

  function Color_INTERNAL_ToHtmlString () {
    return JSIL.ConcatString.apply(null, JSIL.Array.New($T04(), ["rgba(", (this.Color$R$value).toString(), ", ", (this.Color$G$value).toString(), ", ", (this.Color$B$value).toString(), ", ", System.String.Replace((+((+(this.Color$A$value) / 255))).toString(), ",", "."), ")"]));
  };

  function Color_set_A (value) {
    this.Color$A$value = (value | 0);
  };

  function Color_set_B (value) {
    this.Color$B$value = (value | 0);
  };

  function Color_set_G (value) {
    this.Color$G$value = (value | 0);
  };

  function Color_set_R (value) {
    this.Color$R$value = (value | 0);
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.ValueType"), 
      Name: "Windows.UI.Color", 
      IsPublic: true, 
      IsReferenceType: false, 
      MaximumConstructorArguments: 0, 
      SequentialLayout: true, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:true , Public:true }, "FromArgb", 
      new JSIL.MethodSignature($.Type, [
          $.Byte, $.Byte, 
          $.Byte, $.Byte
        ]), 
      Color_FromArgb
    );

    $.Method({Static:false, Public:true }, "get_A", 
      JSIL.MethodSignature.Return($.Byte), 
      Color_get_A
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_B", 
      JSIL.MethodSignature.Return($.Byte), 
      Color_get_B
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_G", 
      JSIL.MethodSignature.Return($.Byte), 
      Color_get_G
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "get_R", 
      JSIL.MethodSignature.Return($.Byte), 
      Color_get_R
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:true , Public:false}, "INTERNAL_ConvertFromInt32", 
      new JSIL.MethodSignature($.Type, [$.Int32]), 
      Color_INTERNAL_ConvertFromInt32
    );

    $.Method({Static:true , Public:false}, "INTERNAL_ConvertFromString", 
      new JSIL.MethodSignature($.Object, [$.String]), 
      Color_INTERNAL_ConvertFromString
    );

    $.Method({Static:false, Public:false}, "INTERNAL_ToHtmlString", 
      JSIL.MethodSignature.Return($.String), 
      Color_INTERNAL_ToHtmlString
    );

    $.Method({Static:false, Public:true }, "set_A", 
      JSIL.MethodSignature.Action($.Byte), 
      Color_set_A
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_B", 
      JSIL.MethodSignature.Action($.Byte), 
      Color_set_B
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_G", 
      JSIL.MethodSignature.Action($.Byte), 
      Color_set_G
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $.Method({Static:false, Public:true }, "set_R", 
      JSIL.MethodSignature.Action($.Byte), 
      Color_set_R
    )
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute"));

    $['Field']({Static:false, Public:false}, "Color$A$value", $.Byte)
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Color$B$value", $.Byte)
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Color$G$value", $.Byte)
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    $['Field']({Static:false, Public:false}, "Color$R$value", $.Byte)
      .Attribute($asm06.TypeRef("System.Runtime.CompilerServices.CompilerGeneratedAttribute")); 
    function Color__cctor () {
      $T00()['RegisterConverter']($thisType.__Type__, $T01()['New']($thisType, $thisType['INTERNAL_ConvertFromString'], function () { return JSIL.GetMethodInfo($thisType, "INTERNAL_ConvertFromString", new JSIL.MethodSignature($asm06.System.Object, [$asm06.System.String]), true); }));
    };


    $.Method({Static:true , Public:false}, ".cctor", 
      JSIL.MethodSignature.Void, 
      Color__cctor
    );

    $.Property({Static:false, Public:true }, "A", $.Byte);

    $.Property({Static:false, Public:true }, "B", $.Byte);

    $.Property({Static:false, Public:true }, "G", $.Byte);

    $.Property({Static:false, Public:true }, "R", $.Byte);

    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* class DotNetForHtml5.Core.WorkaroundFixMe */ 

(function WorkaroundFixMe$Members () {
  var $, $thisType;
  function WorkaroundFixMe__ctor () {
  };

  JSIL.MakeType({
      BaseType: $asm06.TypeRef("System.Object"), 
      Name: "DotNetForHtml5.Core.WorkaroundFixMe", 
      IsPublic: false, 
      IsReferenceType: true, 
      MaximumConstructorArguments: 0, 
    }, function ($interfaceBuilder) {
    $ = $interfaceBuilder;

    $.Method({Static:false, Public:true }, ".ctor", 
      JSIL.MethodSignature.Void, 
      WorkaroundFixMe__ctor
    );

    $['Field']({Static:false, Public:false}, "x", $asm04.TypeRef("System.Xml.Serialization.XmlSerializer")); 
    return function (newThisType) { $thisType = newThisType; }; 
  });

})();

/* delegate Windows.UI.Xaml.WindowSizeChangedEventHandler */ 

JSIL.MakeDelegate("Windows.UI.Xaml.WindowSizeChangedEventHandler", true, [], 
  new JSIL.MethodSignature(null, [$asm06.TypeRef("System.Object"), $asm00.TypeRef("Windows.UI.Core.WindowSizeChangedEventArgs")]));

